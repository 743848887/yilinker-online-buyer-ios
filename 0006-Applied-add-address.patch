From 14f6d87cdcee9ffa9a0130e588aa74c12268a77b Mon Sep 17 00:00:00 2001
From: Rj <rj.constantino@easyshop.ph>
Date: Fri, 28 Aug 2015 13:30:04 +0800
Subject: [PATCH 06/27] Applied add address.

---
 YiLinkerOnlineBuyer.xcodeproj/project.pbxproj      |  12 +
 .../resources/Model/BarangayModel.swift            |  54 ++++
 .../resources/Model/CityModel.swift                |  54 ++++
 .../resources/Model/ProvinceModel.swift            |  54 ++++
 .../View/ChangeAddressCollectionViewCell.swift     |   1 +
 .../resources/View/NewAddressTableViewCell.swift   |  33 ++-
 .../resources/View/ShipToTableViewCell.swift       |   1 +
 .../AddAddressTableViewController.swift            | 291 ++++++++++++++++++++-
 .../ChangeAddressViewController.swift              |  16 +-
 .../ViewController/SummaryViewController.swift     |  16 +-
 .../Xib/ChangeAddressCollectionViewCell.xib        |   1 +
 .../resources/Xib/ShipToTableViewCell.xib          |   1 +
 12 files changed, 505 insertions(+), 29 deletions(-)
 create mode 100644 YiLinkerOnlineBuyer/resources/Model/BarangayModel.swift
 create mode 100644 YiLinkerOnlineBuyer/resources/Model/CityModel.swift
 create mode 100644 YiLinkerOnlineBuyer/resources/Model/ProvinceModel.swift

diff --git a/YiLinkerOnlineBuyer.xcodeproj/project.pbxproj b/YiLinkerOnlineBuyer.xcodeproj/project.pbxproj
index 50f1656..5a022ea 100644
--- a/YiLinkerOnlineBuyer.xcodeproj/project.pbxproj
+++ b/YiLinkerOnlineBuyer.xcodeproj/project.pbxproj
@@ -227,6 +227,9 @@
 		26B1B8A01B86D4BD006405CE /* TransactionDetailsView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 26B1B89F1B86D4BD006405CE /* TransactionDetailsView.swift */; };
 		26C285421B8FAA48005EBD3A /* GetAddressesModel.swift in Sources */ = {isa = PBXBuildFile; fileRef = 26C285411B8FAA48005EBD3A /* GetAddressesModel.swift */; };
 		26C285441B8FADE3005EBD3A /* AddressModelV2.swift in Sources */ = {isa = PBXBuildFile; fileRef = 26C285431B8FADE3005EBD3A /* AddressModelV2.swift */; };
+		26C285461B8FEE42005EBD3A /* ProvinceModel.swift in Sources */ = {isa = PBXBuildFile; fileRef = 26C285451B8FEE42005EBD3A /* ProvinceModel.swift */; };
+		26C285481B8FF546005EBD3A /* CityModel.swift in Sources */ = {isa = PBXBuildFile; fileRef = 26C285471B8FF546005EBD3A /* CityModel.swift */; };
+		26C2854A1B8FF555005EBD3A /* BarangayModel.swift in Sources */ = {isa = PBXBuildFile; fileRef = 26C285491B8FF555005EBD3A /* BarangayModel.swift */; };
 		26D54FDF1B860CF400522398 /* TransactionViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = 26D54FDD1B860CF400522398 /* TransactionViewController.swift */; };
 		26D54FE01B860CF400522398 /* TransactionViewController.xib in Resources */ = {isa = PBXBuildFile; fileRef = 26D54FDE1B860CF400522398 /* TransactionViewController.xib */; };
 		26D54FE71B86136300522398 /* TransactionTableViewCell.swift in Sources */ = {isa = PBXBuildFile; fileRef = 26D54FE51B86136300522398 /* TransactionTableViewCell.swift */; };
@@ -529,6 +532,9 @@
 		26B1B89F1B86D4BD006405CE /* TransactionDetailsView.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = TransactionDetailsView.swift; path = YiLinkerOnlineBuyer/resources/View/TransactionDetailsView.swift; sourceTree = SOURCE_ROOT; };
 		26C285411B8FAA48005EBD3A /* GetAddressesModel.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = GetAddressesModel.swift; path = YiLinkerOnlineBuyer/resources/Model/GetAddressesModel.swift; sourceTree = SOURCE_ROOT; };
 		26C285431B8FADE3005EBD3A /* AddressModelV2.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = AddressModelV2.swift; path = YiLinkerOnlineBuyer/resources/Model/AddressModelV2.swift; sourceTree = SOURCE_ROOT; };
+		26C285451B8FEE42005EBD3A /* ProvinceModel.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = ProvinceModel.swift; path = YiLinkerOnlineBuyer/resources/Model/ProvinceModel.swift; sourceTree = SOURCE_ROOT; };
+		26C285471B8FF546005EBD3A /* CityModel.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = CityModel.swift; path = YiLinkerOnlineBuyer/resources/Model/CityModel.swift; sourceTree = SOURCE_ROOT; };
+		26C285491B8FF555005EBD3A /* BarangayModel.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = BarangayModel.swift; path = YiLinkerOnlineBuyer/resources/Model/BarangayModel.swift; sourceTree = SOURCE_ROOT; };
 		26D54FDD1B860CF400522398 /* TransactionViewController.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = TransactionViewController.swift; path = YiLinkerOnlineBuyer/resources/ViewController/TransactionViewController.swift; sourceTree = SOURCE_ROOT; };
 		26D54FDE1B860CF400522398 /* TransactionViewController.xib */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.xib; name = TransactionViewController.xib; path = YiLinkerOnlineBuyer/resources/ViewController/TransactionViewController.xib; sourceTree = SOURCE_ROOT; };
 		26D54FE51B86136300522398 /* TransactionTableViewCell.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = TransactionTableViewCell.swift; path = YiLinkerOnlineBuyer/resources/ViewController/TransactionTableViewCell.swift; sourceTree = SOURCE_ROOT; };
@@ -773,6 +779,9 @@
 				79E68B901B8B0AE9008626E4 /* PointModel.swift */,
 				26C285411B8FAA48005EBD3A /* GetAddressesModel.swift */,
 				26C285431B8FADE3005EBD3A /* AddressModelV2.swift */,
+				26C285451B8FEE42005EBD3A /* ProvinceModel.swift */,
+				26C285471B8FF546005EBD3A /* CityModel.swift */,
+				26C285491B8FF555005EBD3A /* BarangayModel.swift */,
 			);
 			path = Model;
 			sourceTree = "<group>";
@@ -1322,6 +1331,7 @@
 				79E68B911B8B0AE9008626E4 /* PointModel.swift in Sources */,
 				0C5111E91B821D6F002F0001 /* SeeMoreTableViewCell.swift in Sources */,
 				0C2670CF1B772E4B00394E29 /* Enums.swift in Sources */,
+				26C285481B8FF546005EBD3A /* CityModel.swift in Sources */,
 				0C329E731B7B2A71005BE2B6 /* Reachability.swift in Sources */,
 				0C329E951B7B7C5B005BE2B6 /* CustomTabBarController.swift in Sources */,
 				7987F3181B7B744A00B02DF4 /* WishlistTableViewCell.swift in Sources */,
@@ -1407,6 +1417,7 @@
 				0C99373D1B750583000D6074 /* IPhoneType.swift in Sources */,
 				0C9937511B750583000D6074 /* ProductWithCenterNameCollectionViewCell.swift in Sources */,
 				0C9937401B750583000D6074 /* HomePageProductModel.swift in Sources */,
+				26C285461B8FEE42005EBD3A /* ProvinceModel.swift in Sources */,
 				79E68B891B8AFE99008626E4 /* PointsDetailsTableViewCell.swift in Sources */,
 				26AFB3B71B79DE3800E50926 /* ProductAttributeViewController.swift in Sources */,
 				26AFB3AD1B79DE2900E50926 /* ReviewTableViewCell.swift in Sources */,
@@ -1441,6 +1452,7 @@
 				7971F73D1B86189100322861 /* FilterAttributeModel.swift in Sources */,
 				0C6490761B7781E400F88F92 /* Category.swift in Sources */,
 				79E68B851B8AF4D0008626E4 /* PointsEarnedTableViewCell.swift in Sources */,
+				26C2854A1B8FF555005EBD3A /* BarangayModel.swift in Sources */,
 				0C99375D1B750583000D6074 /* HomeContainerViewController.swift in Sources */,
 				79E85FCE1B8A1F5800428AA1 /* ActivityLogModel.swift in Sources */,
 				26C285421B8FAA48005EBD3A /* GetAddressesModel.swift in Sources */,
diff --git a/YiLinkerOnlineBuyer/resources/Model/BarangayModel.swift b/YiLinkerOnlineBuyer/resources/Model/BarangayModel.swift
new file mode 100644
index 0000000..f6def28
--- /dev/null
+++ b/YiLinkerOnlineBuyer/resources/Model/BarangayModel.swift
@@ -0,0 +1,54 @@
+//
+//  BarangayModel.swift
+//  YiLinkerOnlineBuyer
+//
+//  Created by Rj Constantino on 8/28/15.
+//  Copyright (c) 2015 yiLinker-online-buyer. All rights reserved.
+//
+
+import Foundation
+
+class BarangayModel {
+    
+    var message: String = ""
+    var isSuccessful: Bool = false
+    
+    var barangayId: [Int] = []
+    var location: [String] = []
+    
+    init(message: String, isSuccessful: Bool, barangayId: NSArray, location: NSArray) {
+        self.message = message
+        self.isSuccessful = isSuccessful
+        self.barangayId = barangayId as! [Int]
+        self.location = location as! [String]
+    }
+    
+    class func parseDataWithDictionary(dictionary: AnyObject) -> BarangayModel! {
+        
+        var message: String = ""
+        var isSuccessful: Bool = false
+        
+        var barangayId: [Int] = []
+        var location: [String] = []
+        
+        if dictionary.isKindOfClass(NSDictionary) {
+            
+            if let tempVar = dictionary["message"] as? String {
+                message = tempVar
+            }
+            
+            if let tempVar = dictionary["isSuccessful"] as? Bool {
+                isSuccessful = tempVar
+            }
+            
+            if let value: AnyObject = dictionary["data"] {
+                for subValue in value as! NSArray {
+//                    barangayId.append(subValue["barangay"] as! Int)
+//                    location.append(subValue["location"] as! String)
+                }
+            }
+        } // dictionary
+        
+        return BarangayModel(message: message, isSuccessful: isSuccessful, barangayId: barangayId, location: location)
+    } // parse
+}
\ No newline at end of file
diff --git a/YiLinkerOnlineBuyer/resources/Model/CityModel.swift b/YiLinkerOnlineBuyer/resources/Model/CityModel.swift
new file mode 100644
index 0000000..60de76d
--- /dev/null
+++ b/YiLinkerOnlineBuyer/resources/Model/CityModel.swift
@@ -0,0 +1,54 @@
+//
+//  CityModel.swift
+//  YiLinkerOnlineBuyer
+//
+//  Created by Rj Constantino on 8/28/15.
+//  Copyright (c) 2015 yiLinker-online-buyer. All rights reserved.
+//
+
+import Foundation
+
+class CityModel {
+    
+    var message: String = ""
+    var isSuccessful: Bool = false
+    
+    var cityId: [Int] = []
+    var location: [String] = []
+    
+    init(message: String, isSuccessful: Bool, cityId: NSArray, location: NSArray) {
+        self.message = message
+        self.isSuccessful = isSuccessful
+        self.cityId = cityId as! [Int]
+        self.location = location as! [String]
+    }
+    
+    class func parseDataWithDictionary(dictionary: AnyObject) -> CityModel {
+        
+        var message: String = ""
+        var isSuccessful: Bool = false
+        
+        var cityId: [Int] = []
+        var location: [String] = []
+        
+        if dictionary.isKindOfClass(NSDictionary) {
+            
+            if let tempVar = dictionary["message"] as? String {
+                message = tempVar
+            }
+            
+            if let tempVar = dictionary["isSuccessful"] as? Bool {
+                isSuccessful = tempVar
+            }
+            
+            if let value: AnyObject = dictionary["data"] {
+                for subValue in value as! NSArray {
+                    cityId.append(subValue["cityId"] as! Int)
+                    location.append(subValue["location"] as! String)
+                }
+            }
+        } // dictionary
+        
+        return CityModel(message: message, isSuccessful: isSuccessful, cityId: cityId, location: location)
+    } // parse
+}
\ No newline at end of file
diff --git a/YiLinkerOnlineBuyer/resources/Model/ProvinceModel.swift b/YiLinkerOnlineBuyer/resources/Model/ProvinceModel.swift
new file mode 100644
index 0000000..4b9c5be
--- /dev/null
+++ b/YiLinkerOnlineBuyer/resources/Model/ProvinceModel.swift
@@ -0,0 +1,54 @@
+//
+//  ProvinceModel.swift
+//  YiLinkerOnlineBuyer
+//
+//  Created by Rj Constantino on 8/28/15.
+//  Copyright (c) 2015 yiLinker-online-buyer. All rights reserved.
+//
+
+import Foundation
+
+class ProvinceModel {
+    
+    var message: String = ""
+    var isSuccessful: Bool = false
+    
+    var provinceId: [Int] = []
+    var location: [String] = []
+    
+    init(message: String, isSuccessful: Bool, provinceId: NSArray, location: NSArray) {
+        self.message = message
+        self.isSuccessful = isSuccessful
+        self.provinceId = provinceId as! [Int]
+        self.location = location as! [String]
+    }
+    
+    class func parseDataWithDictionary(dictionary: AnyObject) -> ProvinceModel! {
+        
+        var message: String = ""
+        var isSuccessful: Bool = false
+        
+        var provinceId: [Int] = []
+        var location: [String] = []
+        
+        if dictionary.isKindOfClass(NSDictionary) {
+            
+            if let tempVar = dictionary["message"] as? String {
+                message = tempVar
+            }
+            
+            if let tempVar = dictionary["isSuccessful"] as? Bool {
+                isSuccessful = tempVar
+            }
+            
+            if let value: AnyObject = dictionary["data"] {
+                for subValue in value as! NSArray {
+                    provinceId.append(subValue["provinceId"] as! Int)
+                    location.append(subValue["location"] as! String)
+                }
+            }
+        } // dictionary
+        
+        return ProvinceModel(message: message, isSuccessful: isSuccessful, provinceId: provinceId, location: location)
+    } // parse
+}
\ No newline at end of file
diff --git a/YiLinkerOnlineBuyer/resources/View/ChangeAddressCollectionViewCell.swift b/YiLinkerOnlineBuyer/resources/View/ChangeAddressCollectionViewCell.swift
index 372efc0..37365ae 100644
--- a/YiLinkerOnlineBuyer/resources/View/ChangeAddressCollectionViewCell.swift
+++ b/YiLinkerOnlineBuyer/resources/View/ChangeAddressCollectionViewCell.swift
@@ -14,6 +14,7 @@ protocol ChangeAddressCollectionViewCellDelegate {
 
 class ChangeAddressCollectionViewCell: UICollectionViewCell {
 
+    @IBOutlet weak var titleLabel: UILabel!
     @IBOutlet weak var checkBoxButton: SemiRoundedButton!
     @IBOutlet weak var deleteButton: UIButton!
     var delegate: ChangeAddressCollectionViewCellDelegate?
diff --git a/YiLinkerOnlineBuyer/resources/View/NewAddressTableViewCell.swift b/YiLinkerOnlineBuyer/resources/View/NewAddressTableViewCell.swift
index 6fc3cd3..d0365b5 100644
--- a/YiLinkerOnlineBuyer/resources/View/NewAddressTableViewCell.swift
+++ b/YiLinkerOnlineBuyer/resources/View/NewAddressTableViewCell.swift
@@ -11,9 +11,11 @@ import UIKit
 protocol NewAddressTableViewCellDelegate {
     func newAddressTableViewCell(didClickNext newAddressTableViewCell: NewAddressTableViewCell)
     func newAddressTableViewCell(didClickPrevious newAddressTableViewCell: NewAddressTableViewCell)
+    
+    func newAddressTableViewCell(didBeginEditing newAddressTableViewCell: NewAddressTableViewCell, index: Int)
 }
 
-class NewAddressTableViewCell: UITableViewCell {
+class NewAddressTableViewCell: UITableViewCell, UITextFieldDelegate {
    
     @IBOutlet weak var rowTitleLabel: UILabel!
     @IBOutlet weak var rowTextField: UITextField!
@@ -23,7 +25,10 @@ class NewAddressTableViewCell: UITableViewCell {
     override func awakeFromNib() {
         super.awakeFromNib()
         
-        self.rowTextField.addToolBarWithTarget(self, next: "next", previous: "previous", done: "done")
+        
+        self.rowTextField.delegate = self
+        
+//        self.rowTextField.addToolBarWithTarget(self, next: "next", previous: "previous", done: "done")
     }
 
     override func setSelected(selected: Bool, animated: Bool) {
@@ -31,17 +36,21 @@ class NewAddressTableViewCell: UITableViewCell {
 
         // Configure the view for the selected state
     }
-    
-    func next() {
-        self.delegate!.newAddressTableViewCell(didClickNext: self)
-    }
-    
-    func previous() {
-        self.delegate!.newAddressTableViewCell(didClickPrevious: self)
+
+    func textFieldDidBeginEditing(textField: UITextField) {
+        delegate?.newAddressTableViewCell(didBeginEditing: self, index: self.tag)
     }
     
-    func done() {
-        self.endEditing(true)
-    }
+//    func next() {
+//        self.delegate!.newAddressTableViewCell(didClickNext: self)
+//    }
+//    
+//    func previous() {
+//        self.delegate!.newAddressTableViewCell(didClickPrevious: self)
+//    }
+//    
+//    func done() {
+//        self.endEditing(true)
+//    }
     
 }
diff --git a/YiLinkerOnlineBuyer/resources/View/ShipToTableViewCell.swift b/YiLinkerOnlineBuyer/resources/View/ShipToTableViewCell.swift
index 8346d3f..1bbb18f 100644
--- a/YiLinkerOnlineBuyer/resources/View/ShipToTableViewCell.swift
+++ b/YiLinkerOnlineBuyer/resources/View/ShipToTableViewCell.swift
@@ -14,6 +14,7 @@ protocol ShipToTableViewCellDelegate {
 
 class ShipToTableViewCell: UITableViewCell {
 
+    @IBOutlet weak var addressLabel: UILabel!
     @IBOutlet weak var changeAddressLabel: UILabel!
     @IBOutlet weak var defaultAddressLabel: UILabel!
     @IBOutlet weak var fakeContainerView: UIView!
diff --git a/YiLinkerOnlineBuyer/resources/ViewController/AddAddressTableViewController.swift b/YiLinkerOnlineBuyer/resources/ViewController/AddAddressTableViewController.swift
index f5dc204..90dc3f7 100644
--- a/YiLinkerOnlineBuyer/resources/ViewController/AddAddressTableViewController.swift
+++ b/YiLinkerOnlineBuyer/resources/ViewController/AddAddressTableViewController.swift
@@ -12,17 +12,28 @@ protocol AddAddressTableViewControllerDelegate {
     func addAddressTableViewController(didAddAddressSucceed addAddressTableViewController: AddAddressTableViewController)
 }
 
-class AddAddressTableViewController: UITableViewController, UITableViewDelegate, UITableViewDataSource, NewAddressTableViewCellDelegate {
+class AddAddressTableViewController: UITableViewController, UITableViewDelegate, UITableViewDataSource, NewAddressTableViewCellDelegate, UIPickerViewDataSource, UIPickerViewDelegate {
     
     let titles: [String] = ["Address Title:", "Unit No.:", "Building Name:", "Street No.:", "Street Name:", "Subdivision:", "Province:", "City:", "Barangay:", "Zip Code:", "Additional Info:"]
     
     var delegate: AddAddressTableViewControllerDelegate?
     
+    let manager = APIManager.sharedInstance
+    var provinceModel: ProvinceModel!
+    var cityModel: CityModel!
+    var barangayModel: BarangayModel!
+    
+    var idProvince: Int = 0
+    var idCity: Int = 0
+    var activeTextField: Int = 0
+    
     override func viewDidLoad() {
         super.viewDidLoad()
         self.registerNib()
         self.backButton()
         self.tableView.separatorStyle = UITableViewCellSeparatorStyle.None
+        
+        requestGetProvince()
     }
     
     func registerNib() {
@@ -33,22 +44,31 @@ class AddAddressTableViewController: UITableViewController, UITableViewDelegate,
     override func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {
         let cell: NewAddressTableViewCell = self.tableView.dequeueReusableCellWithIdentifier(Constants.Checkout.newAddressTableViewCellNibNameAndIdentifier) as! NewAddressTableViewCell
         cell.rowTitleLabel.text = titles[indexPath.row]
+        cell.tag = indexPath.row
         cell.delegate = self
-        
+        cell.rowTextField.addToolBarWithTarget(self, next: "next", previous: "previous", done: "done")
         if indexPath.row == 0 {
             cell.rowTextField.becomeFirstResponder()
         }
         
+        if indexPath.row == 6 || indexPath.row == 7 || indexPath.row == 8 {
+            
+            let screenSize: CGRect = UIScreen.mainScreen().bounds
+            let pickerView: UIPickerView = UIPickerView(frame:CGRectMake(0, 0, screenSize.width, 225))
+            pickerView.delegate = self
+            pickerView.dataSource = self
+            cell.rowTextField.inputView = pickerView
+        }
+        
         return cell
     }
     
     override func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
         return self.titles.count
     }
-
-    override func didReceiveMemoryWarning() {
-        super.didReceiveMemoryWarning()
-        // Dispose of any resources that can be recreated.
+    
+    override func tableView(tableView: UITableView, didSelectRowAtIndexPath indexPath: NSIndexPath) {
+        println(indexPath.row)
     }
     
     func newAddressTableViewCell(didClickNext newAddressTableViewCell: NewAddressTableViewCell) {
@@ -76,6 +96,18 @@ class AddAddressTableViewController: UITableViewController, UITableViewDelegate,
         }
     }
     
+    func newAddressTableViewCell(didBeginEditing newAddressTableViewCell: NewAddressTableViewCell, index: Int) {
+        activeTextField = index
+        
+        if index == 6 && self.provinceModel != nil {
+            setTextAtIndex(6, text: self.provinceModel.location[0])
+        } else if index == 7 && self.cityModel != nil {
+            setTextAtIndex(7, text: self.cityModel.location[0])
+        } else if index == 8 && self.barangayModel != nil {
+            setTextAtIndex(8, text: self.barangayModel.location[0])
+        }
+    }
+    
     func backButton() {
         var backButton:UIButton = UIButton.buttonWithType(UIButtonType.Custom) as! UIButton
         backButton.frame = CGRectMake(0, 0, 40, 40)
@@ -89,7 +121,7 @@ class AddAddressTableViewController: UITableViewController, UITableViewDelegate,
         
         var checkButton:UIButton = UIButton.buttonWithType(UIButtonType.Custom) as! UIButton
         checkButton.frame = CGRectMake(0, 0, 25, 25)
-        checkButton.addTarget(self, action: "done", forControlEvents: UIControlEvents.TouchUpInside)
+        checkButton.addTarget(self, action: "check", forControlEvents: UIControlEvents.TouchUpInside)
         checkButton.setImage(UIImage(named: "check-white"), forState: UIControlState.Normal)
         var customCheckButton:UIBarButtonItem = UIBarButtonItem(customView: checkButton)
         
@@ -103,8 +135,249 @@ class AddAddressTableViewController: UITableViewController, UITableViewDelegate,
         self.navigationController!.popViewControllerAnimated(true)
     }
     
+    func check() {
+//        self.endEditing(true)
+        var filledUpAllFields: Bool = true
+        for i in 0..<10 {
+            if getTextAtIndex(i) == "" {
+                filledUpAllFields = false
+            }
+        }
+        
+        if filledUpAllFields {
+            requestAddAddress()
+        } else {
+            showAlert(title: "Error", message: "All text fields must be filled up.")
+        }
+
+    }
+    
     func done() {
-        self.delegate!.addAddressTableViewController(didAddAddressSucceed: self)
-        self.navigationController!.popViewControllerAnimated(true)
+        let row = NSIndexPath(forItem: activeTextField, inSection: 0)
+        let cell: NewAddressTableViewCell = tableView.cellForRowAtIndexPath(row) as! NewAddressTableViewCell
+        cell.rowTextField.endEditing(true)
+        
+        if activeTextField == 6 && getTextAtIndex(activeTextField) != "" {
+            requestGetCities(idProvince)
+        } else if activeTextField == 7 && getTextAtIndex(activeTextField) != "" {
+            requestGetBarangay(idCity)
+        }
+        
+
+    }
+    
+    func getTextAtIndex(index: Int) -> String {
+        let row = NSIndexPath(forItem: index, inSection: 0)
+        let cell: NewAddressTableViewCell = tableView.cellForRowAtIndexPath(row) as! NewAddressTableViewCell
+        return cell.rowTextField.text
+    }
+    
+    func setTextAtIndex(index: Int, text: String) {
+        let row = NSIndexPath(forItem: index, inSection: 0)
+        let cell: NewAddressTableViewCell = tableView.cellForRowAtIndexPath(row) as! NewAddressTableViewCell
+        cell.rowTextField.text = text
+    }
+    
+    func showAlert(#title: String!, message: String!) {
+        let alertController = UIAlertController(title: title, message: message, preferredStyle: .Alert)
+        let defaultAction = UIAlertAction(title: "OK", style: .Default, handler: nil)
+        alertController.addAction(defaultAction)
+        presentViewController(alertController, animated: true, completion: nil)
+    }
+    
+    // MARK: - Requests
+    
+    func requestAddAddress() {
+        SVProgressHUD.show()
+        
+        let url = "http://online.api.easydeal.ph/api/v1/auth/address/addNewAddress"
+        let params = ["access_token": /*SessionManager.accessToken()*/"NmUxZjU5NjZjODdhYWZmMjY0NDE4YmI0YzQwMDc0NzIzYTM4MzI1NWJiMGFkNTNmNWM2N2ZiMzQyNGFlMGQ1Yg",
+            "title": getTextAtIndex(0),
+            "unitNumber": getTextAtIndex(1),
+            "buildingName": getTextAtIndex(2),
+            "streetNumber": getTextAtIndex(3),
+            "streetName": getTextAtIndex(4),
+            "subdivision": getTextAtIndex(5),
+            "province": getTextAtIndex(6),
+            "city": getTextAtIndex(7),
+            "barangay": getTextAtIndex(8),
+            "zipCode": getTextAtIndex(9),
+            "addtionalInfo": getTextAtIndex(10),
+        ]
+        
+        manager.POST(url, parameters: params, success: {
+            (task: NSURLSessionDataTask!, responseObject: AnyObject!) in
+            
+            self.showAlert(title: "Address successfully added", message: nil)
+            SVProgressHUD.dismiss()
+            self.delegate!.addAddressTableViewController(didAddAddressSucceed: self)
+            self.navigationController!.popViewControllerAnimated(true)
+
+            }, failure: {
+                (task: NSURLSessionDataTask!, error: NSError!) in
+                println(error)
+                let task: NSHTTPURLResponse = task.response as! NSHTTPURLResponse
+                if task.statusCode == 401 {
+                    self.requestRefreshToken("add")
+                } else {
+                    self.showAlert(title: "Something went wrong", message: nil)
+                    SVProgressHUD.dismiss()
+                }
+        })
+    }
+    
+    func requestRefreshToken(type: String) {
+        let url: String = "http://online.api.easydeal.ph/api/v1/login"
+        let params: NSDictionary = ["client_id": Constants.Credentials.clientID,
+            "client_secret": Constants.Credentials.clientSecret,
+            "grant_type": Constants.Credentials.grantRefreshToken,
+            "refresh_token": SessionManager.refreshToken()]
+        
+        let manager = APIManager.sharedInstance
+        manager.POST(url, parameters: params, success: {
+            (task: NSURLSessionDataTask!, responseObject: AnyObject!) in
+            
+            if type == "add" {
+                self.requestAddAddress()
+            } else if type == "update" {
+                
+            }
+            
+            }, failure: {
+                (task: NSURLSessionDataTask!, error: NSError!) in
+                SVProgressHUD.dismiss()
+                let alertController = UIAlertController(title: "Something went wrong", message: "", preferredStyle: .Alert)
+                let defaultAction = UIAlertAction(title: "OK", style: .Default, handler: nil)
+                alertController.addAction(defaultAction)
+                self.presentViewController(alertController, animated: true, completion: nil)
+        })
+    }
+    
+    func requestGetProvince() {
+        let url: String = "http://online.api.easydeal.ph/api/v1/location/getAllProvinces"
+        let manager = APIManager.sharedInstance
+        
+        manager.POST(url, parameters: nil, success: {
+            (task: NSURLSessionDataTask!, responseObject: AnyObject!) in
+            
+            self.provinceModel = ProvinceModel.parseDataWithDictionary(responseObject)
+            println(self.provinceModel.location)
+            
+            }, failure: {
+                (task: NSURLSessionDataTask!, error: NSError!) in
+                SVProgressHUD.dismiss()
+                self.showAlert(title: "Something went wrong", message: nil)
+        })
+    }
+    
+    func requestGetCities(id: Int) {
+        let url: String = "http://online.api.easydeal.ph/api/v1/location/getChildCities"
+        let manager = APIManager.sharedInstance
+        let params = ["provinceId": String(id)]
+        
+        manager.POST(url, parameters: params, success: {
+            (task: NSURLSessionDataTask!, responseObject: AnyObject!) in
+            
+            self.cityModel = CityModel.parseDataWithDictionary(responseObject)
+            println(self.cityModel.location)
+            
+            }, failure: {
+                (task: NSURLSessionDataTask!, error: NSError!) in
+                SVProgressHUD.dismiss()
+                self.showAlert(title: "Something went wrong", message: nil)
+        })
+    }
+    
+    func requestGetBarangay(id: Int) {
+        let url: String = "http://online.api.easydeal.ph/api/v1/location/getBarangaysByCity"
+        let manager = APIManager.sharedInstance
+        let params = ["cityId": String(id)]
+        
+        manager.POST(url, parameters: params, success: {
+            (task: NSURLSessionDataTask!, responseObject: AnyObject!) in
+            
+            self.barangayModel = BarangayModel.parseDataWithDictionary(responseObject)
+            println(self.barangayModel.location)
+            
+            }, failure: {
+                (task: NSURLSessionDataTask!, error: NSError!) in
+                SVProgressHUD.dismiss()
+                self.showAlert(title: "Something went wrong", message: nil)
+        })
+    }
+    
+    // MARK: - Picker
+    
+    func addPicker() {
+        let screenSize: CGRect = UIScreen.mainScreen().bounds
+        
+        let pickerView: UIPickerView = UIPickerView(frame:CGRectMake(0, 0, screenSize.width, 225))
+        pickerView.delegate = self
+        pickerView.dataSource = self
+//        self.attributeTextField.inputView = pickerView
+    }
+    
+    func pickerView(pickerView: UIPickerView, didSelectRow row: Int, inComponent component: Int) {
+        if activeTextField == 6 {
+            setTextAtIndex(6, text: self.provinceModel.location[row])
+            idProvince = self.provinceModel.provinceId[row]
+        } else if activeTextField == 7 {
+            setTextAtIndex(7, text: self.cityModel.location[row])
+            idCity = self.cityModel.cityId[row]
+        } else if activeTextField == 8 {
+            setTextAtIndex(8, text: self.barangayModel.location[row])
+        }
+    }
+    
+    func numberOfComponentsInPickerView(pickerView: UIPickerView) -> Int {
+        return 1
+    }
+    
+    func pickerView(pickerView: UIPickerView, numberOfRowsInComponent component: Int) -> Int {
+        if activeTextField == 6 && self.provinceModel != nil {
+            return self.provinceModel.location.count
+        } else if activeTextField == 7 && self.cityModel != nil {
+            return self.cityModel.location.count
+        } else if activeTextField == 8 && self.barangayModel != nil  {
+            return self.barangayModel.location.count
+        }
+        
+        return 0
+    }
+    
+    func pickerView(pickerView: UIPickerView, titleForRow row: Int, forComponent component: Int) -> String! {
+        if activeTextField == 6 {
+            return self.provinceModel.location[row]
+        } else if activeTextField == 7 {
+            return self.cityModel.location[row]
+        } else if activeTextField == 8 {
+            return self.barangayModel.location[row]
+        }
+        
+        return ""
+    }
+    
+    // MARK: - Keyboard Toolbar Actions 
+    
+    func next() {
+        
+        if activeTextField + 1 != self.titles.count {
+            let indexPath = NSIndexPath(forItem: activeTextField + 1, inSection: 0)
+            let cell: NewAddressTableViewCell = tableView.cellForRowAtIndexPath(indexPath) as! NewAddressTableViewCell
+            cell.rowTextField.becomeFirstResponder()
+        } else {
+            self.tableView.endEditing(true)
+        }
+    }
+    
+    func previous() {
+        if activeTextField - 1 != self.titles.count {
+            let indexPath = NSIndexPath(forItem: activeTextField - 1, inSection: 0)
+            let cell: NewAddressTableViewCell = tableView.cellForRowAtIndexPath(indexPath) as! NewAddressTableViewCell
+            cell.rowTextField.becomeFirstResponder()
+        } else {
+            self.tableView.endEditing(true)
+        }
     }
+
 }
diff --git a/YiLinkerOnlineBuyer/resources/ViewController/ChangeAddressViewController.swift b/YiLinkerOnlineBuyer/resources/ViewController/ChangeAddressViewController.swift
index 2f9a86c..61b81d2 100644
--- a/YiLinkerOnlineBuyer/resources/ViewController/ChangeAddressViewController.swift
+++ b/YiLinkerOnlineBuyer/resources/ViewController/ChangeAddressViewController.swift
@@ -8,6 +8,10 @@
 
 import UIKit
 
+protocol ChangeAddressViewControllerDelegate {
+    func changeAddressViewController(didSelectAddress address: String)
+}
+
 class ChangeAddressViewController: UIViewController, UICollectionViewDelegateFlowLayout, UICollectionViewDataSource, UICollectionViewDelegate, ChangeAddressCollectionViewCellDelegate, ChangeAddressFooterCollectionViewCellDelegate, AddAddressTableViewControllerDelegate, EmptyViewDelegate {
 
     @IBOutlet weak var collectionView: UICollectionView!
@@ -20,12 +24,15 @@ class ChangeAddressViewController: UIViewController, UICollectionViewDelegateFlo
     
     let manager = APIManager.sharedInstance
     
+    var delegate: ChangeAddressViewControllerDelegate?
+    
     override func viewDidLoad() {
         super.viewDidLoad()
         requestGetAddressess()
         
         self.titleView()
         self.backButton()
+
         let layout: UICollectionViewFlowLayout = UICollectionViewFlowLayout()
         layout.itemSize = CGSize(width: self.view.frame.size.width - 20, height: 79)
         layout.minimumLineSpacing = 20
@@ -68,6 +75,8 @@ class ChangeAddressViewController: UIViewController, UICollectionViewDelegateFlo
     }
     
     func done() {
+        let cell: ChangeAddressCollectionViewCell = self.collectionView.cellForItemAtIndexPath(NSIndexPath(forItem: self.selectedIndex, inSection: 0)) as! ChangeAddressCollectionViewCell
+        self.delegate!.changeAddressViewController(didSelectAddress: cell.addressLabel.text!)
         self.navigationController!.popViewControllerAnimated(true)
     }
     
@@ -89,8 +98,9 @@ class ChangeAddressViewController: UIViewController, UICollectionViewDelegateFlo
     func collectionView(collectionView: UICollectionView, cellForItemAtIndexPath indexPath: NSIndexPath) -> UICollectionViewCell {
         let cell : ChangeAddressCollectionViewCell = collectionView.dequeueReusableCellWithReuseIdentifier(Constants.Checkout.changeAddressCollectionViewCellNibNameAndIdentifier, forIndexPath: indexPath) as! ChangeAddressCollectionViewCell
         
+        cell.titleLabel.text = self.getAddressModel.listOfAddress[indexPath.row].title
         cell.addressLabel.text = self.getAddressModel.listOfAddress[indexPath.row].streetName
-        
+
         if indexPath.row == self.selectedIndex {
             cell.layer.borderWidth = 1
             cell.layer.borderColor = Constants.Colors.selectedGreenColor.CGColor
@@ -192,7 +202,7 @@ class ChangeAddressViewController: UIViewController, UICollectionViewDelegateFlo
         SVProgressHUD.show()
         
         let url = "http://online.api.easydeal.ph/api/v1/auth/address/getUserAddresses"
-        let params = ["access_token": "YTI0MTRmOGE1YjcxYzY1MDg2OTAwNjUyNjY5M2RjYmFmYmI1MGRhMGVjZDM1MTlmNTkyNjU4NTExOTdlMTE2Mw"]
+        let params = ["access_token": SessionManager.accessToken()]
         
         manager.POST(url, parameters: params, success: {
             (task: NSURLSessionDataTask!, responseObject: AnyObject!) in
@@ -218,7 +228,7 @@ class ChangeAddressViewController: UIViewController, UICollectionViewDelegateFlo
         SVProgressHUD.show()
         
         let url = "http://online.api.easydeal.ph/api/v1/auth/address/deleteUserAddress"
-        let params = ["access_token": "YTI0MTRmOGE1YjcxYzY1MDg2OTAwNjUyNjY5M2RjYmFmYmI1MGRhMGVjZDM1MTlmNTkyNjU4NTExOTdlMTE2Mw",
+        let params = ["access_token": SessionManager.accessToken(),
         "userAddressId": String(addressId)]
         
         manager.POST(url, parameters: params, success: {
diff --git a/YiLinkerOnlineBuyer/resources/ViewController/SummaryViewController.swift b/YiLinkerOnlineBuyer/resources/ViewController/SummaryViewController.swift
index 9a8aa0a..71c997c 100644
--- a/YiLinkerOnlineBuyer/resources/ViewController/SummaryViewController.swift
+++ b/YiLinkerOnlineBuyer/resources/ViewController/SummaryViewController.swift
@@ -8,9 +8,10 @@
 
 import UIKit
 
-class SummaryViewController: UIViewController, UITableViewDelegate, UITableViewDataSource, ShipToTableViewCellDelegate {
+class SummaryViewController: UIViewController, UITableViewDelegate, UITableViewDataSource, ShipToTableViewCellDelegate, ChangeAddressViewControllerDelegate {
 
     @IBOutlet weak var tableView: UITableView!
+    var shipToTableViewCell: ShipToTableViewCell = ShipToTableViewCell()
     
     override func viewDidLoad() {
         super.viewDidLoad()
@@ -20,7 +21,7 @@ class SummaryViewController: UIViewController, UITableViewDelegate, UITableViewD
         self.tableView.scrollIndicatorInsets = UIEdgeInsetsMake(0, 0, 0, -5)
         self.tableView.rowHeight = UITableViewAutomaticDimension
         self.tableView.layoutIfNeeded()
-        self.tableView.tableFooterView = self.tableFooterView()
+        self.tableView.tableFooterView = self.tableFooterView("Lorem psum")
         self.tableView.tableFooterView!.frame = CGRectMake(0, 0, 0, self.tableView.tableFooterView!.frame.size.height)
     }
     
@@ -50,14 +51,18 @@ class SummaryViewController: UIViewController, UITableViewDelegate, UITableViewD
         return 41
     }
     
-    func tableFooterView() -> UIView {
-        let shipToTableViewCell: ShipToTableViewCell = self.tableView.dequeueReusableCellWithIdentifier(Constants.Checkout.shipToTableViewCellNibNameAndIdentifier) as! ShipToTableViewCell
+    func tableFooterView(address: String) -> UIView {
+        self.shipToTableViewCell = self.tableView.dequeueReusableCellWithIdentifier(Constants.Checkout.shipToTableViewCellNibNameAndIdentifier) as! ShipToTableViewCell
         shipToTableViewCell.frame = CGRectMake(0, 0, self.tableView.frame.size.width, shipToTableViewCell.frame.size.height)
         shipToTableViewCell.delegate = self
-        
+        shipToTableViewCell.addressLabel.text = address
         return shipToTableViewCell
     }
     
+    func changeAddressViewController(didSelectAddress address: String) {
+        self.tableView.tableFooterView = self.tableFooterView(address)
+    }
+    
     func tableView(tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {
         var headerView: CheckoutViews
         if section == 0 {
@@ -118,6 +123,7 @@ class SummaryViewController: UIViewController, UITableViewDelegate, UITableViewD
         })
         
         let changeAddressViewController: ChangeAddressViewController = ChangeAddressViewController(nibName: "ChangeAddressViewController", bundle: nil)
+        changeAddressViewController.delegate = self
         self.navigationController!.pushViewController(changeAddressViewController, animated: true)
     }
 }
diff --git a/YiLinkerOnlineBuyer/resources/Xib/ChangeAddressCollectionViewCell.xib b/YiLinkerOnlineBuyer/resources/Xib/ChangeAddressCollectionViewCell.xib
index 7c6b6a6..bd0cb75 100644
--- a/YiLinkerOnlineBuyer/resources/Xib/ChangeAddressCollectionViewCell.xib
+++ b/YiLinkerOnlineBuyer/resources/Xib/ChangeAddressCollectionViewCell.xib
@@ -85,6 +85,7 @@
                 <outlet property="addressLabel" destination="Sx5-GY-uj9" id="xty-1D-EG7"/>
                 <outlet property="checkBoxButton" destination="q5N-SS-ZY2" id="yaM-Vz-NDo"/>
                 <outlet property="deleteButton" destination="q7d-g0-zfw" id="GAb-UF-GPw"/>
+                <outlet property="titleLabel" destination="BKG-VE-yR0" id="30R-Dz-v3L"/>
             </connections>
             <point key="canvasLocation" x="314.5" y="286.5"/>
         </collectionViewCell>
diff --git a/YiLinkerOnlineBuyer/resources/Xib/ShipToTableViewCell.xib b/YiLinkerOnlineBuyer/resources/Xib/ShipToTableViewCell.xib
index ae7ed40..8cfcb17 100644
--- a/YiLinkerOnlineBuyer/resources/Xib/ShipToTableViewCell.xib
+++ b/YiLinkerOnlineBuyer/resources/Xib/ShipToTableViewCell.xib
@@ -109,6 +109,7 @@
                 </constraints>
             </tableViewCellContentView>
             <connections>
+                <outlet property="addressLabel" destination="tC8-Yd-occ" id="s39-3x-oyK"/>
                 <outlet property="arrowImageView" destination="G2W-GT-co0" id="vt7-tA-cYY"/>
                 <outlet property="changeAddressLabel" destination="SrV-Sm-muB" id="JPC-wT-o17"/>
                 <outlet property="defaultAddressLabel" destination="jzk-DI-tsJ" id="uf2-iG-JUD"/>
-- 
2.3.2 (Apple Git-55)

