From 32fb325971c16bc28c5522e1360d6dc8565a2604 Mon Sep 17 00:00:00 2001
From: Yhel <joriel.fronda@easyshop.ph>
Date: Mon, 31 Aug 2015 12:02:29 +0800
Subject: [PATCH 24/27] Resolved conflict.

---
 Podfile.lock                                       |  12 +-
 YiLinkerOnlineBuyer.xcodeproj/project.pbxproj      | 234 +++++--
 .../resources/Helper/APIManager.swift              |   4 +
 .../resources/Model/AddressModelV2.swift           | 180 ++++++
 .../resources/Model/BarangayModel.swift            |  54 ++
 .../resources/Model/CartProductDetailsModel.swift  | 142 +++--
 .../resources/Model/CityModel.swift                |  54 ++
 .../resources/Model/GetAddressesModel.swift        |  48 ++
 .../resources/Model/ProfileUserDetailsModel.swift  | 125 ++++
 .../resources/Model/ProvinceModel.swift            |  54 ++
 .../resources/Model/SearchResultModel.swift        |  85 +++
 .../resources/Model/SearchSuggestionModel.swift    |  21 +-
 .../Model/WishlistProductDetailsModel.swift        |   6 +-
 .../View/CartProductAttributeTableViewCell.swift   | 123 ++++
 YiLinkerOnlineBuyer/resources/View/Category.swift  |  51 ++
 .../View/ChangeAddressCollectionViewCell.swift     |   3 +
 ...ditProfileAccountInformationTableViewCell.swift |  45 ++
 .../View/EditProfileAddPhotoTableViewCell.swift    |  40 ++
 .../View/EditProfileAddressTableViewCell.swift     |  36 ++
 ...itProfilePersonalInformationTableViewCell.swift |  31 +
 .../resources/View/NewAddressTableViewCell.swift   |  33 +-
 .../resources/View/ProductImagesView.swift         |   8 +-
 .../View/ProductResultGridCollectionViewCell.swift |  19 +
 .../View/ProductResultListCollectionViewCell.swift |  20 +
 .../resources/View/ProfileHeaderTableViewCell.xib  |  31 +-
 .../View/ProfileSettingsTableViewCell.swift        |  30 +
 .../resources/View/ProfileTableViewCell.swift      |  15 +-
 .../resources/View/ProfileTableViewCell.xib        | 618 ++++++++----------
 .../resources/View/ShipToTableViewCell.swift       |   1 +
 .../ActivityLogTableViewController.swift           |  23 +
 .../AddAddressTableViewController.swift            | 291 ++++++++-
 .../CartProductAttributeViewController.swift       | 142 +++--
 .../ViewController/CartViewController.swift        | 373 +++++++----
 .../ChangeAddressViewController.swift              | 172 ++++-
 .../CircularMenuViewController.swift               |   2 +
 .../EditProfileTableViewController.swift           | 478 ++++++++++++++
 .../EditProfileTableViewController.xib             |  24 +
 .../FollowedSellerViewController.swift             |  40 +-
 .../ViewController/HiddenViewController.swift      |  32 +-
 .../HomeContainerViewController.swift              |  18 +-
 .../MyPointsTableViewController.swift              |  22 +
 .../ProductAttributeViewController.swift           | 240 +++----
 .../ViewController/ProductViewController.swift     | 701 +++++++++++----------
 .../ProfileSettingsViewController.swift            | 161 +++++
 .../ProfileSettingsViewController.xib              |  37 ++
 .../ViewController/ProfileViewController.swift     | 115 +++-
 .../ViewController/ResultViewController.swift      | 123 +++-
 .../ViewController/SearchViewController.swift      |  83 ++-
 .../ViewController/SummaryViewController.swift     |  16 +-
 .../resources/ViewController/TransactionViews.xib  |   2 +-
 .../ViewController/WishlistViewController.swift    |   9 +-
 .../Xib/CartProductAttributeTableViewCell.xib      |  59 ++
 .../Xib/CartProductAttributeViewController.xib     |   2 +-
 .../Xib/ChangeAddressCollectionViewCell.xib        |   2 +
 .../EditProfileAccountInformationTableViewCell.xib | 178 ++++++
 .../Xib/EditProfileAddPhotoTableViewCell.xib       |  56 ++
 .../Xib/EditProfileAddressTableViewCell.xib        | 121 ++++
 ...EditProfilePersonalInformationTableViewCell.xib | 165 +++++
 .../resources/Xib/PaymentTableViewCell.xib         |  14 +-
 .../Xib/ProductAttributeViewController.xib         |   2 +-
 .../resources/Xib/ProfileSettingsTableViewCell.xib |  47 ++
 .../resources/Xib/ResultViewController.xib         |   9 +
 .../Xib/SellerResultCollectionViewCell.xib         |  34 +-
 .../resources/Xib/ShipToTableViewCell.xib          |   1 +
 64 files changed, 4649 insertions(+), 1268 deletions(-)
 create mode 100644 YiLinkerOnlineBuyer/resources/Model/AddressModelV2.swift
 create mode 100644 YiLinkerOnlineBuyer/resources/Model/BarangayModel.swift
 create mode 100644 YiLinkerOnlineBuyer/resources/Model/CityModel.swift
 create mode 100644 YiLinkerOnlineBuyer/resources/Model/GetAddressesModel.swift
 create mode 100644 YiLinkerOnlineBuyer/resources/Model/ProfileUserDetailsModel.swift
 create mode 100644 YiLinkerOnlineBuyer/resources/Model/ProvinceModel.swift
 create mode 100644 YiLinkerOnlineBuyer/resources/Model/SearchResultModel.swift
 create mode 100644 YiLinkerOnlineBuyer/resources/View/CartProductAttributeTableViewCell.swift
 create mode 100644 YiLinkerOnlineBuyer/resources/View/EditProfileAccountInformationTableViewCell.swift
 create mode 100644 YiLinkerOnlineBuyer/resources/View/EditProfileAddPhotoTableViewCell.swift
 create mode 100644 YiLinkerOnlineBuyer/resources/View/EditProfileAddressTableViewCell.swift
 create mode 100644 YiLinkerOnlineBuyer/resources/View/EditProfilePersonalInformationTableViewCell.swift
 create mode 100644 YiLinkerOnlineBuyer/resources/View/ProfileSettingsTableViewCell.swift
 create mode 100644 YiLinkerOnlineBuyer/resources/ViewController/EditProfileTableViewController.swift
 create mode 100644 YiLinkerOnlineBuyer/resources/ViewController/EditProfileTableViewController.xib
 create mode 100644 YiLinkerOnlineBuyer/resources/ViewController/ProfileSettingsViewController.swift
 create mode 100644 YiLinkerOnlineBuyer/resources/ViewController/ProfileSettingsViewController.xib
 create mode 100644 YiLinkerOnlineBuyer/resources/Xib/CartProductAttributeTableViewCell.xib
 create mode 100644 YiLinkerOnlineBuyer/resources/Xib/EditProfileAccountInformationTableViewCell.xib
 create mode 100644 YiLinkerOnlineBuyer/resources/Xib/EditProfileAddPhotoTableViewCell.xib
 create mode 100644 YiLinkerOnlineBuyer/resources/Xib/EditProfileAddressTableViewCell.xib
 create mode 100644 YiLinkerOnlineBuyer/resources/Xib/EditProfilePersonalInformationTableViewCell.xib
 create mode 100644 YiLinkerOnlineBuyer/resources/Xib/ProfileSettingsTableViewCell.xib

diff --git a/Podfile.lock b/Podfile.lock
index e14f81e..fa2da4a 100644
--- a/Podfile.lock
+++ b/Podfile.lock
@@ -20,12 +20,12 @@ PODS:
   - AFNetworking/UIKit (2.6.0):
     - AFNetworking/NSURLConnection
     - AFNetworking/NSURLSession
-  - Bolts (1.2.0):
-    - Bolts/AppLinks (= 1.2.0)
-    - Bolts/Tasks (= 1.2.0)
-  - Bolts/AppLinks (1.2.0):
+  - Bolts (1.2.1):
+    - Bolts/AppLinks (= 1.2.1)
+    - Bolts/Tasks (= 1.2.1)
+  - Bolts/AppLinks (1.2.1):
     - Bolts/Tasks
-  - Bolts/Tasks (1.2.0)
+  - Bolts/Tasks (1.2.1)
   - FBSDKCoreKit (4.5.1):
     - Bolts (~> 1.1)
     - FBSDKCoreKit/arc (= 4.5.1)
@@ -76,7 +76,7 @@ DEPENDENCIES:
 
 SPEC CHECKSUMS:
   AFNetworking: 79f7eb1a0fcfa7beb409332b2ca49afe9ce53b05
-  Bolts: d176cb1e0012175589e389a9db49b85e27787576
+  Bolts: 7686a5cb204d1ac54cee26f12d9b7622db3f80d1
   FBSDKCoreKit: f335eaf6865e1e1597dee1debfb533045500da47
   FBSDKLoginKit: 225cc9a388a92916ee3f3bb14422017b6e44b65b
   Google: 875f5a8ade86dd02e36586e4a54814843938c7f6
diff --git a/YiLinkerOnlineBuyer.xcodeproj/project.pbxproj b/YiLinkerOnlineBuyer.xcodeproj/project.pbxproj
index d9894c6..02417c8 100644
--- a/YiLinkerOnlineBuyer.xcodeproj/project.pbxproj
+++ b/YiLinkerOnlineBuyer.xcodeproj/project.pbxproj
@@ -225,6 +225,11 @@
 		26AFB3CA1B79DE5C00E50926 /* ProductAttributeCollectionViewCell.xib in Resources */ = {isa = PBXBuildFile; fileRef = 26AFB3C61B79DE5C00E50926 /* ProductAttributeCollectionViewCell.xib */; };
 		26AFB3CB1B79DE5C00E50926 /* ProductSellerViewCollectionViewCell.xib in Resources */ = {isa = PBXBuildFile; fileRef = 26AFB3C71B79DE5C00E50926 /* ProductSellerViewCollectionViewCell.xib */; };
 		26B1B8A01B86D4BD006405CE /* TransactionDetailsView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 26B1B89F1B86D4BD006405CE /* TransactionDetailsView.swift */; };
+		26C285421B8FAA48005EBD3A /* GetAddressesModel.swift in Sources */ = {isa = PBXBuildFile; fileRef = 26C285411B8FAA48005EBD3A /* GetAddressesModel.swift */; };
+		26C285441B8FADE3005EBD3A /* AddressModelV2.swift in Sources */ = {isa = PBXBuildFile; fileRef = 26C285431B8FADE3005EBD3A /* AddressModelV2.swift */; };
+		26C285461B8FEE42005EBD3A /* ProvinceModel.swift in Sources */ = {isa = PBXBuildFile; fileRef = 26C285451B8FEE42005EBD3A /* ProvinceModel.swift */; };
+		26C285481B8FF546005EBD3A /* CityModel.swift in Sources */ = {isa = PBXBuildFile; fileRef = 26C285471B8FF546005EBD3A /* CityModel.swift */; };
+		26C2854A1B8FF555005EBD3A /* BarangayModel.swift in Sources */ = {isa = PBXBuildFile; fileRef = 26C285491B8FF555005EBD3A /* BarangayModel.swift */; };
 		26D54FDF1B860CF400522398 /* TransactionViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = 26D54FDD1B860CF400522398 /* TransactionViewController.swift */; };
 		26D54FE01B860CF400522398 /* TransactionViewController.xib in Resources */ = {isa = PBXBuildFile; fileRef = 26D54FDE1B860CF400522398 /* TransactionViewController.xib */; };
 		26D54FE71B86136300522398 /* TransactionTableViewCell.swift in Sources */ = {isa = PBXBuildFile; fileRef = 26D54FE51B86136300522398 /* TransactionTableViewCell.swift */; };
@@ -258,6 +263,8 @@
 		79A1C6F91B835BB50043AA36 /* ProductResultGridCollectionViewCell.swift in Sources */ = {isa = PBXBuildFile; fileRef = 79A1C6F81B835BB50043AA36 /* ProductResultGridCollectionViewCell.swift */; };
 		79A1C6FB1B83787B0043AA36 /* SellerResultCollectionViewCell.xib in Resources */ = {isa = PBXBuildFile; fileRef = 79A1C6FA1B83787B0043AA36 /* SellerResultCollectionViewCell.xib */; };
 		79A1C6FD1B8385310043AA36 /* SellerResultCollectionViewCell.swift in Sources */ = {isa = PBXBuildFile; fileRef = 79A1C6FC1B8385310043AA36 /* SellerResultCollectionViewCell.swift */; };
+		79AA08331B8F4DCF00AF3AA4 /* CartProductAttributeTableViewCell.swift in Sources */ = {isa = PBXBuildFile; fileRef = 79AA08321B8F4DCF00AF3AA4 /* CartProductAttributeTableViewCell.swift */; };
+		79AA08351B8F4E6300AF3AA4 /* CartProductAttributeTableViewCell.xib in Resources */ = {isa = PBXBuildFile; fileRef = 79AA08341B8F4E6300AF3AA4 /* CartProductAttributeTableViewCell.xib */; };
 		79E68B731B8AB900008626E4 /* ActivityLogTableViewCell.xib in Resources */ = {isa = PBXBuildFile; fileRef = 79E68B721B8AB900008626E4 /* ActivityLogTableViewCell.xib */; };
 		79E68B751B8AC390008626E4 /* ActivityLogTableViewCell.swift in Sources */ = {isa = PBXBuildFile; fileRef = 79E68B741B8AC390008626E4 /* ActivityLogTableViewCell.swift */; };
 		79E68B801B8AEC00008626E4 /* MyPointsTableViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = 79E68B7E1B8AEC00008626E4 /* MyPointsTableViewController.swift */; };
@@ -271,6 +278,20 @@
 		79E68B8F1B8B0717008626E4 /* PointsTableViewCell.xib in Resources */ = {isa = PBXBuildFile; fileRef = 79E68B8E1B8B0717008626E4 /* PointsTableViewCell.xib */; };
 		79E68B911B8B0AE9008626E4 /* PointModel.swift in Sources */ = {isa = PBXBuildFile; fileRef = 79E68B901B8B0AE9008626E4 /* PointModel.swift */; };
 		79E68B931B8B0B8D008626E4 /* PointsTableViewCell.swift in Sources */ = {isa = PBXBuildFile; fileRef = 79E68B921B8B0B8D008626E4 /* PointsTableViewCell.swift */; };
+		79E68B9B1B8B4239008626E4 /* ProfileSettingsTableViewCell.swift in Sources */ = {isa = PBXBuildFile; fileRef = 79E68B9A1B8B4239008626E4 /* ProfileSettingsTableViewCell.swift */; };
+		79E68B9D1B8B4270008626E4 /* ProfileSettingsTableViewCell.xib in Resources */ = {isa = PBXBuildFile; fileRef = 79E68B9C1B8B4270008626E4 /* ProfileSettingsTableViewCell.xib */; };
+		79E68BA01B8B428B008626E4 /* ProfileSettingsViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = 79E68B9E1B8B428B008626E4 /* ProfileSettingsViewController.swift */; };
+		79E68BA11B8B428B008626E4 /* ProfileSettingsViewController.xib in Resources */ = {isa = PBXBuildFile; fileRef = 79E68B9F1B8B428B008626E4 /* ProfileSettingsViewController.xib */; };
+		79E68BA41B8B4376008626E4 /* EditProfileTableViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = 79E68BA21B8B4376008626E4 /* EditProfileTableViewController.swift */; };
+		79E68BA51B8B4376008626E4 /* EditProfileTableViewController.xib in Resources */ = {isa = PBXBuildFile; fileRef = 79E68BA31B8B4376008626E4 /* EditProfileTableViewController.xib */; };
+		79E68BA71B8B4572008626E4 /* EditProfileAddPhotoTableViewCell.xib in Resources */ = {isa = PBXBuildFile; fileRef = 79E68BA61B8B4572008626E4 /* EditProfileAddPhotoTableViewCell.xib */; };
+		79E68BA91B8B4780008626E4 /* EditProfileAddPhotoTableViewCell.swift in Sources */ = {isa = PBXBuildFile; fileRef = 79E68BA81B8B4780008626E4 /* EditProfileAddPhotoTableViewCell.swift */; };
+		79E68BAB1B8B4EB9008626E4 /* EditProfilePersonalInformationTableViewCell.xib in Resources */ = {isa = PBXBuildFile; fileRef = 79E68BAA1B8B4EB9008626E4 /* EditProfilePersonalInformationTableViewCell.xib */; };
+		79E68BAD1B8B5081008626E4 /* EditProfilePersonalInformationTableViewCell.swift in Sources */ = {isa = PBXBuildFile; fileRef = 79E68BAC1B8B5081008626E4 /* EditProfilePersonalInformationTableViewCell.swift */; };
+		79E68BAF1B8B5306008626E4 /* EditProfileAddressTableViewCell.xib in Resources */ = {isa = PBXBuildFile; fileRef = 79E68BAE1B8B5306008626E4 /* EditProfileAddressTableViewCell.xib */; };
+		79E68BB31B8B5862008626E4 /* EditProfileAddressTableViewCell.swift in Sources */ = {isa = PBXBuildFile; fileRef = 79E68BB21B8B5862008626E4 /* EditProfileAddressTableViewCell.swift */; };
+		79E68BB51B8B5ADE008626E4 /* EditProfileAccountInformationTableViewCell.xib in Resources */ = {isa = PBXBuildFile; fileRef = 79E68BB41B8B5ADE008626E4 /* EditProfileAccountInformationTableViewCell.xib */; };
+		79E68BB71B8B5C58008626E4 /* EditProfileAccountInformationTableViewCell.swift in Sources */ = {isa = PBXBuildFile; fileRef = 79E68BB61B8B5C58008626E4 /* EditProfileAccountInformationTableViewCell.swift */; };
 		79E85FBB1B89DC1500428AA1 /* ProfileHeaderTableViewCell.swift in Sources */ = {isa = PBXBuildFile; fileRef = 79E85FB91B89DC1500428AA1 /* ProfileHeaderTableViewCell.swift */; };
 		79E85FBC1B89DC1500428AA1 /* ProfileHeaderTableViewCell.xib in Resources */ = {isa = PBXBuildFile; fileRef = 79E85FBA1B89DC1500428AA1 /* ProfileHeaderTableViewCell.xib */; };
 		79E85FBF1B89DE1C00428AA1 /* ProfileTableViewCell.swift in Sources */ = {isa = PBXBuildFile; fileRef = 79E85FBD1B89DE1C00428AA1 /* ProfileTableViewCell.swift */; };
@@ -280,6 +301,8 @@
 		79E85FCE1B8A1F5800428AA1 /* ActivityLogModel.swift in Sources */ = {isa = PBXBuildFile; fileRef = 79E85FCD1B8A1F5800428AA1 /* ActivityLogModel.swift */; };
 		79E85FD01B8A1FBD00428AA1 /* ActivityModel.swift in Sources */ = {isa = PBXBuildFile; fileRef = 79E85FCF1B8A1FBD00428AA1 /* ActivityModel.swift */; };
 		79E85FD21B8A230500428AA1 /* ActivityLogHeaderTableViewCell.xib in Resources */ = {isa = PBXBuildFile; fileRef = 79E85FD11B8A230500428AA1 /* ActivityLogHeaderTableViewCell.xib */; };
+		79E8F1511B8FC1B8009CE450 /* ProfileUserDetailsModel.swift in Sources */ = {isa = PBXBuildFile; fileRef = 79E8F1501B8FC1B8009CE450 /* ProfileUserDetailsModel.swift */; };
+		79E8F1531B9035D9009CE450 /* SearchResultModel.swift in Sources */ = {isa = PBXBuildFile; fileRef = 79E8F1521B9035D9009CE450 /* SearchResultModel.swift */; };
 		79F0DD9C1B7B17D500EB8053 /* CartModel.swift in Sources */ = {isa = PBXBuildFile; fileRef = 79F0DD9B1B7B17D500EB8053 /* CartModel.swift */; };
 		79F0DD9E1B7B24CB00EB8053 /* CartProductDetailsModel.swift in Sources */ = {isa = PBXBuildFile; fileRef = 79F0DD9D1B7B24CB00EB8053 /* CartProductDetailsModel.swift */; };
 		79F2F5521B85795C00F57E4B /* WishlistModel.swift in Sources */ = {isa = PBXBuildFile; fileRef = 79F2F5511B85795C00F57E4B /* WishlistModel.swift */; };
@@ -287,7 +310,7 @@
 		79F2F55B1B85FD9D00F57E4B /* FilterViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = 79F2F5591B85FD9D00F57E4B /* FilterViewController.swift */; };
 		79F2F55C1B85FD9D00F57E4B /* FilterViewController.xib in Resources */ = {isa = PBXBuildFile; fileRef = 79F2F55A1B85FD9D00F57E4B /* FilterViewController.xib */; };
 		79F417761B7C3ADB0047D02D /* CartProductAttributeViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = 79F417741B7C3ADB0047D02D /* CartProductAttributeViewController.swift */; };
-		C6A432EAC74EF7DD977AFF7B /* libPods.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 5D038C18A7712E626564D2D3 /* libPods.a */; };
+		BE00C15B75D7E76D254AAEC1 /* libPods.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 5D038C18A7712E626564D2D3 /* libPods.a */; };
 /* End PBXBuildFile section */
 
 /* Begin PBXContainerItemProxy section */
@@ -525,6 +548,11 @@
 		26AFB3C61B79DE5C00E50926 /* ProductAttributeCollectionViewCell.xib */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.xib; path = ProductAttributeCollectionViewCell.xib; sourceTree = "<group>"; };
 		26AFB3C71B79DE5C00E50926 /* ProductSellerViewCollectionViewCell.xib */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.xib; path = ProductSellerViewCollectionViewCell.xib; sourceTree = "<group>"; };
 		26B1B89F1B86D4BD006405CE /* TransactionDetailsView.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = TransactionDetailsView.swift; path = YiLinkerOnlineBuyer/resources/View/TransactionDetailsView.swift; sourceTree = SOURCE_ROOT; };
+		26C285411B8FAA48005EBD3A /* GetAddressesModel.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = GetAddressesModel.swift; path = YiLinkerOnlineBuyer/resources/Model/GetAddressesModel.swift; sourceTree = SOURCE_ROOT; };
+		26C285431B8FADE3005EBD3A /* AddressModelV2.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = AddressModelV2.swift; path = YiLinkerOnlineBuyer/resources/Model/AddressModelV2.swift; sourceTree = SOURCE_ROOT; };
+		26C285451B8FEE42005EBD3A /* ProvinceModel.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = ProvinceModel.swift; path = YiLinkerOnlineBuyer/resources/Model/ProvinceModel.swift; sourceTree = SOURCE_ROOT; };
+		26C285471B8FF546005EBD3A /* CityModel.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = CityModel.swift; path = YiLinkerOnlineBuyer/resources/Model/CityModel.swift; sourceTree = SOURCE_ROOT; };
+		26C285491B8FF555005EBD3A /* BarangayModel.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = BarangayModel.swift; path = YiLinkerOnlineBuyer/resources/Model/BarangayModel.swift; sourceTree = SOURCE_ROOT; };
 		26D54FDD1B860CF400522398 /* TransactionViewController.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = TransactionViewController.swift; path = YiLinkerOnlineBuyer/resources/ViewController/TransactionViewController.swift; sourceTree = SOURCE_ROOT; };
 		26D54FDE1B860CF400522398 /* TransactionViewController.xib */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.xib; name = TransactionViewController.xib; path = YiLinkerOnlineBuyer/resources/ViewController/TransactionViewController.xib; sourceTree = SOURCE_ROOT; };
 		26D54FE51B86136300522398 /* TransactionTableViewCell.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = TransactionTableViewCell.swift; path = YiLinkerOnlineBuyer/resources/ViewController/TransactionTableViewCell.swift; sourceTree = SOURCE_ROOT; };
@@ -559,6 +587,8 @@
 		79A1C6F81B835BB50043AA36 /* ProductResultGridCollectionViewCell.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = ProductResultGridCollectionViewCell.swift; path = YiLinkerOnlineBuyer/resources/View/ProductResultGridCollectionViewCell.swift; sourceTree = SOURCE_ROOT; };
 		79A1C6FA1B83787B0043AA36 /* SellerResultCollectionViewCell.xib */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.xib; path = SellerResultCollectionViewCell.xib; sourceTree = "<group>"; };
 		79A1C6FC1B8385310043AA36 /* SellerResultCollectionViewCell.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = SellerResultCollectionViewCell.swift; path = YiLinkerOnlineBuyer/resources/View/SellerResultCollectionViewCell.swift; sourceTree = SOURCE_ROOT; };
+		79AA08321B8F4DCF00AF3AA4 /* CartProductAttributeTableViewCell.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = CartProductAttributeTableViewCell.swift; path = YiLinkerOnlineBuyer/resources/View/CartProductAttributeTableViewCell.swift; sourceTree = SOURCE_ROOT; };
+		79AA08341B8F4E6300AF3AA4 /* CartProductAttributeTableViewCell.xib */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.xib; name = CartProductAttributeTableViewCell.xib; path = YiLinkerOnlineBuyer/resources/Xib/CartProductAttributeTableViewCell.xib; sourceTree = SOURCE_ROOT; };
 		79E68B721B8AB900008626E4 /* ActivityLogTableViewCell.xib */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.xib; name = ActivityLogTableViewCell.xib; path = YiLinkerOnlineBuyer/resources/Xib/ActivityLogTableViewCell.xib; sourceTree = SOURCE_ROOT; };
 		79E68B741B8AC390008626E4 /* ActivityLogTableViewCell.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = ActivityLogTableViewCell.swift; path = YiLinkerOnlineBuyer/resources/View/ActivityLogTableViewCell.swift; sourceTree = SOURCE_ROOT; };
 		79E68B7E1B8AEC00008626E4 /* MyPointsTableViewController.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = MyPointsTableViewController.swift; path = YiLinkerOnlineBuyer/resources/ViewController/MyPointsTableViewController.swift; sourceTree = SOURCE_ROOT; };
@@ -572,6 +602,20 @@
 		79E68B8E1B8B0717008626E4 /* PointsTableViewCell.xib */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.xib; path = PointsTableViewCell.xib; sourceTree = "<group>"; };
 		79E68B901B8B0AE9008626E4 /* PointModel.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = PointModel.swift; path = YiLinkerOnlineBuyer/resources/Model/PointModel.swift; sourceTree = SOURCE_ROOT; };
 		79E68B921B8B0B8D008626E4 /* PointsTableViewCell.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = PointsTableViewCell.swift; path = YiLinkerOnlineBuyer/resources/View/PointsTableViewCell.swift; sourceTree = SOURCE_ROOT; };
+		79E68B9A1B8B4239008626E4 /* ProfileSettingsTableViewCell.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = ProfileSettingsTableViewCell.swift; sourceTree = "<group>"; };
+		79E68B9C1B8B4270008626E4 /* ProfileSettingsTableViewCell.xib */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.xib; path = ProfileSettingsTableViewCell.xib; sourceTree = "<group>"; };
+		79E68B9E1B8B428B008626E4 /* ProfileSettingsViewController.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = ProfileSettingsViewController.swift; sourceTree = "<group>"; };
+		79E68B9F1B8B428B008626E4 /* ProfileSettingsViewController.xib */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.xib; name = ProfileSettingsViewController.xib; path = ../ViewController/ProfileSettingsViewController.xib; sourceTree = "<group>"; };
+		79E68BA21B8B4376008626E4 /* EditProfileTableViewController.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = EditProfileTableViewController.swift; path = YiLinkerOnlineBuyer/resources/ViewController/EditProfileTableViewController.swift; sourceTree = SOURCE_ROOT; };
+		79E68BA31B8B4376008626E4 /* EditProfileTableViewController.xib */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.xib; name = EditProfileTableViewController.xib; path = YiLinkerOnlineBuyer/resources/ViewController/EditProfileTableViewController.xib; sourceTree = SOURCE_ROOT; };
+		79E68BA61B8B4572008626E4 /* EditProfileAddPhotoTableViewCell.xib */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.xib; path = EditProfileAddPhotoTableViewCell.xib; sourceTree = "<group>"; };
+		79E68BA81B8B4780008626E4 /* EditProfileAddPhotoTableViewCell.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = EditProfileAddPhotoTableViewCell.swift; path = YiLinkerOnlineBuyer/resources/View/EditProfileAddPhotoTableViewCell.swift; sourceTree = SOURCE_ROOT; };
+		79E68BAA1B8B4EB9008626E4 /* EditProfilePersonalInformationTableViewCell.xib */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.xib; path = EditProfilePersonalInformationTableViewCell.xib; sourceTree = "<group>"; };
+		79E68BAC1B8B5081008626E4 /* EditProfilePersonalInformationTableViewCell.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = EditProfilePersonalInformationTableViewCell.swift; path = YiLinkerOnlineBuyer/resources/View/EditProfilePersonalInformationTableViewCell.swift; sourceTree = SOURCE_ROOT; };
+		79E68BAE1B8B5306008626E4 /* EditProfileAddressTableViewCell.xib */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.xib; path = EditProfileAddressTableViewCell.xib; sourceTree = "<group>"; };
+		79E68BB21B8B5862008626E4 /* EditProfileAddressTableViewCell.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = EditProfileAddressTableViewCell.swift; path = YiLinkerOnlineBuyer/resources/View/EditProfileAddressTableViewCell.swift; sourceTree = SOURCE_ROOT; };
+		79E68BB41B8B5ADE008626E4 /* EditProfileAccountInformationTableViewCell.xib */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.xib; path = EditProfileAccountInformationTableViewCell.xib; sourceTree = "<group>"; };
+		79E68BB61B8B5C58008626E4 /* EditProfileAccountInformationTableViewCell.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = EditProfileAccountInformationTableViewCell.swift; path = YiLinkerOnlineBuyer/resources/View/EditProfileAccountInformationTableViewCell.swift; sourceTree = SOURCE_ROOT; };
 		79E85FB91B89DC1500428AA1 /* ProfileHeaderTableViewCell.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = ProfileHeaderTableViewCell.swift; path = YiLinkerOnlineBuyer/resources/View/ProfileHeaderTableViewCell.swift; sourceTree = SOURCE_ROOT; };
 		79E85FBA1B89DC1500428AA1 /* ProfileHeaderTableViewCell.xib */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.xib; name = ProfileHeaderTableViewCell.xib; path = YiLinkerOnlineBuyer/resources/View/ProfileHeaderTableViewCell.xib; sourceTree = SOURCE_ROOT; };
 		79E85FBD1B89DE1C00428AA1 /* ProfileTableViewCell.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = ProfileTableViewCell.swift; path = YiLinkerOnlineBuyer/resources/View/ProfileTableViewCell.swift; sourceTree = SOURCE_ROOT; };
@@ -581,6 +625,8 @@
 		79E85FCD1B8A1F5800428AA1 /* ActivityLogModel.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = ActivityLogModel.swift; path = YiLinkerOnlineBuyer/resources/Model/ActivityLogModel.swift; sourceTree = SOURCE_ROOT; };
 		79E85FCF1B8A1FBD00428AA1 /* ActivityModel.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = ActivityModel.swift; path = YiLinkerOnlineBuyer/resources/Model/ActivityModel.swift; sourceTree = SOURCE_ROOT; };
 		79E85FD11B8A230500428AA1 /* ActivityLogHeaderTableViewCell.xib */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.xib; path = ActivityLogHeaderTableViewCell.xib; sourceTree = "<group>"; };
+		79E8F1501B8FC1B8009CE450 /* ProfileUserDetailsModel.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = ProfileUserDetailsModel.swift; path = YiLinkerOnlineBuyer/resources/Model/ProfileUserDetailsModel.swift; sourceTree = SOURCE_ROOT; };
+		79E8F1521B9035D9009CE450 /* SearchResultModel.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = SearchResultModel.swift; path = YiLinkerOnlineBuyer/resources/Model/SearchResultModel.swift; sourceTree = SOURCE_ROOT; };
 		79F0DD9B1B7B17D500EB8053 /* CartModel.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = CartModel.swift; path = YiLinkerOnlineBuyer/resources/Model/CartModel.swift; sourceTree = SOURCE_ROOT; };
 		79F0DD9D1B7B24CB00EB8053 /* CartProductDetailsModel.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = CartProductDetailsModel.swift; path = YiLinkerOnlineBuyer/resources/Model/CartProductDetailsModel.swift; sourceTree = SOURCE_ROOT; };
 		79F2F5511B85795C00F57E4B /* WishlistModel.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = WishlistModel.swift; path = YiLinkerOnlineBuyer/resources/Model/WishlistModel.swift; sourceTree = SOURCE_ROOT; };
@@ -589,6 +635,7 @@
 		79F2F55A1B85FD9D00F57E4B /* FilterViewController.xib */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.xib; name = FilterViewController.xib; path = YiLinkerOnlineBuyer/resources/ViewController/FilterViewController.xib; sourceTree = SOURCE_ROOT; };
 		79F417741B7C3ADB0047D02D /* CartProductAttributeViewController.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = CartProductAttributeViewController.swift; path = YiLinkerOnlineBuyer/resources/ViewController/CartProductAttributeViewController.swift; sourceTree = SOURCE_ROOT; };
 		9140515446F9D97EC8790C7B /* Pods.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = Pods.debug.xcconfig; path = "Pods/Target Support Files/Pods/Pods.debug.xcconfig"; sourceTree = "<group>"; };
+		F7CCDA451B940268000F5AD4 /* libPods.a */ = {isa = PBXFileReference; lastKnownFileType = archive.ar; name = libPods.a; path = "Pods/../build/Debug-iphoneos/libPods.a"; sourceTree = "<group>"; };
 /* End PBXFileReference section */
 
 /* Begin PBXFrameworksBuildPhase section */
@@ -596,7 +643,7 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				C6A432EAC74EF7DD977AFF7B /* libPods.a in Frameworks */,
+				BE00C15B75D7E76D254AAEC1 /* libPods.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -743,30 +790,37 @@
 		0C9937041B750583000D6074 /* Model */ = {
 			isa = PBXGroup;
 			children = (
-				79A1C6EC1B8329200043AA36 /* SearchSuggestionModel.swift */,
+				0C5926051B836EA30021EA76 /* AddressModel.swift */,
+				79F0DD9B1B7B17D500EB8053 /* CartModel.swift */,
+				79F0DD9D1B7B24CB00EB8053 /* CartProductDetailsModel.swift */,
+				2689FBF91B8044CF007BEA68 /* CategoryModel.swift */,
+				2632F5231B7F8EFF006931E4 /* FollwedSellerModel.swift */,
 				0C9937051B750583000D6074 /* HomePageProductModel.swift */,
-				0C9937061B750583000D6074 /* ProductModel.swift */,
-				0C9937071B750583000D6074 /* SellerModel.swift */,
-				26AFB3941B79DDEA00E50926 /* ProductDetailsModel.swift */,
 				26AFB3951B79DDEA00E50926 /* ProductAttributeModel.swift */,
 				26AFB3961B79DDEA00E50926 /* ProductAvailableAttributeCombinationModel.swift */,
+				26AFB3941B79DDEA00E50926 /* ProductDetailsModel.swift */,
+				0C9937061B750583000D6074 /* ProductModel.swift */,
 				26AFB3971B79DDEA00E50926 /* ProductReviewModel.swift */,
 				26AFB3981B79DDEA00E50926 /* ProductReviewsModel.swift */,
 				26AFB3991B79DDEA00E50926 /* ProductSellerModel.swift */,
-				79F0DD9B1B7B17D500EB8053 /* CartModel.swift */,
-				79F0DD9D1B7B24CB00EB8053 /* CartProductDetailsModel.swift */,
-				0C329E741B7B2D32005BE2B6 /* RegisterModel.swift */,
 				2689FBFB1B81856B007BEA68 /* ProductUnitsModel.swift */,
-				2632F5231B7F8EFF006931E4 /* FollwedSellerModel.swift */,
-				2689FBF91B8044CF007BEA68 /* CategoryModel.swift */,
 				0C5926031B836C670021EA76 /* ProfileModel.swift */,
-				0C5926051B836EA30021EA76 /* AddressModel.swift */,
+				0C329E741B7B2D32005BE2B6 /* RegisterModel.swift */,
+				79A1C6EC1B8329200043AA36 /* SearchSuggestionModel.swift */,
+				0C9937071B750583000D6074 /* SellerModel.swift */,
 				79F2F5511B85795C00F57E4B /* WishlistModel.swift */,
 				79F2F5531B859AD100F57E4B /* WishlistProductDetailsModel.swift */,
+				79E8F1501B8FC1B8009CE450 /* ProfileUserDetailsModel.swift */,
 				7971F73C1B86189100322861 /* FilterAttributeModel.swift */,
 				79E85FCD1B8A1F5800428AA1 /* ActivityLogModel.swift */,
 				79E85FCF1B8A1FBD00428AA1 /* ActivityModel.swift */,
 				79E68B901B8B0AE9008626E4 /* PointModel.swift */,
+				26C285411B8FAA48005EBD3A /* GetAddressesModel.swift */,
+				26C285431B8FADE3005EBD3A /* AddressModelV2.swift */,
+				26C285451B8FEE42005EBD3A /* ProvinceModel.swift */,
+				26C285471B8FF546005EBD3A /* CityModel.swift */,
+				26C285491B8FF555005EBD3A /* BarangayModel.swift */,
+				79E8F1521B9035D9009CE450 /* SearchResultModel.swift */,
 			);
 			path = Model;
 			sourceTree = "<group>";
@@ -783,20 +837,35 @@
 		0C99370B1B750583000D6074 /* View */ = {
 			isa = PBXGroup;
 			children = (
-				26D54FE51B86136300522398 /* TransactionTableViewCell.swift */,
-				7971F7401B861AC900322861 /* FilterTableViewCell.swift */,
+				0C5111DB1B81F21A002F0001 /* AboutSellerTableViewCell.swift */,
+				79E68B741B8AC390008626E4 /* ActivityLogTableViewCell.swift */,
+				79AA08321B8F4DCF00AF3AA4 /* CartProductAttributeTableViewCell.swift */,
 				797D490E1B7A509300617F6B /* CartTableViewCell.swift */,
 				0C6490751B7781E400F88F92 /* Category.swift */,
 				0C2F45271B85E95D00021F45 /* ChangeAddressCollectionViewCell.swift */,
 				0C5007671B861B1600BC0445 /* ChangeAddressFooterCollectionViewCell.swift */,
+				0C2F44DB1B8583EF00021F45 /* CheckoutViews.swift */,
+				0C374F501B89EC4D0050AE1D /* CustomizeSelectedCollectionViewCell.swift */,
+				0C374F4A1B8998F30050AE1D /* CustomizeShoppingCollectionViewCell.swift */,
+				0C374F4E1B89A4B70050AE1D /* CustomizeShoppingCollectionViewLayout.swift */,
+				0C374F5C1B8A2DBF0050AE1D /* CustomizeShoppingFlowLayout.swift */,
+				0C374F581B8A03CC0050AE1D /* CustomizeShoppingTableViewCell.swift */,
+				0C374F591B8A03CC0050AE1D /* CustomizeShoppingTableViewCell.xib */,
 				0C374EF21B8851C00050AE1D /* DeliverToTableViewCell.swift */,
 				0C99370C1B750583000D6074 /* DiscountLabel.swift */,
 				0C99370D1B750583000D6074 /* DynamicRoundedButton.swift */,
 				0C99370E1B750583000D6074 /* DynamicRoundedLabel.swift */,
 				0CDA117D1B764B79007B5DED /* DynamicRoundedTextField.swift */,
+				0CD103EB1B8B4769002E15F4 /* DynamicRoundedView.swift */,
+				79E68BB61B8B5C58008626E4 /* EditProfileAccountInformationTableViewCell.swift */,
+				79E68BA81B8B4780008626E4 /* EditProfileAddPhotoTableViewCell.swift */,
+				79E68BB21B8B5862008626E4 /* EditProfileAddressTableViewCell.swift */,
+				79E68BAC1B8B5081008626E4 /* EditProfilePersonalInformationTableViewCell.swift */,
 				0C329E781B7B47FF005BE2B6 /* EmptyView.swift */,
+				7971F7401B861AC900322861 /* FilterTableViewCell.swift */,
 				2632F51F1B7F8690006931E4 /* FollowedSellerTableViewCell.swift */,
 				0C99370F1B750583000D6074 /* FullImageCollectionViewCell.swift */,
+				0C5111E31B8211B6002F0001 /* GeneralRatingTableViewCell.swift */,
 				0C9937101B750583000D6074 /* GenericCollectionViewCell.swift */,
 				0C9937111B750583000D6074 /* HalfVerticalImageCollectionViewCell.swift */,
 				0C9937121B750583000D6074 /* HomePageCollectionViewLayout.swift */,
@@ -804,73 +873,64 @@
 				0C1003F21B87629400CAA17A /* NewAddressTableViewCell.swift */,
 				0C9937141B750583000D6074 /* NewSellerCollectionViewCell.swift */,
 				0C9937151B750583000D6074 /* NewSellerScrollableCollectionViewCell.swift */,
+				0C2F44D51B857F0000021F45 /* OrderSummaryTableViewCell.swift */,
 				0C10042E1B87AB9100CAA17A /* PaymentTableViewCell.swift */,
 				0C374EFE1B889D9A0050AE1D /* PlainTableViewCell.swift */,
+				79E68B8C1B8B0431008626E4 /* PointsBreakdownTableViewCell.swift */,
+				79E68B881B8AFE99008626E4 /* PointsDetailsTableViewCell.swift */,
+				79E68B841B8AF4D0008626E4 /* PointsEarnedTableViewCell.swift */,
+				79E68B921B8B0B8D008626E4 /* PointsTableViewCell.swift */,
 				26AFB3A61B79DE2900E50926 /* ProductAttributeTableViewCell.swift */,
 				26AFB3A11B79DE2900E50926 /* ProductDescriptionView.swift */,
 				26AFB3A01B79DE2900E50926 /* ProductImagesView.swift */,
+				26EC36181B7EE9DA0012B2B8 /* ProductImagesViewCollectionViewCell.swift */,
 				0C9937161B750583000D6074 /* ProductImageView.swift */,
 				0C9937171B750583000D6074 /* ProductitemWithVerticalDisplayCollectionViewCell.swift */,
+				79A1C6F81B835BB50043AA36 /* ProductResultGridCollectionViewCell.swift */,
+				79A1C6F41B8357BA0043AA36 /* ProductResultListCollectionViewCell.swift */,
 				26AFB3A31B79DE2900E50926 /* ProductReviewFooterView.swift */,
 				26AFB3A21B79DE2900E50926 /* ProductReviewHeaderView.swift */,
 				26AFB3A41B79DE2900E50926 /* ProductSellerView.swift */,
 				26AFB3A71B79DE2900E50926 /* ProductSellerViewCollectionViewCell.swift */,
+				0C5111DF1B8207C7002F0001 /* ProductsTableViewCell.swift */,
 				0C9937181B750583000D6074 /* ProductWithCenterNameCollectionViewCell.swift */,
+				79E85FB91B89DC1500428AA1 /* ProfileHeaderTableViewCell.swift */,
+				79E68B9A1B8B4239008626E4 /* ProfileSettingsTableViewCell.swift */,
+				79E85FBD1B89DE1C00428AA1 /* ProfileTableViewCell.swift */,
 				26AFB3A51B79DE2900E50926 /* ReviewTableViewCell.swift */,
 				0C9937191B750583000D6074 /* RoundedButton.swift */,
 				0C99371A1B750583000D6074 /* RoundedImageView.swift */,
 				0C99371B1B750583000D6074 /* RoundedLabel.swift */,
 				0C99371C1B750583000D6074 /* ScrollableCollectionViewCell.swift */,
 				79A1C6EE1B8329390043AA36 /* SearchSuggestionTableViewCell.swift */,
+				0C5111E71B821D6F002F0001 /* SeeMoreTableViewCell.swift */,
 				0C99371D1B750583000D6074 /* SellerCollectionViewCell.swift */,
+				79A1C6FC1B8385310043AA36 /* SellerResultCollectionViewCell.swift */,
+				0C5111D71B81CEE7002F0001 /* SellerTableHeaderView.swift */,
 				0C99371E1B750583000D6074 /* SemiRoundedButton.swift */,
+				0C2F44DF1B85A0AA00021F45 /* ShipToTableViewCell.swift */,
+				7971F7481B862D6300322861 /* SortTableViewCell.swift */,
 				0C374EFA1B8862E10050AE1D /* SuccessTableHeaderViewCell.swift */,
 				0C374F061B88DC440050AE1D /* TotalTableViewCell.swift */,
-				0C99371F1B750583000D6074 /* TwoColumnGridCollectionViewCell.swift */,
-				0C9937201B750583000D6074 /* VerticalImageCollectionViewCell.swift */,
-				0C9937211B750583000D6074 /* ViewMoreFooterCollectionViewCell.swift */,
-				7987F3171B7B744A00B02DF4 /* WishlistTableViewCell.swift */,
-				0C374F4A1B8998F30050AE1D /* CustomizeShoppingCollectionViewCell.swift */,
-				0C374F4E1B89A4B70050AE1D /* CustomizeShoppingCollectionViewLayout.swift */,
-				0C374F501B89EC4D0050AE1D /* CustomizeSelectedCollectionViewCell.swift */,
-				0C374F581B8A03CC0050AE1D /* CustomizeShoppingTableViewCell.swift */,
-				0C374F5C1B8A2DBF0050AE1D /* CustomizeShoppingFlowLayout.swift */,
-				0C374F591B8A03CC0050AE1D /* CustomizeShoppingTableViewCell.xib */,
-				0CD103EB1B8B4769002E15F4 /* DynamicRoundedView.swift */,
-				26EC36181B7EE9DA0012B2B8 /* ProductImagesViewCollectionViewCell.swift */,
-				0C5111D71B81CEE7002F0001 /* SellerTableHeaderView.swift */,
-				0C5111DB1B81F21A002F0001 /* AboutSellerTableViewCell.swift */,
-				0C5111DF1B8207C7002F0001 /* ProductsTableViewCell.swift */,
-				0C5111E31B8211B6002F0001 /* GeneralRatingTableViewCell.swift */,
-				0C5111E71B821D6F002F0001 /* SeeMoreTableViewCell.swift */,
-				79A1C6F41B8357BA0043AA36 /* ProductResultListCollectionViewCell.swift */,
-				79A1C6F81B835BB50043AA36 /* ProductResultGridCollectionViewCell.swift */,
-				79A1C6FC1B8385310043AA36 /* SellerResultCollectionViewCell.swift */,
-				0C2F44D51B857F0000021F45 /* OrderSummaryTableViewCell.swift */,
-				0C2F44DB1B8583EF00021F45 /* CheckoutViews.swift */,
-				0C2F44DF1B85A0AA00021F45 /* ShipToTableViewCell.swift */,
-				268C1BB21B865AB8009FA106 /* TransactionIdView.swift */,
-				268C1BB61B865AF8009FA106 /* TransactionSellerView.swift */,
-				268C1BB81B865B09009FA106 /* TransactionDeliveryStatusView.swift */,
 				268C1BBA1B865B13009FA106 /* TransactionButtons.swift */,
+				2614E64C1B88FC5C00EE8B35 /* TransactionDeliveryLog2TableViewCell.swift */,
+				2614E64D1B88FC5C00EE8B35 /* TransactionDeliveryLog2TableViewCell.xib */,
+				2614E6481B886D3800EE8B35 /* TransactionDeliveryLogTableViewCell.swift */,
+				2614E6491B886D3800EE8B35 /* TransactionDeliveryLogTableViewCell.xib */,
+				268C1BB81B865B09009FA106 /* TransactionDeliveryStatusView.swift */,
+				26DFF63C1B87B0E9005D8EDE /* TransactionDescriptionView.swift */,
 				26B1B89F1B86D4BD006405CE /* TransactionDetailsView.swift */,
+				268C1BB21B865AB8009FA106 /* TransactionIdView.swift */,
+				26DFF6441B87BBE3005D8EDE /* TransactionProductDetailsTableViewCell.swift */,
+				26DFF63A1B87B0D7005D8EDE /* TransactionProductDetailsView.swift */,
 				26DFF6361B87B0AA005D8EDE /* TransactionProductImagesView.swift */,
 				26DFF6381B87B0C1005D8EDE /* TransactionPurchaseDetailsView.swift */,
-				26DFF63A1B87B0D7005D8EDE /* TransactionProductDetailsView.swift */,
-				26DFF63C1B87B0E9005D8EDE /* TransactionDescriptionView.swift */,
-				26DFF6441B87BBE3005D8EDE /* TransactionProductDetailsTableViewCell.swift */,
-				2614E6481B886D3800EE8B35 /* TransactionDeliveryLogTableViewCell.swift */,
-				2614E6491B886D3800EE8B35 /* TransactionDeliveryLogTableViewCell.xib */,
-				2614E64C1B88FC5C00EE8B35 /* TransactionDeliveryLog2TableViewCell.swift */,
-				2614E64D1B88FC5C00EE8B35 /* TransactionDeliveryLog2TableViewCell.xib */,
-				7971F7481B862D6300322861 /* SortTableViewCell.swift */,
-				79E85FB91B89DC1500428AA1 /* ProfileHeaderTableViewCell.swift */,
-				79E85FBD1B89DE1C00428AA1 /* ProfileTableViewCell.swift */,
-				79E68B741B8AC390008626E4 /* ActivityLogTableViewCell.swift */,
-				79E68B841B8AF4D0008626E4 /* PointsEarnedTableViewCell.swift */,
-				79E68B881B8AFE99008626E4 /* PointsDetailsTableViewCell.swift */,
-				79E68B8C1B8B0431008626E4 /* PointsBreakdownTableViewCell.swift */,
-				79E68B921B8B0B8D008626E4 /* PointsTableViewCell.swift */,
+				268C1BB61B865AF8009FA106 /* TransactionSellerView.swift */,
+				26D54FE51B86136300522398 /* TransactionTableViewCell.swift */,
+				0C99371F1B750583000D6074 /* TwoColumnGridCollectionViewCell.swift */,
+				0C9937201B750583000D6074 /* VerticalImageCollectionViewCell.swift */,
+				0C9937211B750583000D6074 /* ViewMoreFooterCollectionViewCell.swift */,
+				7987F3171B7B744A00B02DF4 /* WishlistTableViewCell.swift */,
 			);
 			path = View;
 			sourceTree = "<group>";
@@ -882,11 +942,14 @@
 				0C1003F61B87690300CAA17A /* AddAddressTableViewController.swift */,
 				79F417741B7C3ADB0047D02D /* CartProductAttributeViewController.swift */,
 				0C9937231B750583000D6074 /* CartViewController.swift */,
+				2689FBF51B80412D007BEA68 /* CategoriesTableViewCell.swift */,
 				0C329E8A1B7B73B7005BE2B6 /* CategoriesViewController.swift */,
 				0C2F45231B85E7CA00021F45 /* ChangeAddressViewController.swift */,
+				2689FBFD1B844A69007BEA68 /* CheckoutContainerViewController.swift */,
 				0C9937241B750583000D6074 /* CircularMenuViewController.swift */,
 				0C329E821B7B738E005BE2B6 /* CustomizeShoppingViewController.swift */,
 				0C329E941B7B7C5B005BE2B6 /* CustomTabBarController.swift */,
+				79E68BA21B8B4376008626E4 /* EditProfileTableViewController.swift */,
 				79F2F5591B85FD9D00F57E4B /* FilterViewController.swift */,
 				0CC8A6391B7B9BBF00C91425 /* FollowedSellerViewController.swift */,
 				0C329E7A1B7B7353005BE2B6 /* HelpViewController.swift */,
@@ -897,34 +960,33 @@
 				0CDA11791B760E1A007B5DED /* LoginViewController.swift */,
 				0C329E7E1B7B7376005BE2B6 /* MessagingViewController.swift */,
 				79E68B7E1B8AEC00008626E4 /* MyPointsTableViewController.swift */,
+				0C2F44AB1B848B7E00021F45 /* OverViewViewController.swift */,
+				0C2F44A71B848B5300021F45 /* PaymentViewController.swift */,
 				0C374EF61B88552E0050AE1D /* PaymentWebViewViewController.swift */,
 				26AFB3B21B79DE3800E50926 /* ProductAttributeViewController.swift */,
 				26AFB3B41B79DE3800E50926 /* ProductDescriptionViewController.swift */,
 				26AFB3B31B79DE3800E50926 /* ProductReviewViewController.swift */,
 				26AFB3B01B79DE3800E50926 /* ProductViewController.swift */,
 				26AFB3B11B79DE3800E50926 /* ProductViewsViewController.swift */,
+				79E68B9E1B8B428B008626E4 /* ProfileSettingsViewController.swift */,
 				0CC8A63D1B7B9BF600C91425 /* ProfileViewController.swift */,
 				0CE35EB71B76711400AAA8F1 /* RegisterViewController.swift */,
+				0C5925FF1B8327BA0021EA76 /* ResultViewController.swift */,
 				0C9937271B750583000D6074 /* SearchViewController.swift */,
 				0C5111D31B81CD69002F0001 /* SellerViewController.swift */,
 				0CB9DB3A1B6A3EA100F2CA13 /* StarterContentPageViewController.swift */,
 				0CB9DB381B6A3DC700F2CA13 /* StartPageViewController.swift */,
-				0C329E861B7B73A4005BE2B6 /* TodaysPromoViewController.swift */,
-				0C9937281B750583000D6074 /* WishlistViewController.swift */,
-				2689FBF51B80412D007BEA68 /* CategoriesTableViewCell.swift */,
-				2689FBFD1B844A69007BEA68 /* CheckoutContainerViewController.swift */,
-				0C5925FF1B8327BA0021EA76 /* ResultViewController.swift */,
 				0C2F44A31B848B3A00021F45 /* SummaryViewController.swift */,
-				0C2F44A71B848B5300021F45 /* PaymentViewController.swift */,
-				0C2F44AB1B848B7E00021F45 /* OverViewViewController.swift */,
-				26D54FDD1B860CF400522398 /* TransactionViewController.swift */,
-				268C1BAA1B864D8B009FA106 /* TransactionDetailsViewController.swift */,
-				26DFF62E1B879126005D8EDE /* TransactionProductDetailsViewController.swift */,
-				26DFF6321B8791B5005D8EDE /* TransactionViews.swift */,
+				0C329E861B7B73A4005BE2B6 /* TodaysPromoViewController.swift */,
 				2614E63E1B885BFA00EE8B35 /* TransactionDeliveryLogViewController.swift */,
 				2614E63F1B885BFA00EE8B35 /* TransactionDeliveryLogViewController.xib */,
+				268C1BAA1B864D8B009FA106 /* TransactionDetailsViewController.swift */,
 				2614E6501B89051B00EE8B35 /* TransactionLeaveFeedbackViewController.swift */,
 				2614E6511B89051B00EE8B35 /* TransactionLeaveFeedbackViewController.xib */,
+				26DFF62E1B879126005D8EDE /* TransactionProductDetailsViewController.swift */,
+				26D54FDD1B860CF400522398 /* TransactionViewController.swift */,
+				26DFF6321B8791B5005D8EDE /* TransactionViews.swift */,
+				0C9937281B750583000D6074 /* WishlistViewController.swift */,
 			);
 			path = ViewController;
 			sourceTree = "<group>";
@@ -957,6 +1019,11 @@
 				0C2F44DD1B85840F00021F45 /* CheckoutViews.xib */,
 				0C374F261B88E3790050AE1D /* CustomizeShoppingViewController.xib */,
 				0C374F131B88E3790050AE1D /* DeliverToTableViewCell.xib */,
+				79E68BB41B8B5ADE008626E4 /* EditProfileAccountInformationTableViewCell.xib */,
+				79E68BA61B8B4572008626E4 /* EditProfileAddPhotoTableViewCell.xib */,
+				79E68BAE1B8B5306008626E4 /* EditProfileAddressTableViewCell.xib */,
+				79E68BAA1B8B4EB9008626E4 /* EditProfilePersonalInformationTableViewCell.xib */,
+				79E68BA31B8B4376008626E4 /* EditProfileTableViewController.xib */,
 				0C329E761B7B47DC005BE2B6 /* EmptyView.xib */,
 				7971F73E1B861ABE00322861 /* FilterTableViewCell.xib */,
 				79F2F55A1B85FD9D00F57E4B /* FilterViewController.xib */,
@@ -997,6 +1064,8 @@
 				26AFB3BB1B79DE5600E50926 /* ProductViewsViewController.xib */,
 				0C9937311B750583000D6074 /* ProductWithCenterNameCollectionViewCell.xib */,
 				79E85FBA1B89DC1500428AA1 /* ProfileHeaderTableViewCell.xib */,
+				79E68B9C1B8B4270008626E4 /* ProfileSettingsTableViewCell.xib */,
+				79E68B9F1B8B428B008626E4 /* ProfileSettingsViewController.xib */,
 				79E85FBE1B89DE1C00428AA1 /* ProfileTableViewCell.xib */,
 				0C374F121B88E3790050AE1D /* ProfileViewController.xib */,
 				0C374F241B88E3790050AE1D /* ResultViewController.xib */,
@@ -1019,6 +1088,7 @@
 				0C9937361B750583000D6074 /* VerticalImageCollectionViewCell.xib */,
 				0C9937371B750583000D6074 /* ViewMoreFooterCollectionViewCell.xib */,
 				7987F3191B7B746000B02DF4 /* WishlistTableViewCell.xib */,
+				79AA08341B8F4E6300AF3AA4 /* CartProductAttributeTableViewCell.xib */,
 			);
 			path = Xib;
 			sourceTree = "<group>";
@@ -1043,6 +1113,7 @@
 		6E2C7023C2EB23DC920F908B /* Frameworks */ = {
 			isa = PBXGroup;
 			children = (
+				F7CCDA451B940268000F5AD4 /* libPods.a */,
 				5D038C18A7712E626564D2D3 /* libPods.a */,
 			);
 			name = Frameworks;
@@ -1139,6 +1210,7 @@
 				26AFB3C11B79DE5600E50926 /* ProductReviewViewController.xib in Resources */,
 				7987F31A1B7B746000B02DF4 /* WishlistTableViewCell.xib in Resources */,
 				0C99376D1B750583000D6074 /* VerticalImageCollectionViewCell.xib in Resources */,
+				79E68BB51B8B5ADE008626E4 /* EditProfileAccountInformationTableViewCell.xib in Resources */,
 				0C2F44D31B8576FE00021F45 /* Panton Thin.otf in Resources */,
 				0C99376C1B750583000D6074 /* TwoColumnGridCollectionViewCell.xib in Resources */,
 				0C329E771B7B47DC005BE2B6 /* EmptyView.xib in Resources */,
@@ -1195,6 +1267,7 @@
 				7971F73F1B861ABE00322861 /* FilterTableViewCell.xib in Resources */,
 				0C2F44CF1B8576FE00021F45 /* Panton Regular Italic.otf in Resources */,
 				0C2F44D41B8576FE00021F45 /* Panton.otf in Resources */,
+				79E68BAF1B8B5306008626E4 /* EditProfileAddressTableViewCell.xib in Resources */,
 				26AFB3C21B79DE5600E50926 /* ProductAttributeViewController.xib in Resources */,
 				0C9937691B750583000D6074 /* ScrollableCollectionViewCell.xib in Resources */,
 				26AFB3C01B79DE5600E50926 /* ProductViewsViewController.xib in Resources */,
@@ -1221,10 +1294,12 @@
 				2614E6411B885BFA00EE8B35 /* TransactionDeliveryLogViewController.xib in Resources */,
 				268C1BAD1B864D8B009FA106 /* TransactionDetailsViewController.xib in Resources */,
 				79E85FD21B8A230500428AA1 /* ActivityLogHeaderTableViewCell.xib in Resources */,
+				79E68BA11B8B428B008626E4 /* ProfileSettingsViewController.xib in Resources */,
 				0C374EFD1B8862F50050AE1D /* SuccessTableHeaderViewCell.xib in Resources */,
 				0C374F391B88E3790050AE1D /* ShipToTableViewCell.xib in Resources */,
 				0C2F44C61B8576FE00021F45 /* Panton Bold.otf in Resources */,
 				0C374F2E1B88E3790050AE1D /* PlainTableViewCell.xib in Resources */,
+				79E68BAB1B8B4EB9008626E4 /* EditProfilePersonalInformationTableViewCell.xib in Resources */,
 				79A1C6F11B8329490043AA36 /* SearchSuggestionTableViewCell.xib in Resources */,
 				0C2F44CA1B8576FE00021F45 /* Panton ExtraLight.otf in Resources */,
 				0C374F351B88E3790050AE1D /* SummaryViewController.xib in Resources */,
@@ -1235,8 +1310,11 @@
 				0C374F341B88E3790050AE1D /* NewAddressTableViewCell.xib in Resources */,
 				0C374F331B88E3790050AE1D /* DeliverToTableViewCell.xib in Resources */,
 				0C374F3A1B88E3790050AE1D /* ProductsTableViewCell.xib in Resources */,
+				79AA08351B8F4E6300AF3AA4 /* CartProductAttributeTableViewCell.xib in Resources */,
 				0C9937681B750583000D6074 /* ProductWithCenterNameCollectionViewCell.xib in Resources */,
+				79E68BA51B8B4376008626E4 /* EditProfileTableViewController.xib in Resources */,
 				0C374F321B88E3790050AE1D /* ProfileViewController.xib in Resources */,
+				79E68BA71B8B4572008626E4 /* EditProfileAddPhotoTableViewCell.xib in Resources */,
 				0C2F44DE1B85840F00021F45 /* CheckoutViews.xib in Resources */,
 				79A1C6FB1B83787B0043AA36 /* SellerResultCollectionViewCell.xib in Resources */,
 				0C374F441B88E3790050AE1D /* ResultViewController.xib in Resources */,
@@ -1244,6 +1322,7 @@
 				0C374F451B88E3790050AE1D /* AboutSellerTableViewCell.xib in Resources */,
 				0C374F2A1B88E3790050AE1D /* ChangeAddressCollectionViewCell.xib in Resources */,
 				0C2F44CB1B8576FE00021F45 /* Panton Heavy Italic.otf in Resources */,
+				79E68B9D1B8B4270008626E4 /* ProfileSettingsTableViewCell.xib in Resources */,
 				26DFF6351B8791B5005D8EDE /* TransactionViews.xib in Resources */,
 				0C9937661B750583000D6074 /* NewSellerScrollableCollectionViewCell.xib in Resources */,
 			);
@@ -1308,6 +1387,7 @@
 				0C9937501B750583000D6074 /* ProductitemWithVerticalDisplayCollectionViewCell.swift in Sources */,
 				0C9937711B75063B000D6074 /* AppDelegate.swift in Sources */,
 				0C374F521B89EC4D0050AE1D /* CustomizeSelectedCollectionViewCell.swift in Sources */,
+				79E8F1531B9035D9009CE450 /* SearchResultModel.swift in Sources */,
 				0CC8A63F1B7B9BF600C91425 /* ProfileViewController.swift in Sources */,
 				26D54FE71B86136300522398 /* TransactionTableViewCell.swift in Sources */,
 				0C2F44DC1B8583EF00021F45 /* CheckoutViews.swift in Sources */,
@@ -1316,6 +1396,8 @@
 				79E68B911B8B0AE9008626E4 /* PointModel.swift in Sources */,
 				0C5111E91B821D6F002F0001 /* SeeMoreTableViewCell.swift in Sources */,
 				0C2670CF1B772E4B00394E29 /* Enums.swift in Sources */,
+				26C285481B8FF546005EBD3A /* CityModel.swift in Sources */,
+				79E68BAD1B8B5081008626E4 /* EditProfilePersonalInformationTableViewCell.swift in Sources */,
 				0C329E731B7B2A71005BE2B6 /* Reachability.swift in Sources */,
 				0C329E951B7B7C5B005BE2B6 /* CustomTabBarController.swift in Sources */,
 				7987F3181B7B744A00B02DF4 /* WishlistTableViewCell.swift in Sources */,
@@ -1327,6 +1409,7 @@
 				2689FBFA1B8044CF007BEA68 /* CategoryModel.swift in Sources */,
 				0C329E8C1B7B73B7005BE2B6 /* CategoriesViewController.swift in Sources */,
 				0C5926041B836C670021EA76 /* ProfileModel.swift in Sources */,
+				79E68BA01B8B428B008626E4 /* ProfileSettingsViewController.swift in Sources */,
 				26DFF6301B879126005D8EDE /* TransactionProductDetailsViewController.swift in Sources */,
 				0C2F45251B85E7CA00021F45 /* ChangeAddressViewController.swift in Sources */,
 				26AFB3931B79DD9100E50926 /* XibHelper.swift in Sources */,
@@ -1363,6 +1446,7 @@
 				0CDA117E1B764B79007B5DED /* DynamicRoundedTextField.swift in Sources */,
 				26DFF6461B87BBE3005D8EDE /* TransactionProductDetailsTableViewCell.swift in Sources */,
 				79E85FCB1B8A1E0800428AA1 /* ActivityLogTableViewController.swift in Sources */,
+				79E8F1511B8FC1B8009CE450 /* ProfileUserDetailsModel.swift in Sources */,
 				26AFB3AF1B79DE2900E50926 /* ProductSellerViewCollectionViewCell.swift in Sources */,
 				0C329E931B7B7B2F005BE2B6 /* HiddenViewController.swift in Sources */,
 				79A1C6F91B835BB50043AA36 /* ProductResultGridCollectionViewCell.swift in Sources */,
@@ -1371,12 +1455,15 @@
 				0C99375A1B750583000D6074 /* ViewMoreFooterCollectionViewCell.swift in Sources */,
 				79A1C6ED1B8329200043AA36 /* SearchSuggestionModel.swift in Sources */,
 				0C9937561B750583000D6074 /* SellerCollectionViewCell.swift in Sources */,
+				79E68BB31B8B5862008626E4 /* EditProfileAddressTableViewCell.swift in Sources */,
 				26AFB3B61B79DE3800E50926 /* ProductViewsViewController.swift in Sources */,
 				0C9937471B750583000D6074 /* DynamicRoundedLabel.swift in Sources */,
 				0C5007691B861B1600BC0445 /* ChangeAddressFooterCollectionViewCell.swift in Sources */,
 				0C374F081B88DC440050AE1D /* TotalTableViewCell.swift in Sources */,
 				2632F5211B7F8690006931E4 /* FollowedSellerTableViewCell.swift in Sources */,
+				79E68BA91B8B4780008626E4 /* EditProfileAddPhotoTableViewCell.swift in Sources */,
 				0C99374E1B750583000D6074 /* NewSellerScrollableCollectionViewCell.swift in Sources */,
+				79E68BA41B8B4376008626E4 /* EditProfileTableViewController.swift in Sources */,
 				268C1BB91B865B09009FA106 /* TransactionDeliveryStatusView.swift in Sources */,
 				0C2F44AD1B848B7E00021F45 /* OverViewViewController.swift in Sources */,
 				26DFF6341B8791B5005D8EDE /* TransactionViews.swift in Sources */,
@@ -1394,19 +1481,24 @@
 				0C374F001B889D9A0050AE1D /* PlainTableViewCell.swift in Sources */,
 				26AFB3A91B79DE2900E50926 /* ProductDescriptionView.swift in Sources */,
 				0C99373E1B750583000D6074 /* ParseLocalJSON.swift in Sources */,
+				26C285441B8FADE3005EBD3A /* AddressModelV2.swift in Sources */,
 				26DFF6371B87B0AA005D8EDE /* TransactionProductImagesView.swift in Sources */,
 				0C99374D1B750583000D6074 /* NewSellerCollectionViewCell.swift in Sources */,
 				26AFB39B1B79DDEA00E50926 /* ProductAttributeModel.swift in Sources */,
 				0C99373D1B750583000D6074 /* IPhoneType.swift in Sources */,
 				0C9937511B750583000D6074 /* ProductWithCenterNameCollectionViewCell.swift in Sources */,
 				0C9937401B750583000D6074 /* HomePageProductModel.swift in Sources */,
+				26C285461B8FEE42005EBD3A /* ProvinceModel.swift in Sources */,
 				79E68B891B8AFE99008626E4 /* PointsDetailsTableViewCell.swift in Sources */,
 				26AFB3B71B79DE3800E50926 /* ProductAttributeViewController.swift in Sources */,
 				26AFB3AD1B79DE2900E50926 /* ReviewTableViewCell.swift in Sources */,
 				0C329E751B7B2D32005BE2B6 /* RegisterModel.swift in Sources */,
 				0C99374B1B750583000D6074 /* HomePageCollectionViewLayout.swift in Sources */,
+				79E68B9B1B8B4239008626E4 /* ProfileSettingsTableViewCell.swift in Sources */,
+				79E68BB71B8B5C58008626E4 /* EditProfileAccountInformationTableViewCell.swift in Sources */,
 				0CD103EC1B8B4769002E15F4 /* DynamicRoundedView.swift in Sources */,
 				0C9937451B750583000D6074 /* DiscountLabel.swift in Sources */,
+				79AA08331B8F4DCF00AF3AA4 /* CartProductAttributeTableViewCell.swift in Sources */,
 				0C374F5D1B8A2DBF0050AE1D /* CustomizeShoppingFlowLayout.swift in Sources */,
 				0C329E881B7B73A4005BE2B6 /* TodaysPromoViewController.swift in Sources */,
 				0C5111D81B81CEE7002F0001 /* SellerTableHeaderView.swift in Sources */,
@@ -1434,8 +1526,10 @@
 				7971F73D1B86189100322861 /* FilterAttributeModel.swift in Sources */,
 				0C6490761B7781E400F88F92 /* Category.swift in Sources */,
 				79E68B851B8AF4D0008626E4 /* PointsEarnedTableViewCell.swift in Sources */,
+				26C2854A1B8FF555005EBD3A /* BarangayModel.swift in Sources */,
 				0C99375D1B750583000D6074 /* HomeContainerViewController.swift in Sources */,
 				79E85FCE1B8A1F5800428AA1 /* ActivityLogModel.swift in Sources */,
+				26C285421B8FAA48005EBD3A /* GetAddressesModel.swift in Sources */,
 				0C2F45291B85E95D00021F45 /* ChangeAddressCollectionViewCell.swift in Sources */,
 				79E68B931B8B0B8D008626E4 /* PointsTableViewCell.swift in Sources */,
 				79E68B8D1B8B0431008626E4 /* PointsBreakdownTableViewCell.swift in Sources */,
@@ -1573,6 +1667,10 @@
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
 				INFOPLIST_FILE = YiLinkerOnlineBuyer/Info.plist;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
+				LIBRARY_SEARCH_PATHS = (
+					"$(inherited)",
+					"$(PROJECT_DIR)/build/Debug-iphoneos",
+				);
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				PROVISIONING_PROFILE = "";
 				SWIFT_OBJC_BRIDGING_HEADER = "YiLinkerOnlineBuyer/Resources/Helper/YiLinkerOnlineBuyer-Bridging-Header.h";
@@ -1590,6 +1688,10 @@
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
 				INFOPLIST_FILE = YiLinkerOnlineBuyer/Info.plist;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
+				LIBRARY_SEARCH_PATHS = (
+					"$(inherited)",
+					"$(PROJECT_DIR)/build/Debug-iphoneos",
+				);
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				PROVISIONING_PROFILE = "";
 				SWIFT_OBJC_BRIDGING_HEADER = "YiLinkerOnlineBuyer/Resources/Helper/YiLinkerOnlineBuyer-Bridging-Header.h";
diff --git a/YiLinkerOnlineBuyer/resources/Helper/APIManager.swift b/YiLinkerOnlineBuyer/resources/Helper/APIManager.swift
index 0764fdb..30b2437 100644
--- a/YiLinkerOnlineBuyer/resources/Helper/APIManager.swift
+++ b/YiLinkerOnlineBuyer/resources/Helper/APIManager.swift
@@ -33,10 +33,14 @@ struct APIAtlas {
     static let cartUrl = "auth/cart/getCart"
     static let wishlistUrl = "auth/cart/getCart"
     static let updateWishlistUrl = "auth/cart/updateCartItem"
+    static let updateCartUrl = "auth/cart/updateCartItem"
     static let getSellerUrl = "v1/get-seller"
     static let productReviewUrl = "v1/product-review"
     static let productPageUrl = "v1/get-product"
     static let getSellerInfo = "user/getStoreInfo"
+    static let searchUrl = "product/getSearchKeywords"
+    static let profileUrl = "auth/user/getUser"
+    static let editProfileUrl = "auth/user/editProfile"
     static let baseUrl = APIEnvironment.baseUrl()
 }
 
diff --git a/YiLinkerOnlineBuyer/resources/Model/AddressModelV2.swift b/YiLinkerOnlineBuyer/resources/Model/AddressModelV2.swift
new file mode 100644
index 0000000..0d5be65
--- /dev/null
+++ b/YiLinkerOnlineBuyer/resources/Model/AddressModelV2.swift
@@ -0,0 +1,180 @@
+//
+//  AddressModelV2.swift
+//  YiLinkerOnlineBuyer
+//
+//  Created by Rj Constantino on 8/28/15.
+//  Copyright (c) 2015 yiLinker-online-buyer. All rights reserved.
+//
+
+import Foundation
+
+class AddressModelV2 {
+    
+    var userAddressId: Int = 0
+    var locationId: Int = 0
+    var title: String = ""
+    var unitNumber: String = ""
+    var buildingName: String = ""
+    var streetNumber: Int = 0
+    var streetName: String = ""
+    var subdivision: String = ""
+    var zipCode: String = ""
+    var streetAddress: String = ""
+    var country: String = ""
+    var island: String = ""
+    var region: String = ""
+    var province: String = ""
+    var city: String = ""
+    var municipality: String = ""
+    var barangay: String = ""
+    var longitude: String = ""
+    var landline: String = ""
+    var latitude: String = ""
+    var isDefault: Bool = false
+    
+    class func parseAddressFromDictionary(reviews: NSDictionary) -> AddressModelV2 {
+        
+        var model = AddressModelV2()
+        
+        if reviews.isKindOfClass(NSDictionary) {
+            
+            if let value: AnyObject = reviews["userAddressId"] {
+                if value as! NSObject != NSNull() {
+                    model.userAddressId = value as! Int
+                }
+            }
+            
+            if let value: AnyObject = reviews["locationId"] {
+                if value as! NSObject != NSNull() {
+                    model.locationId = value as! Int
+                }
+            }
+            
+            if let value: AnyObject = reviews["title"] {
+                if value as! NSObject != NSNull() {
+                    model.title = value as! String
+                }
+            }
+            
+            if let value: AnyObject = reviews["unitNumber"] {
+                if value as! NSObject != NSNull() {
+                    model.unitNumber = value as! String
+                }
+            }
+            
+            if let value: AnyObject = reviews["buildingName"] {
+                if value as! NSObject != NSNull() {
+                    model.buildingName = value as! String
+                }
+            }
+            
+            if let value: AnyObject = reviews["streetNumber"] {
+                if value as! NSObject != NSNull() {
+                    model.streetNumber = value as! Int
+                }
+            }
+            
+            if let value: AnyObject = reviews["streetName"] {
+                if value as! NSObject != NSNull() {
+                    model.streetName = value as! String
+                }
+            }
+            
+            if let value: AnyObject = reviews["subdivision"] {
+                if value as! NSObject != NSNull() {
+                    model.subdivision = value as! String
+                }
+            }
+            
+            if let value: AnyObject = reviews["zipCode"] {
+                if value as! NSObject != NSNull() {
+                    model.zipCode = value as! String
+                }
+            }
+            
+            if let value: AnyObject = reviews["streetAddress"] {
+                if value as! NSObject != NSNull() {
+                    model.streetAddress = value as! String
+                }
+            }
+            
+            if let value: AnyObject = reviews["country"] {
+                if value as! NSObject != NSNull() {
+                    model.country = value as! String
+                }
+                
+            }
+            
+            if let value: AnyObject = reviews["island"] {
+                if value as! NSObject != NSNull() {
+                    model.island = value as! String
+                }
+                
+            }
+            
+            if let value: AnyObject = reviews["region"] {
+                if value as! NSObject != NSNull() {
+                    model.region = value as! String
+                }
+                
+            }
+            
+            if let value: AnyObject = reviews["province"] {
+                if value as! NSObject != NSNull() {
+                    model.province = value as! String
+                }
+                
+            }
+            
+            if let value: AnyObject = reviews["city"] {
+                if value as! NSObject != NSNull() {
+                    model.city = value as! String
+                }
+                
+            }
+            
+            if let value: AnyObject = reviews["municipality"] {
+                if value as! NSObject != NSNull() {
+                    model.municipality = value as! String
+                }
+                
+            }
+            
+            if let value: AnyObject = reviews["barangay"] {
+                if value as! NSObject != NSNull() {
+                    model.barangay = value as! String
+                }
+                
+            }
+            
+            if let value: AnyObject = reviews["longitude"] {
+                if value as! NSObject != NSNull() {
+                    model.longitude = value as! String
+                }
+                
+            }
+            
+            if let value: AnyObject = reviews["latitude"] {
+                if value as! NSObject != NSNull() {
+                    model.latitude = value as! String
+                }
+            }
+            
+            if let value: AnyObject = reviews["landline"] {
+                if value as! NSObject != NSNull() {
+                    model.landline = value as! String
+                }
+                
+            }
+            
+            if let value: AnyObject = reviews["isDefault"] {
+                if value as! NSObject != NSNull() {
+                    model.isDefault = value as! Bool
+                }
+            }
+        }
+        
+        return model
+    }
+    
+}
\ No newline at end of file
diff --git a/YiLinkerOnlineBuyer/resources/Model/BarangayModel.swift b/YiLinkerOnlineBuyer/resources/Model/BarangayModel.swift
new file mode 100644
index 0000000..f6def28
--- /dev/null
+++ b/YiLinkerOnlineBuyer/resources/Model/BarangayModel.swift
@@ -0,0 +1,54 @@
+//
+//  BarangayModel.swift
+//  YiLinkerOnlineBuyer
+//
+//  Created by Rj Constantino on 8/28/15.
+//  Copyright (c) 2015 yiLinker-online-buyer. All rights reserved.
+//
+
+import Foundation
+
+class BarangayModel {
+    
+    var message: String = ""
+    var isSuccessful: Bool = false
+    
+    var barangayId: [Int] = []
+    var location: [String] = []
+    
+    init(message: String, isSuccessful: Bool, barangayId: NSArray, location: NSArray) {
+        self.message = message
+        self.isSuccessful = isSuccessful
+        self.barangayId = barangayId as! [Int]
+        self.location = location as! [String]
+    }
+    
+    class func parseDataWithDictionary(dictionary: AnyObject) -> BarangayModel! {
+        
+        var message: String = ""
+        var isSuccessful: Bool = false
+        
+        var barangayId: [Int] = []
+        var location: [String] = []
+        
+        if dictionary.isKindOfClass(NSDictionary) {
+            
+            if let tempVar = dictionary["message"] as? String {
+                message = tempVar
+            }
+            
+            if let tempVar = dictionary["isSuccessful"] as? Bool {
+                isSuccessful = tempVar
+            }
+            
+            if let value: AnyObject = dictionary["data"] {
+                for subValue in value as! NSArray {
+//                    barangayId.append(subValue["barangay"] as! Int)
+//                    location.append(subValue["location"] as! String)
+                }
+            }
+        } // dictionary
+        
+        return BarangayModel(message: message, isSuccessful: isSuccessful, barangayId: barangayId, location: location)
+    } // parse
+}
\ No newline at end of file
diff --git a/YiLinkerOnlineBuyer/resources/Model/CartProductDetailsModel.swift b/YiLinkerOnlineBuyer/resources/Model/CartProductDetailsModel.swift
index f7bf666..c6a186b 100644
--- a/YiLinkerOnlineBuyer/resources/Model/CartProductDetailsModel.swift
+++ b/YiLinkerOnlineBuyer/resources/Model/CartProductDetailsModel.swift
@@ -1,65 +1,83 @@
 //
-//  CartProductDetailsModel.swift
+//  ProductDetailsModel.swift
 //  YiLinkerOnlineBuyer
 //
-//  Created by John Paul Chan on 8/12/15.
+//  Created by Rj Constantino on 8/7/15.
 //  Copyright (c) 2015 yiLinker-online-buyer. All rights reserved.
 //
 
-import UIKit
+import Foundation
 
-class CartProductDetailsModel: NSObject {
+class CartProductDetailsModel {
     
-    var id: Int = 0
+    var selected: Bool = false
+    
+    var id: String = ""
     var title: String = ""
-    var image: NSURL = NSURL(string: "")!
+    var slug: String = ""
+    var image: String = ""
+    var images: [String] = []
     var shortDescription: String = ""
     var fullDescription: String = ""
     var sellerId: Int = 0
-    var originalPrice: Float = 0
-    var newPrice: Float = 0
-    var discount: Float = 0
-    var details: [String] = []
     
-    var attributes: [ProductAttributeModel] = []
-    var combinations: [ProductAvailableAttributeCombinationModel] = []
+    var attributes: [ProductAttributeModel] = [] //done
+    var productUnits: [ProductUnitsModel] = []
     
-    init(id: Int, title: String, image: NSURL, originalPrice: Float, newPrice: Float, discount: Float, shortDescription: String, fullDescription: String, sellerId: Int, details: NSArray, attributes: NSArray, combinations: NSArray) {
-        
+    var unitId: String = ""
+    var itemId: Int = 0
+    var quantity: Int = 0
+    
+    //DETAILS ???
+    //BADGES  ???
+    
+    init(selected: Bool, id: String, title: String, slug: String, image: String, images: NSArray, shortDescription: String, fullDescription: String, sellerId: Int, attributes: NSArray, productUnits: NSArray, unitId: String, itemId: Int, quantity: Int) {
+        self.selected = selected
         self.id = id
         self.title = title
+        self.slug = slug
         self.image = image
-        self.originalPrice = originalPrice
-        self.newPrice = newPrice
-        self.discount = discount
+        self.images = images as! [String]
         self.shortDescription = shortDescription
         self.fullDescription = fullDescription
         self.sellerId = sellerId
+        
         self.attributes = attributes as! [ProductAttributeModel]
-        self.combinations = combinations as! [ProductAvailableAttributeCombinationModel]
+        self.productUnits = productUnits as! [ProductUnitsModel]
+        
+        self.unitId = unitId
+        self.itemId = itemId
+        self.quantity = quantity
     }
     
     class func parseDataWithDictionary(dictionary: AnyObject) -> CartProductDetailsModel {
         
-        var message: String = ""
-        var isSuccessful: String = ""
-        
-        var id: Int = 0
+        var selected: Bool = false
+        var id: String = ""
         var title: String = ""
-        var image: NSURL = NSURL(string: "")!
+        var slug: String = ""
+        var image: String = ""
+        var images: [String] = []
         var shortDescription: String = ""
         var fullDescription: String = ""
         var sellerId: Int = 0
-        var originalPrice: Float = 0
-        var newPrice: Float = 0
-        var discount: Float = 0
-        var details: [String] = []
         
-        var attributes: [ProductAttributeModel] = []
+        var attributes: [ProductAttributeModel] = [] //done
+        var productUnits: [ProductUnitsModel] = []
+        
+        var unitId: String = ""
+        var itemId: Int = 0
+        var quantity: Int = 0
+        
+        //DETAILS ???
+        //BADGES  ???
+        
+        // ----
         var combinations: [ProductAvailableAttributeCombinationModel] = []
         
         if dictionary.isKindOfClass(NSDictionary) {
-            if let tempVar = dictionary["id"] as? Int {
+            
+            if let tempVar = dictionary["id"] as? String {
                 id = tempVar
             }
             
@@ -67,8 +85,19 @@ class CartProductDetailsModel: NSObject {
                 title = tempVar
             }
             
+            if let tempVar = dictionary["slug"] as? String {
+                slug = tempVar
+            }
+            
+            
             if let tempVar = dictionary["image"] as? String {
-                image = NSURL(string: tempVar)!
+                image = tempVar
+            }
+            
+            for tempVar in dictionary["images"] as! NSArray {
+                if let temp = tempVar["imageLocation"] as? String {
+                    images.append(temp)
+                }
             }
             
             if let tempVar = dictionary["shortDescription"] as? String {
@@ -83,45 +112,48 @@ class CartProductDetailsModel: NSObject {
                 sellerId = tempVar
             }
             
-            if let tempVar = dictionary["originalPrice"] as? Float {
-                originalPrice = tempVar
+            for subValue in dictionary["attributes"] as! NSArray {
+                let model: ProductAttributeModel = ProductAttributeModel.parseAttribute(subValue as! NSDictionary)
+                attributes.append(model)
             }
             
-            if let tempVar = dictionary["newPrice"] as? Float {
-                newPrice = tempVar
+            for subValue in dictionary["productUnits"] as! NSArray {
+                let model: ProductUnitsModel = ProductUnitsModel.parseProductUnits(subValue as! NSDictionary)
+                productUnits.append(model)
             }
             
-            if let tempVar = dictionary["discount"] as? Float {
-                discount = tempVar
+            if let tempVar = dictionary["unitId"] as? String {
+                unitId = tempVar
             }
             
-            for subValue in dictionary["attributes"] as! NSArray {
-                let model: ProductAttributeModel = ProductAttributeModel.parseAttribute(subValue as! NSDictionary)
-                attributes.append(model)
+            if let tempVar = dictionary["itemId"] as? Int {
+                itemId = tempVar
             }
             
-            for subValue in dictionary["availableAttributeCombi"] as! NSArray {
-                let model: ProductAvailableAttributeCombinationModel = ProductAvailableAttributeCombinationModel.parseCombination(subValue as! NSDictionary)
-                
-                combinations.append(model)
-                
-                
+            if let tempVar = dictionary["quantity"] as? Int {
+                quantity = tempVar
             }
-        } // end if dictionary
+            
+            // data
+        } // dictionary
         
-        return  CartProductDetailsModel(id: id,
-            title: title, image: image,
-            originalPrice: originalPrice,
-            newPrice: newPrice,
-            discount: discount,
+        return CartProductDetailsModel(
+            selected: selected,
+            id: id,
+            title: title,
+            slug: slug,
+            image: image,
+            images: images,
             shortDescription: shortDescription,
             fullDescription: fullDescription,
             sellerId: sellerId,
-            details: details,
             attributes: attributes,
-            combinations: combinations)
+            productUnits: productUnits,
+            unitId: unitId,
+            itemId: itemId,
+            quantity: quantity)
         
         
-    }// parseDataWithDictionary
+    } // parseDataWithDictionary
     
-}
+}
\ No newline at end of file
diff --git a/YiLinkerOnlineBuyer/resources/Model/CityModel.swift b/YiLinkerOnlineBuyer/resources/Model/CityModel.swift
new file mode 100644
index 0000000..60de76d
--- /dev/null
+++ b/YiLinkerOnlineBuyer/resources/Model/CityModel.swift
@@ -0,0 +1,54 @@
+//
+//  CityModel.swift
+//  YiLinkerOnlineBuyer
+//
+//  Created by Rj Constantino on 8/28/15.
+//  Copyright (c) 2015 yiLinker-online-buyer. All rights reserved.
+//
+
+import Foundation
+
+class CityModel {
+    
+    var message: String = ""
+    var isSuccessful: Bool = false
+    
+    var cityId: [Int] = []
+    var location: [String] = []
+    
+    init(message: String, isSuccessful: Bool, cityId: NSArray, location: NSArray) {
+        self.message = message
+        self.isSuccessful = isSuccessful
+        self.cityId = cityId as! [Int]
+        self.location = location as! [String]
+    }
+    
+    class func parseDataWithDictionary(dictionary: AnyObject) -> CityModel {
+        
+        var message: String = ""
+        var isSuccessful: Bool = false
+        
+        var cityId: [Int] = []
+        var location: [String] = []
+        
+        if dictionary.isKindOfClass(NSDictionary) {
+            
+            if let tempVar = dictionary["message"] as? String {
+                message = tempVar
+            }
+            
+            if let tempVar = dictionary["isSuccessful"] as? Bool {
+                isSuccessful = tempVar
+            }
+            
+            if let value: AnyObject = dictionary["data"] {
+                for subValue in value as! NSArray {
+                    cityId.append(subValue["cityId"] as! Int)
+                    location.append(subValue["location"] as! String)
+                }
+            }
+        } // dictionary
+        
+        return CityModel(message: message, isSuccessful: isSuccessful, cityId: cityId, location: location)
+    } // parse
+}
\ No newline at end of file
diff --git a/YiLinkerOnlineBuyer/resources/Model/GetAddressesModel.swift b/YiLinkerOnlineBuyer/resources/Model/GetAddressesModel.swift
new file mode 100644
index 0000000..d0ada2b
--- /dev/null
+++ b/YiLinkerOnlineBuyer/resources/Model/GetAddressesModel.swift
@@ -0,0 +1,48 @@
+//
+//  GetAddressesModel.swift
+//  YiLinkerOnlineBuyer
+//
+//  Created by Rj Constantino on 8/28/15.
+//  Copyright (c) 2015 yiLinker-online-buyer. All rights reserved.
+//
+
+import Foundation
+
+class GetAddressesModel: NSObject {
+    
+    var message: String = ""
+    var isSuccessful: Bool = false
+    var listOfAddress: [AddressModelV2] = []
+    
+    init(message: String, isSuccessful: Bool, listOfAddress: [AddressModelV2]) {
+        self.message = message
+        self.isSuccessful = isSuccessful
+        self.listOfAddress = listOfAddress
+    }
+    
+    class func parseDataWithDictionary(dictionary: AnyObject) -> GetAddressesModel {
+        var message: String = ""
+        var isSuccessful: Bool = false
+        var listOfAddress: [AddressModelV2] = []
+        
+        if dictionary.isKindOfClass(NSDictionary) {
+            if let tempVar = dictionary["message"] as? String {
+                message = tempVar
+            }
+            
+            if let tempVar = dictionary["isSuccessful"] as? Bool {
+                isSuccessful = tempVar
+            }
+            
+            if let value: AnyObject = dictionary["data"] {
+                
+                for subValue in value as! NSArray {
+                    let model: AddressModelV2 = AddressModelV2.parseAddressFromDictionary(subValue as! NSDictionary)
+                    listOfAddress.append(model)
+                }
+            }
+        }
+        
+        return GetAddressesModel(message: message, isSuccessful: isSuccessful, listOfAddress: listOfAddress)
+    }
+}
\ No newline at end of file
diff --git a/YiLinkerOnlineBuyer/resources/Model/ProfileUserDetailsModel.swift b/YiLinkerOnlineBuyer/resources/Model/ProfileUserDetailsModel.swift
new file mode 100644
index 0000000..73ce805
--- /dev/null
+++ b/YiLinkerOnlineBuyer/resources/Model/ProfileUserDetailsModel.swift
@@ -0,0 +1,125 @@
+//
+//  ProfileUserDetails.swift
+//  YiLinkerOnlineBuyer
+//
+//  Created by John Paul Chan on 8/28/15.
+//  Copyright (c) 2015 yiLinker-online-buyer. All rights reserved.
+//
+
+import UIKit
+
+class ProfileUserDetailsModel: NSObject {
+   
+    var fullName: String = ""
+    var firstName: String = ""
+    var lastName: String = ""
+    var email: String = ""
+    var contactNumber: String = ""
+    var profileImageUrl: String = ""
+    var coverPhoto: String = ""
+    var gender: String = ""
+    var birthdate: String = ""
+    
+    var address: AddressModelV2?
+    
+    init(fullName: String, firstName: String, lastName: String, email: String, contactNumber: String, profileImageUrl: String, coverPhoto: String, gender: String, birthdate: String, address: AddressModelV2){
+        self.fullName = fullName
+        self.firstName = firstName
+        self.lastName = lastName
+        self.email = email
+        self.contactNumber = contactNumber
+        self.profileImageUrl = profileImageUrl
+        self.coverPhoto = coverPhoto
+        self.gender = gender
+        self.birthdate = birthdate
+        self.address = address
+    }
+    
+    class func parseDataWithDictionary(dictionary: AnyObject) -> ProfileUserDetailsModel {
+        var fullName: String = ""
+        var firstName: String = ""
+        var lastName: String = ""
+        var email: String = ""
+        var contactNumber: String = ""
+        var profileImageUrl: String = ""
+        var coverPhoto: String = ""
+        var gender: String = ""
+        var birthdate: String = ""
+        
+        var address: AddressModelV2?
+    
+        if let value: AnyObject = dictionary["fullName"] {
+            if value as! NSObject != NSNull() {
+                fullName = value as! String
+            }
+        }
+        
+        if let value: AnyObject = dictionary["firstName"] {
+            if value as! NSObject != NSNull() {
+                firstName = value as! String
+            }
+        }
+        
+        if let value: AnyObject = dictionary["lastName"] {
+            if value as! NSObject != NSNull() {
+                lastName = value as! String
+            }
+        }
+        
+        if let value: AnyObject = dictionary["email"] {
+            if value as! NSObject != NSNull() {
+                email = value as! String
+            }
+        }
+        
+        if let value: AnyObject = dictionary["contactNumber"] {
+            if value as! NSObject != NSNull() {
+                contactNumber = value as! String
+            }
+        }
+        
+        if let value: AnyObject = dictionary["profileImageUrl"] {
+            if value as! NSObject != NSNull() {
+                profileImageUrl = value as! String
+            }
+        }
+        
+        if let value: AnyObject = dictionary["coverPhoto"] {
+            if value as! NSObject != NSNull() {
+                coverPhoto = value as! String
+            }
+        }
+        
+        if let value: AnyObject = dictionary["gender"] {
+            if value as! NSObject != NSNull() {
+                gender = value as! String
+            }
+        }
+        
+        if let value: AnyObject = dictionary["birthdate"] {
+            if value as! NSObject != NSNull() {
+                birthdate = value as! String
+            }
+        }
+        
+        
+        if let value: AnyObject = dictionary["address"] {
+            if value as! NSObject != NSNull() {
+                address = AddressModelV2.parseAddressFromDictionary(value as! NSDictionary)
+            }
+        }
+        
+        return ProfileUserDetailsModel(fullName: fullName,
+            firstName: firstName,
+            lastName: lastName,
+            email: email,
+            contactNumber: contactNumber,
+            profileImageUrl: profileImageUrl,
+            coverPhoto: coverPhoto,
+            gender: gender,
+            birthdate: birthdate,
+            address: address!)
+    }
+    
+
+}
diff --git a/YiLinkerOnlineBuyer/resources/Model/ProvinceModel.swift b/YiLinkerOnlineBuyer/resources/Model/ProvinceModel.swift
new file mode 100644
index 0000000..4b9c5be
--- /dev/null
+++ b/YiLinkerOnlineBuyer/resources/Model/ProvinceModel.swift
@@ -0,0 +1,54 @@
+//
+//  ProvinceModel.swift
+//  YiLinkerOnlineBuyer
+//
+//  Created by Rj Constantino on 8/28/15.
+//  Copyright (c) 2015 yiLinker-online-buyer. All rights reserved.
+//
+
+import Foundation
+
+class ProvinceModel {
+    
+    var message: String = ""
+    var isSuccessful: Bool = false
+    
+    var provinceId: [Int] = []
+    var location: [String] = []
+    
+    init(message: String, isSuccessful: Bool, provinceId: NSArray, location: NSArray) {
+        self.message = message
+        self.isSuccessful = isSuccessful
+        self.provinceId = provinceId as! [Int]
+        self.location = location as! [String]
+    }
+    
+    class func parseDataWithDictionary(dictionary: AnyObject) -> ProvinceModel! {
+        
+        var message: String = ""
+        var isSuccessful: Bool = false
+        
+        var provinceId: [Int] = []
+        var location: [String] = []
+        
+        if dictionary.isKindOfClass(NSDictionary) {
+            
+            if let tempVar = dictionary["message"] as? String {
+                message = tempVar
+            }
+            
+            if let tempVar = dictionary["isSuccessful"] as? Bool {
+                isSuccessful = tempVar
+            }
+            
+            if let value: AnyObject = dictionary["data"] {
+                for subValue in value as! NSArray {
+                    provinceId.append(subValue["provinceId"] as! Int)
+                    location.append(subValue["location"] as! String)
+                }
+            }
+        } // dictionary
+        
+        return ProvinceModel(message: message, isSuccessful: isSuccessful, provinceId: provinceId, location: location)
+    } // parse
+}
\ No newline at end of file
diff --git a/YiLinkerOnlineBuyer/resources/Model/SearchResultModel.swift b/YiLinkerOnlineBuyer/resources/Model/SearchResultModel.swift
new file mode 100644
index 0000000..3a0e67e
--- /dev/null
+++ b/YiLinkerOnlineBuyer/resources/Model/SearchResultModel.swift
@@ -0,0 +1,85 @@
+//
+//  SearchResultModel.swift
+//  YiLinkerOnlineBuyer
+//
+//  Created by John Paul Chan on 8/28/15.
+//  Copyright (c) 2015 yiLinker-online-buyer. All rights reserved.
+//
+
+import UIKit
+
+class SearchResultModel: NSObject {
+   
+    var id: String = ""
+    var productName: String = ""
+    var originalPrice: String = ""
+    var newPrice: String = ""
+    var imageUrl: String = ""
+    var discount: Int = 0
+    var slug: String = ""
+    
+    init(id: String, productName: String, originalPrice: String, newPrice: String, imageUrl: String,discount: Int, slug: String){
+        self.id = id
+        self.productName = productName
+        self.originalPrice = originalPrice
+        self.newPrice = newPrice
+        self.imageUrl = imageUrl
+        self.discount = discount
+        self.slug = slug
+    }
+    
+    class func parseDataWithDictionary(dictionary: AnyObject) -> SearchResultModel {
+        var id: String = ""
+        var productName: String = ""
+        var originalPrice: String = ""
+        var newPrice: String = ""
+        var imageUrl: String = ""
+        var discount: Int = 0
+        var slug: String = ""
+        
+        if let value: AnyObject = dictionary["id"] {
+            if value as! NSObject != NSNull() {
+                id = value as! String
+            }
+        }
+        
+        if let value: AnyObject = dictionary["productName"] {
+            if value as! NSObject != NSNull() {
+                productName = value as! String
+            }
+        }
+        
+        if let value: AnyObject = dictionary["originalPrice"] {
+            if value as! NSObject != NSNull() {
+                originalPrice = value as! String
+            }
+        }
+        
+        if let value: AnyObject = dictionary["newPrice"] {
+            if value as! NSObject != NSNull() {
+                newPrice = value as! String
+            }
+        }
+        
+        if let value: AnyObject = dictionary["imageUrl"] {
+            if value as! NSObject != NSNull() {
+                imageUrl = value as! String
+            }
+        }
+        
+        if let value: AnyObject = dictionary["discount"] {
+            if value as! NSObject != NSNull() {
+                discount = value as! Int
+            }
+        }
+        
+        if let value: AnyObject = dictionary["slug"] {
+            if value as! NSObject != NSNull() {
+                slug = value as! String
+            }
+        }
+        
+        return SearchResultModel(id: id, productName: productName, originalPrice: originalPrice, newPrice: newPrice, imageUrl: imageUrl, discount: discount, slug: slug)
+    }
+
+}
diff --git a/YiLinkerOnlineBuyer/resources/Model/SearchSuggestionModel.swift b/YiLinkerOnlineBuyer/resources/Model/SearchSuggestionModel.swift
index 2c2f3a7..512d114 100644
--- a/YiLinkerOnlineBuyer/resources/Model/SearchSuggestionModel.swift
+++ b/YiLinkerOnlineBuyer/resources/Model/SearchSuggestionModel.swift
@@ -12,9 +12,28 @@ class SearchSuggestionModel: NSObject {
    
     var suggestion: String = ""
     var imageURL: String = ""
+    var searchUrl: String = ""
     
-    init(suggestion: String, imageURL: String) {
+    init(suggestion: String, imageURL: String, searchUrl: String) {
         self.suggestion = suggestion
         self.imageURL = imageURL
+        self.searchUrl = searchUrl
+    }
+    
+    class func parseDataFromDictionary(dictionary: NSDictionary) -> SearchSuggestionModel {
+        var suggestion: String = ""
+        var imageURL: String = "SearchBrowseCategory"
+        var searchUrl: String = ""
+        
+        
+        if let tempVar = dictionary["keyword"] as? String {
+            suggestion = tempVar
+        }
+        
+        if let tempVar = dictionary["searchUrl"] as? String {
+            searchUrl = tempVar
+        }
+        
+        return SearchSuggestionModel(suggestion: suggestion, imageURL: imageURL, searchUrl: searchUrl)
     }
 }
diff --git a/YiLinkerOnlineBuyer/resources/Model/WishlistProductDetailsModel.swift b/YiLinkerOnlineBuyer/resources/Model/WishlistProductDetailsModel.swift
index 45aeeff..0ab7475 100644
--- a/YiLinkerOnlineBuyer/resources/Model/WishlistProductDetailsModel.swift
+++ b/YiLinkerOnlineBuyer/resources/Model/WishlistProductDetailsModel.swift
@@ -91,8 +91,10 @@ class WishlistProductDetailsModel {
                 image = tempVar
             }
             
-            if let tempVar = dictionary["images"] as? NSArray {
-                images = tempVar as! [String]
+            for tempVar in dictionary["images"] as! NSArray {
+                if let temp = tempVar["imageLocation"] as? String {
+                    images.append(temp)
+                }
             }
             
             if let tempVar = dictionary["shortDescription"] as? String {
diff --git a/YiLinkerOnlineBuyer/resources/View/CartProductAttributeTableViewCell.swift b/YiLinkerOnlineBuyer/resources/View/CartProductAttributeTableViewCell.swift
new file mode 100644
index 0000000..5e09fdc
--- /dev/null
+++ b/YiLinkerOnlineBuyer/resources/View/CartProductAttributeTableViewCell.swift
@@ -0,0 +1,123 @@
+//
+//  ProductAttributeTableViewCell.swift
+//  YiLinkerOnlineBuyer
+//
+//  Created by Rj Constantino on 8/5/15.
+//  Copyright (c) 2015 yiLinker-online-buyer. All rights reserved.
+//
+
+import UIKit
+
+protocol CartProductAttributeTableViewCellDelegate {
+    func selectedAttribute(attributeId: String)
+    func deselectedAttribute(attributeId: String)
+}
+
+class CartProductAttributeTableViewCell: UITableViewCell {
+    
+    var delegate: CartProductAttributeTableViewCellDelegate?
+    
+    @IBOutlet weak var attributeLabel: UILabel!
+    @IBOutlet weak var scrollView: UIScrollView!
+    
+    var filter: FilterAttributeModel!
+    var productAttribute: ProductAttributeModel!
+    var productUnit: ProductUnitsModel!
+    
+    var attributeIDs: [String] = []
+    var unitIDs: [String] = []
+    
+    var availableCombinations = [String: [String]]()
+    
+    override func awakeFromNib() {
+        super.awakeFromNib()
+    }
+    
+    
+    func passModel(model: ProductAttributeModel, selectedProductUnit: ProductUnitsModel, availableCombination: [String: [String]], unitID: [String]){
+        productAttribute = model
+        filter = FilterAttributeModel(title: model.attributeName, attributes: model.valueName)
+        productUnit = selectedProductUnit
+        
+        attributeIDs = productAttribute.valueId
+        
+        unitIDs = unitID
+        initializeScrollView()
+    }
+    
+    func initializeScrollView() {
+        attributeLabel.text = filter.title
+        
+        var x: Int = 0
+        var contentWidth = 0
+        println(filter.attributes.count)
+        for var i = 0; i < filter.attributes.count; i++ {
+            var width = (count(filter.attributes[i]) * 10) + 20
+            
+            var button = UIButton(frame: CGRectMake(CGFloat(x), CGFloat(10), CGFloat(width), scrollView.frame.height/1.5))
+            button.setTitle(filter.attributes[i] as String, forState: .Normal)
+            button.titleLabel?.font = UIFont.boldSystemFontOfSize(15.0)
+            button.setTitleColor(UIColor.darkGrayColor(), forState: .Normal)
+            button.layer.borderWidth = 1.2
+            button.layer.borderColor = UIColor.darkGrayColor().CGColor
+            button.layer.cornerRadius = button.frame.height/2
+            button.backgroundColor = UIColor.whiteColor()
+            button.tag = attributeIDs[i].toInt()!
+            button.addTarget(self, action: "clickedAttribute:", forControlEvents: .TouchUpInside)
+            
+            x += width + 10
+            
+            if contains(productUnit.combination, attributeIDs[i]){
+                SelectButton(button)
+            }
+            
+            scrollView.addSubview(button)
+        }
+        
+        scrollView.contentSize = CGSize(width: CGFloat(x), height: scrollView.frame.size.height)
+    }
+    
+    
+    func clickedAttribute(sender: UIButton!) {
+        
+        if sender.selected {
+            DeselectButton(sender)
+        } else {
+            for view in scrollView.subviews as! [UIView]{
+                if let button = view as? UIButton {
+                    DeselectButton(button)
+                }
+            }
+            SelectButton(sender)
+            
+            delegate?.selectedAttribute("\(sender.tag)")
+        }
+    }
+    
+    func DeselectButton(button: UIButton) {
+        button.selected = false
+        button.layer.borderColor = UIColor.darkGrayColor().CGColor
+        button.backgroundColor = UIColor.whiteColor()
+        button.setTitleColor(UIColor.darkGrayColor(), forState: .Normal)
+        
+        delegate?.deselectedAttribute("\(button.tag)")
+    }
+    
+    func SelectButton(button: UIButton) {
+        button.selected = true
+        button.layer.borderColor = UIColor.purpleColor().CGColor
+        button.backgroundColor = UIColor.purpleColor()
+        button.setTitleColor(UIColor.whiteColor(), forState: .Normal)
+    }
+
+    func enableButton(button: UIButton) {
+        button.alpha = 1.0
+        button.enabled = true
+    }
+    
+    func disableButton(button: UIButton) {
+        button.alpha = 0.3
+        button.enabled = false
+    }
+    
+}
diff --git a/YiLinkerOnlineBuyer/resources/View/Category.swift b/YiLinkerOnlineBuyer/resources/View/Category.swift
index 8588cd5..54bd102 100644
--- a/YiLinkerOnlineBuyer/resources/View/Category.swift
+++ b/YiLinkerOnlineBuyer/resources/View/Category.swift
@@ -134,3 +134,54 @@ extension CAGradientLayer {
         return gradientLayer
     }
 }
+
+extension String {
+   
+    func isValidEmail() -> Bool {
+        // println("validate calendar: \(testStr)")
+        let emailRegEx = "^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$"
+        
+        let emailTest = NSPredicate(format:"SELF MATCHES %@", emailRegEx)
+        return emailTest.evaluateWithObject(self)
+    }
+    
+    func isAlphaNumeric() -> Bool {
+        let passwordRegEx = "[A-Za-z0-9_]*"
+        let passwordTest = NSPredicate(format: "SELF MATCHES %@", passwordRegEx)
+        
+        return passwordTest.evaluateWithObject(self)
+    }
+    
+    func isValidName() -> Bool {
+        let nameRegex = "^[a-zA-Z ]*$"
+        let nameTest = NSPredicate(format: "SELF MATCHES %@", nameRegex)
+        
+        return nameTest.evaluateWithObject(self)
+    }
+    
+    func isGreaterThanEightCharacters() -> Bool {
+        var result: Bool = false
+        if count(self) >= 8 {
+            result = true
+        }
+        
+        return result
+    }
+    
+    func isNotEmpty() -> Bool {
+        var result: Bool = false
+        if count(self) != 0 {
+            result = true
+        }
+        return result
+    }
+    
+    func isGreaterThanOrEqualEightCharacters() -> Bool {
+        var result: Bool = true
+        if count(self) < 11 {
+            result = false
+        }
+        return true
+    }
+}
+
diff --git a/YiLinkerOnlineBuyer/resources/View/ChangeAddressCollectionViewCell.swift b/YiLinkerOnlineBuyer/resources/View/ChangeAddressCollectionViewCell.swift
index 12818d6..37365ae 100644
--- a/YiLinkerOnlineBuyer/resources/View/ChangeAddressCollectionViewCell.swift
+++ b/YiLinkerOnlineBuyer/resources/View/ChangeAddressCollectionViewCell.swift
@@ -14,10 +14,13 @@ protocol ChangeAddressCollectionViewCellDelegate {
 
 class ChangeAddressCollectionViewCell: UICollectionViewCell {
 
+    @IBOutlet weak var titleLabel: UILabel!
     @IBOutlet weak var checkBoxButton: SemiRoundedButton!
     @IBOutlet weak var deleteButton: UIButton!
     var delegate: ChangeAddressCollectionViewCellDelegate?
 
+    @IBOutlet weak var addressLabel: UILabel!
+    
     override func awakeFromNib() {
         super.awakeFromNib()
         // Initialization code
diff --git a/YiLinkerOnlineBuyer/resources/View/EditProfileAccountInformationTableViewCell.swift b/YiLinkerOnlineBuyer/resources/View/EditProfileAccountInformationTableViewCell.swift
new file mode 100644
index 0000000..dedd946
--- /dev/null
+++ b/YiLinkerOnlineBuyer/resources/View/EditProfileAccountInformationTableViewCell.swift
@@ -0,0 +1,45 @@
+//
+//  EditProfileAccountInformationTableViewCell.swift
+//  YiLinkerOnlineBuyer
+//
+//  Created by John Paul Chan on 8/24/15.
+//  Copyright (c) 2015 yiLinker-online-buyer. All rights reserved.
+//
+
+import UIKit
+
+protocol EditProfileAccountInformationTableViewCellDelegate{
+    func saveAction(sender: AnyObject)
+}
+
+class EditProfileAccountInformationTableViewCell: UITableViewCell {
+
+    var delegate: EditProfileAccountInformationTableViewCellDelegate?
+    
+    @IBOutlet weak var emailAddressTextField: UITextField!
+    @IBOutlet weak var passwordTextField: UITextField!
+    @IBOutlet weak var saveButton: UIButton!
+    
+    @IBOutlet weak var changeEmailButton: UIButton!
+    @IBOutlet weak var changePasswordButton: UIButton!
+    
+    override func awakeFromNib() {
+        super.awakeFromNib()
+        
+        initializeViews()
+    }
+    
+    func initializeViews() {
+        saveButton.layer.cornerRadius = 8
+        changeEmailButton.layer.cornerRadius = 8
+        changePasswordButton.layer.cornerRadius = 8
+    }
+    
+    @IBAction func saveAction(sender: AnyObject) {
+        delegate?.saveAction(self)
+    }
+    
+    @IBAction func changeAction(sender: AnyObject) {
+    }
+
+}
diff --git a/YiLinkerOnlineBuyer/resources/View/EditProfileAddPhotoTableViewCell.swift b/YiLinkerOnlineBuyer/resources/View/EditProfileAddPhotoTableViewCell.swift
new file mode 100644
index 0000000..5a4e18a
--- /dev/null
+++ b/YiLinkerOnlineBuyer/resources/View/EditProfileAddPhotoTableViewCell.swift
@@ -0,0 +1,40 @@
+//
+//  EditProfileAddPhotoTableViewCell.swift
+//  YiLinkerOnlineBuyer
+//
+//  Created by John Paul Chan on 8/24/15.
+//  Copyright (c) 2015 yiLinker-online-buyer. All rights reserved.
+//
+
+import UIKit
+
+protocol EditProfileAddPhotoTableViewCellDelegate{
+    func addPhotoAction(sender: AnyObject)
+}
+
+class EditProfileAddPhotoTableViewCell: UITableViewCell {
+    
+    var delegate: EditProfileAddPhotoTableViewCellDelegate?
+
+    @IBOutlet weak var addPhotoLabel: UILabel!
+    @IBOutlet weak var addPhotoView: UIView!
+    @IBOutlet weak var profileImageView: UIImageView!
+    
+    override func awakeFromNib() {
+        super.awakeFromNib()
+        // Initialization code
+        initializeViews()
+    }
+
+    func initializeViews() {
+        addPhotoView.layer.cornerRadius = addPhotoView.frame.height / 2
+        
+        var addPhoto = UITapGestureRecognizer(target:self, action:"tapAddPhotoAction")
+        addPhotoView.addGestureRecognizer(addPhoto)
+    }
+    
+    func tapAddPhotoAction() {
+        delegate?.addPhotoAction(self)
+    }
+
+}
diff --git a/YiLinkerOnlineBuyer/resources/View/EditProfileAddressTableViewCell.swift b/YiLinkerOnlineBuyer/resources/View/EditProfileAddressTableViewCell.swift
new file mode 100644
index 0000000..0082152
--- /dev/null
+++ b/YiLinkerOnlineBuyer/resources/View/EditProfileAddressTableViewCell.swift
@@ -0,0 +1,36 @@
+//
+//  EditProfileAddressTableViewCell.swift
+//  YiLinkerOnlineBuyer
+//
+//  Created by John Paul Chan on 8/24/15.
+//  Copyright (c) 2015 yiLinker-online-buyer. All rights reserved.
+//
+
+import UIKit
+
+protocol EditProfileAddressTableViewCellDelegate{
+    func changeAddressAction(sender: AnyObject)
+}
+
+class EditProfileAddressTableViewCell: UITableViewCell {
+    
+    var delegate: EditProfileAddressTableViewCellDelegate?
+
+    @IBOutlet weak var addressLabel: UILabel!
+    @IBOutlet weak var addressTitleLabel: UILabel!
+    @IBOutlet weak var changeAddressButton: UIButton!
+    @IBOutlet weak var changeAdressIconButton: UIButton!
+    override func awakeFromNib() {
+        super.awakeFromNib()
+        // Initialization code
+        
+        
+        addressLabel.sizeToFit()
+        addressLabel.text = "LG Sta. Lucia East Grand Mall,\nMarcos Highway Corner Felix Avenue,\nOrtigas, Pasig City"
+    }
+    
+    @IBAction func changeAddressAction(sender: AnyObject) {
+        delegate?.changeAddressAction(self)
+    }
+
+}
diff --git a/YiLinkerOnlineBuyer/resources/View/EditProfilePersonalInformationTableViewCell.swift b/YiLinkerOnlineBuyer/resources/View/EditProfilePersonalInformationTableViewCell.swift
new file mode 100644
index 0000000..7a29fca
--- /dev/null
+++ b/YiLinkerOnlineBuyer/resources/View/EditProfilePersonalInformationTableViewCell.swift
@@ -0,0 +1,31 @@
+//
+//  EditProfilePersonalInformationTableViewCell.swift
+//  YiLinkerOnlineBuyer
+//
+//  Created by John Paul Chan on 8/24/15.
+//  Copyright (c) 2015 yiLinker-online-buyer. All rights reserved.
+//
+
+import UIKit
+
+protocol EditProfilePersonalInformationTableViewCellDelegate {
+    func passPersonalInformation(firstName: String, lastName: String, mobileNumber: String)
+}
+
+class EditProfilePersonalInformationTableViewCell: UITableViewCell, UITextFieldDelegate {
+
+    var delegate: EditProfilePersonalInformationTableViewCellDelegate?
+    
+    @IBOutlet weak var firstNameTextField: UITextField!
+    @IBOutlet weak var lastNameTextField: UITextField!
+    @IBOutlet weak var mobilePhoneTextField: UITextField!
+    
+    @IBAction func editingAction(sender: AnyObject) {
+        delegate?.passPersonalInformation(firstNameTextField.text, lastName: lastNameTextField.text, mobileNumber: mobilePhoneTextField.text)
+    }
+    
+    override func awakeFromNib() {
+        super.awakeFromNib()
+    }
+    
+}
diff --git a/YiLinkerOnlineBuyer/resources/View/NewAddressTableViewCell.swift b/YiLinkerOnlineBuyer/resources/View/NewAddressTableViewCell.swift
index 6fc3cd3..d0365b5 100644
--- a/YiLinkerOnlineBuyer/resources/View/NewAddressTableViewCell.swift
+++ b/YiLinkerOnlineBuyer/resources/View/NewAddressTableViewCell.swift
@@ -11,9 +11,11 @@ import UIKit
 protocol NewAddressTableViewCellDelegate {
     func newAddressTableViewCell(didClickNext newAddressTableViewCell: NewAddressTableViewCell)
     func newAddressTableViewCell(didClickPrevious newAddressTableViewCell: NewAddressTableViewCell)
+    
+    func newAddressTableViewCell(didBeginEditing newAddressTableViewCell: NewAddressTableViewCell, index: Int)
 }
 
-class NewAddressTableViewCell: UITableViewCell {
+class NewAddressTableViewCell: UITableViewCell, UITextFieldDelegate {
    
     @IBOutlet weak var rowTitleLabel: UILabel!
     @IBOutlet weak var rowTextField: UITextField!
@@ -23,7 +25,10 @@ class NewAddressTableViewCell: UITableViewCell {
     override func awakeFromNib() {
         super.awakeFromNib()
         
-        self.rowTextField.addToolBarWithTarget(self, next: "next", previous: "previous", done: "done")
+        
+        self.rowTextField.delegate = self
+        
+//        self.rowTextField.addToolBarWithTarget(self, next: "next", previous: "previous", done: "done")
     }
 
     override func setSelected(selected: Bool, animated: Bool) {
@@ -31,17 +36,21 @@ class NewAddressTableViewCell: UITableViewCell {
 
         // Configure the view for the selected state
     }
-    
-    func next() {
-        self.delegate!.newAddressTableViewCell(didClickNext: self)
-    }
-    
-    func previous() {
-        self.delegate!.newAddressTableViewCell(didClickPrevious: self)
+
+    func textFieldDidBeginEditing(textField: UITextField) {
+        delegate?.newAddressTableViewCell(didBeginEditing: self, index: self.tag)
     }
     
-    func done() {
-        self.endEditing(true)
-    }
+//    func next() {
+//        self.delegate!.newAddressTableViewCell(didClickNext: self)
+//    }
+//    
+//    func previous() {
+//        self.delegate!.newAddressTableViewCell(didClickPrevious: self)
+//    }
+//    
+//    func done() {
+//        self.endEditing(true)
+//    }
     
 }
diff --git a/YiLinkerOnlineBuyer/resources/View/ProductImagesView.swift b/YiLinkerOnlineBuyer/resources/View/ProductImagesView.swift
index b487381..008b52d 100644
--- a/YiLinkerOnlineBuyer/resources/View/ProductImagesView.swift
+++ b/YiLinkerOnlineBuyer/resources/View/ProductImagesView.swift
@@ -142,13 +142,9 @@ class ProductImagesView: UIView, UICollectionViewDataSource, UICollectionViewDel
         
         self.images = model.productUnits[unitId].imageIds
         if self.images.count == 0 {
-            self.images = ["http://shop.bench.com.ph/media/catalog/product/cache/1/image/9df78eab33525d08d6e5fb8d27136e95/Y/W/YWH0089BU4.jpg",
-                "http://shop.bench.com.ph/media/catalog/product/cache/1/image/9df78eab33525d08d6e5fb8d27136e95/Y/W/YWH0089BU4_F.jpg",
-                "http://shop.bench.com.ph/media/catalog/product/cache/1/image/9df78eab33525d08d6e5fb8d27136e95/Y/W/YWH0089BU4_S.jpg",
-                "http://shop.bench.com.ph/media/catalog/product/cache/1/image/9df78eab33525d08d6e5fb8d27136e95/Y/W/YWH0089BU4_B.jpg",
-                "http://shop.bench.com.ph/media/catalog/product/cache/1/image/9df78eab33525d08d6e5fb8d27136e95/Y/W/YWH0089BU4_45.jpg"]
+            self.images = ["", "", "", "", ""]
         }
-         self.pageControl.numberOfPages = self.images.count
+        self.pageControl.numberOfPages = self.images.count
         self.collectionView.reloadData()
     }
     
diff --git a/YiLinkerOnlineBuyer/resources/View/ProductResultGridCollectionViewCell.swift b/YiLinkerOnlineBuyer/resources/View/ProductResultGridCollectionViewCell.swift
index 86c51bd..13dd636 100644
--- a/YiLinkerOnlineBuyer/resources/View/ProductResultGridCollectionViewCell.swift
+++ b/YiLinkerOnlineBuyer/resources/View/ProductResultGridCollectionViewCell.swift
@@ -21,4 +21,23 @@ class ProductResultGridCollectionViewCell: UICollectionViewCell {
         super.awakeFromNib()
     }
     
+    func setDiscount(text: String) {
+        discountLabel.text = text + "% OFF"
+    }
+    
+    func setProductName(text: String) {
+        productNameLabel.text = text
+    }
+    
+    func setOriginalPrice(text: String) {
+        originalPriceLabel.text = text
+    }
+    
+    func setNewPrice(text: String) {
+        newPriceLabel.text = text
+    }
+    
+    func setProductImage(text: String) {
+        productImageView.sd_setImageWithURL(NSURL(string: text), placeholderImage: UIImage(named: "dummy-placeholder"))
+    }
 }
diff --git a/YiLinkerOnlineBuyer/resources/View/ProductResultListCollectionViewCell.swift b/YiLinkerOnlineBuyer/resources/View/ProductResultListCollectionViewCell.swift
index 8bbe0cd..07e3ead 100644
--- a/YiLinkerOnlineBuyer/resources/View/ProductResultListCollectionViewCell.swift
+++ b/YiLinkerOnlineBuyer/resources/View/ProductResultListCollectionViewCell.swift
@@ -21,4 +21,24 @@ class ProductResultListCollectionViewCell: UICollectionViewCell {
     override func awakeFromNib() {
         super.awakeFromNib()
     }
+    
+    func setDiscount(text: String) {
+        discountLabel.text = text + "% OFF"
+    }
+    
+    func setProductName(text: String) {
+        productNameLabel.text = text
+    }
+    
+    func setOriginalPrice(text: String) {
+        originalPriceLabel.text = text
+    }
+    
+    func setNewPrice(text: String) {
+        newPriceLabel.text = text
+    }
+    
+    func setProductImage(text: String) {
+        productImageView.sd_setImageWithURL(NSURL(string: text), placeholderImage: UIImage(named: "dummy-placeholder"))
+    }
 }
diff --git a/YiLinkerOnlineBuyer/resources/View/ProfileHeaderTableViewCell.xib b/YiLinkerOnlineBuyer/resources/View/ProfileHeaderTableViewCell.xib
index 1b038f2..44a4d56 100644
--- a/YiLinkerOnlineBuyer/resources/View/ProfileHeaderTableViewCell.xib
+++ b/YiLinkerOnlineBuyer/resources/View/ProfileHeaderTableViewCell.xib
@@ -17,10 +17,8 @@
                     <imageView clipsSubviews="YES" userInteractionEnabled="NO" contentMode="scaleAspectFill" horizontalHuggingPriority="251" verticalHuggingPriority="251" image="dummy-placeholder" translatesAutoresizingMaskIntoConstraints="NO" id="YxS-Ec-ogK" userLabel="Image">
                         <rect key="frame" x="137" y="23" width="100" height="100"/>
                         <constraints>
-                            <constraint firstAttribute="width" relation="greaterThanOrEqual" constant="100" id="AJ6-yr-u9F"/>
-                            <constraint firstAttribute="width" constant="100" id="YLQ-2j-r1g"/>
-                            <constraint firstAttribute="height" relation="greaterThanOrEqual" constant="100" id="hUB-c9-qeN"/>
-                            <constraint firstAttribute="height" constant="100" id="i9u-Cu-i7S"/>
+                            <constraint firstAttribute="width" constant="100" id="Ta3-gK-VVf"/>
+                            <constraint firstAttribute="height" constant="100" id="zQE-BT-jzS"/>
                         </constraints>
                         <userDefinedRuntimeAttributes>
                             <userDefinedRuntimeAttribute type="number" keyPath="cornerRadius">
@@ -28,38 +26,35 @@
                             </userDefinedRuntimeAttribute>
                         </userDefinedRuntimeAttributes>
                     </imageView>
-                    <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Van Dalism" textAlignment="center" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="Dmm-Px-9s3" userLabel="Name">
-                        <rect key="frame" x="8" y="131" width="359" height="20"/>
+                    <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text=" " textAlignment="center" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="miu-nT-oet" userLabel="Address">
+                        <rect key="frame" x="8" y="151" width="359" height="15"/>
                         <constraints>
-                            <constraint firstAttribute="height" constant="20" id="jzl-gp-2Pf"/>
+                            <constraint firstAttribute="height" constant="15" id="IrK-YZ-50i"/>
                         </constraints>
-                        <fontDescription key="fontDescription" type="boldSystem" pointSize="17"/>
+                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                         <color key="textColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
                         <nil key="highlightedColor"/>
                     </label>
-                    <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Ortigas, Pasig City" textAlignment="center" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="miu-nT-oet" userLabel="Address">
-                        <rect key="frame" x="8" y="151" width="359" height="15"/>
+                    <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text=" " textAlignment="center" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="Dmm-Px-9s3" userLabel="Name">
+                        <rect key="frame" x="8" y="131" width="359" height="20"/>
                         <constraints>
-                            <constraint firstAttribute="height" constant="15" id="IrK-YZ-50i"/>
+                            <constraint firstAttribute="height" constant="20" id="jzl-gp-2Pf"/>
                         </constraints>
-                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
+                        <fontDescription key="fontDescription" type="boldSystem" pointSize="17"/>
                         <color key="textColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
                         <nil key="highlightedColor"/>
                     </label>
                 </subviews>
                 <constraints>
                     <constraint firstItem="miu-nT-oet" firstAttribute="top" secondItem="Dmm-Px-9s3" secondAttribute="bottom" id="04V-4C-nwm"/>
-                    <constraint firstAttribute="centerX" secondItem="YxS-Ec-ogK" secondAttribute="centerX" id="3ln-wO-8ef"/>
                     <constraint firstItem="miu-nT-oet" firstAttribute="leading" secondItem="H2p-sc-9uM" secondAttribute="leadingMargin" id="5PU-Gc-vzd"/>
-                    <constraint firstItem="YxS-Ec-ogK" firstAttribute="top" secondItem="H2p-sc-9uM" secondAttribute="topMargin" constant="15" id="LLf-K4-jiR"/>
-                    <constraint firstAttribute="trailingMargin" secondItem="YxS-Ec-ogK" secondAttribute="trailing" constant="130" id="Lse-pn-7bq"/>
                     <constraint firstAttribute="bottomMargin" secondItem="miu-nT-oet" secondAttribute="bottom" constant="25" id="NAn-rH-H7T"/>
                     <constraint firstItem="miu-nT-oet" firstAttribute="trailing" secondItem="H2p-sc-9uM" secondAttribute="trailingMargin" id="Qyz-YX-jvk"/>
-                    <constraint firstItem="Dmm-Px-9s3" firstAttribute="top" secondItem="YxS-Ec-ogK" secondAttribute="bottom" constant="8" id="dPS-WD-EFT"/>
-                    <constraint firstItem="YxS-Ec-ogK" firstAttribute="leading" secondItem="H2p-sc-9uM" secondAttribute="leadingMargin" constant="129" id="ey4-xB-oqj"/>
+                    <constraint firstAttribute="centerX" secondItem="YxS-Ec-ogK" secondAttribute="centerX" id="d5q-jP-8XS"/>
                     <constraint firstItem="Dmm-Px-9s3" firstAttribute="leading" secondItem="H2p-sc-9uM" secondAttribute="leadingMargin" id="fDe-lE-UJv"/>
                     <constraint firstItem="Dmm-Px-9s3" firstAttribute="trailing" secondItem="H2p-sc-9uM" secondAttribute="trailingMargin" id="fc8-rm-bt4"/>
-                    <constraint firstItem="Dmm-Px-9s3" firstAttribute="top" secondItem="YxS-Ec-ogK" secondAttribute="bottom" constant="8" id="ihj-2X-7k9"/>
+                    <constraint firstItem="Dmm-Px-9s3" firstAttribute="top" secondItem="YxS-Ec-ogK" secondAttribute="bottom" constant="8" id="oGq-Ks-Gty"/>
+                    <constraint firstItem="YxS-Ec-ogK" firstAttribute="top" secondItem="H2p-sc-9uM" secondAttribute="topMargin" constant="15" id="rP9-fc-p7m"/>
                     <constraint firstItem="miu-nT-oet" firstAttribute="top" secondItem="Dmm-Px-9s3" secondAttribute="bottom" id="w8H-yR-bME"/>
                 </constraints>
             </tableViewCellContentView>
diff --git a/YiLinkerOnlineBuyer/resources/View/ProfileSettingsTableViewCell.swift b/YiLinkerOnlineBuyer/resources/View/ProfileSettingsTableViewCell.swift
new file mode 100644
index 0000000..b4aa763
--- /dev/null
+++ b/YiLinkerOnlineBuyer/resources/View/ProfileSettingsTableViewCell.swift
@@ -0,0 +1,30 @@
+//
+//  ProfileSettingsTableViewCell.swift
+//  YiLinkerOnlineBuyer
+//
+//  Created by John Paul Chan on 8/23/15.
+//  Copyright (c) 2015 yiLinker-online-buyer. All rights reserved.
+//
+
+import UIKit
+
+protocol ProfileSettingsTableViewCellDelegate{
+    func settingsSwitchAction(sender: AnyObject, value: Bool)
+}
+
+class ProfileSettingsTableViewCell: UITableViewCell {
+    
+    var delegate: ProfileSettingsTableViewCellDelegate?
+    
+    @IBOutlet weak var settingsLabel: UILabel!
+    @IBOutlet weak var settingsSwitch: UISwitch!
+
+    override func awakeFromNib() {
+        super.awakeFromNib()
+        // Initialization code
+    }
+
+    @IBAction func switchAction(sender: AnyObject) {
+        delegate?.settingsSwitchAction(self, value: (sender as! UISwitch).on)
+    }
+}
diff --git a/YiLinkerOnlineBuyer/resources/View/ProfileTableViewCell.swift b/YiLinkerOnlineBuyer/resources/View/ProfileTableViewCell.swift
index 968b03f..f1e0c58 100644
--- a/YiLinkerOnlineBuyer/resources/View/ProfileTableViewCell.swift
+++ b/YiLinkerOnlineBuyer/resources/View/ProfileTableViewCell.swift
@@ -29,14 +29,27 @@ class ProfileTableViewCell: UITableViewCell {
     @IBOutlet weak var myPointsView: UIView!
     @IBOutlet weak var settingsView: UIView!
     
-    
+    @IBOutlet weak var editProfileButton: UIButton!
+    @IBOutlet weak var transactionsButton: UIButton!
+    @IBOutlet weak var activityLogButton: UIButton!
+    @IBOutlet weak var myPointsButton: UIButton!
+    @IBOutlet weak var settingsButton: UIButton!
     override func awakeFromNib() {
         super.awakeFromNib()
         // Initialization code
         
+        initializeViews()
         initializesTapGesture()
     }
 
+    func initializeViews() {
+        editProfileButton.layer.cornerRadius = editProfileButton.frame.height / 2
+        transactionsButton.layer.cornerRadius = transactionsButton.frame.height / 2
+        activityLogButton.layer.cornerRadius = activityLogButton.frame.height / 2
+        myPointsButton.layer.cornerRadius = myPointsButton.frame.height / 2
+        settingsButton.layer.cornerRadius = settingsButton.frame.height / 2
+    }
+    
     func initializesTapGesture() {
         var editProfile = UITapGestureRecognizer(target:self, action:"tapEditProfileViewAction")
         editProfileView.addGestureRecognizer(editProfile)
diff --git a/YiLinkerOnlineBuyer/resources/View/ProfileTableViewCell.xib b/YiLinkerOnlineBuyer/resources/View/ProfileTableViewCell.xib
index 475eb7e..13141d4 100644
--- a/YiLinkerOnlineBuyer/resources/View/ProfileTableViewCell.xib
+++ b/YiLinkerOnlineBuyer/resources/View/ProfileTableViewCell.xib
@@ -7,420 +7,318 @@
     <objects>
         <placeholder placeholderIdentifier="IBFilesOwner" id="-1" userLabel="File's Owner"/>
         <placeholder placeholderIdentifier="IBFirstResponder" id="-2" customClass="UIResponder"/>
-        <tableViewCell contentMode="scaleToFill" selectionStyle="default" indentationWidth="10" reuseIdentifier="ProfileTableViewCell" id="KGk-i7-Jjw" customClass="ProfileTableViewCell" customModule="YiLinkerOnlineBuyer" customModuleProvider="target">
+        <tableViewCell contentMode="scaleToFill" selectionStyle="default" indentationWidth="10" reuseIdentifier="ProfileTableViewCell" id="j2V-8m-LxX" customClass="ProfileTableViewCell" customModule="YiLinkerOnlineBuyer" customModuleProvider="target">
             <rect key="frame" x="0.0" y="0.0" width="375" height="400"/>
-            <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
-            <tableViewCellContentView key="contentView" opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="center" tableViewCell="KGk-i7-Jjw" id="H2p-sc-9uM">
-                <rect key="frame" x="0.0" y="0.0" width="320" height="43"/>
+            <autoresizingMask key="autoresizingMask"/>
+            <tableViewCellContentView key="contentView" opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="center" tableViewCell="j2V-8m-LxX" id="meK-1n-TMy">
                 <autoresizingMask key="autoresizingMask"/>
                 <subviews>
-                    <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="66z-i9-nDa" userLabel="Details">
+                    <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="gu4-id-Cgq">
                         <rect key="frame" x="0.0" y="0.0" width="375" height="70"/>
                         <subviews>
-                            <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="6zO-LW-Xsd" userLabel="Following">
-                                <rect key="frame" x="78" y="0.0" width="75" height="70"/>
+                            <view clipsSubviews="YES" contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="xip-6i-tJE" userLabel="Left spacer">
+                                <rect key="frame" x="8" y="1" width="75" height="67"/>
+                                <color key="backgroundColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
+                            </view>
+                            <view clipsSubviews="YES" contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="mEd-hP-D3K" userLabel="Transaction">
+                                <rect key="frame" x="209" y="1" width="75" height="68"/>
                                 <subviews>
-                                    <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" text="Following" textAlignment="center" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="CHn-mG-ctm">
-                                        <rect key="frame" x="0.0" y="47" width="75" height="15"/>
+                                    <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" text="Transactions" textAlignment="center" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="Gd0-X3-Opt">
+                                        <rect key="frame" x="0.0" y="41" width="75" height="15"/>
                                         <fontDescription key="fontDescription" type="system" pointSize="12"/>
                                         <color key="textColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
                                         <nil key="highlightedColor"/>
                                     </label>
-                                    <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" text="99" textAlignment="center" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="i0B-8a-R37">
-                                        <rect key="frame" x="7" y="17" width="60" height="30"/>
+                                    <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" text="0" textAlignment="center" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="O5W-Kv-PRr">
+                                        <rect key="frame" x="7" y="11" width="60" height="30"/>
                                         <fontDescription key="fontDescription" type="boldSystem" pointSize="20"/>
-                                        <color key="textColor" red="0.6470588235294118" green="0.66274509803921566" blue="0.19607843137254902" alpha="1" colorSpace="calibratedRGB"/>
+                                        <color key="textColor" red="0.64705882349999999" green="0.66274509800000003" blue="0.1960784314" alpha="1" colorSpace="calibratedRGB"/>
                                         <nil key="highlightedColor"/>
                                     </label>
                                 </subviews>
                                 <color key="backgroundColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
                                 <constraints>
-                                    <constraint firstAttribute="width" constant="75" id="YU5-PQ-LwB"/>
-                                    <constraint firstAttribute="height" constant="70" id="gs9-oO-T2O"/>
+                                    <constraint firstAttribute="width" constant="75" id="8LF-54-LuG"/>
+                                    <constraint firstAttribute="height" constant="68" id="b6y-hy-3W6"/>
                                 </constraints>
                             </view>
-                            <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="mEd-hP-D3K" userLabel="Transaction">
-                                <rect key="frame" x="232" y="0.0" width="75" height="70"/>
+                            <view clipsSubviews="YES" contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="JaY-FM-8t8" userLabel="Right Spacer">
+                                <rect key="frame" x="292" y="1" width="75" height="68"/>
+                                <color key="backgroundColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
+                            </view>
+                            <view clipsSubviews="YES" contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="6zO-LW-Xsd" userLabel="Following">
+                                <rect key="frame" x="91" y="1" width="75" height="67"/>
                                 <subviews>
-                                    <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" text="Transactions" textAlignment="center" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="Gd0-X3-Opt">
-                                        <rect key="frame" x="0.0" y="47" width="75" height="15"/>
+                                    <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" text="Following" textAlignment="center" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="CHn-mG-ctm">
+                                        <rect key="frame" x="0.0" y="40" width="75" height="15"/>
                                         <fontDescription key="fontDescription" type="system" pointSize="12"/>
                                         <color key="textColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
                                         <nil key="highlightedColor"/>
                                     </label>
-                                    <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" text="99" textAlignment="center" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="O5W-Kv-PRr">
-                                        <rect key="frame" x="7" y="17" width="60" height="30"/>
+                                    <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" text="0" textAlignment="center" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="i0B-8a-R37">
+                                        <rect key="frame" x="7" y="12" width="60" height="30"/>
                                         <fontDescription key="fontDescription" type="boldSystem" pointSize="20"/>
-                                        <color key="textColor" red="0.64705882349999999" green="0.66274509800000003" blue="0.1960784314" alpha="1" colorSpace="calibratedRGB"/>
+                                        <color key="textColor" red="0.6470588235294118" green="0.66274509803921566" blue="0.19607843137254902" alpha="1" colorSpace="calibratedRGB"/>
                                         <nil key="highlightedColor"/>
                                     </label>
                                 </subviews>
                                 <color key="backgroundColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
                                 <constraints>
-                                    <constraint firstAttribute="width" constant="75" id="NB9-mG-tvK"/>
-                                    <constraint firstAttribute="height" constant="70" id="NOg-8S-Dla"/>
+                                    <constraint firstAttribute="width" constant="75" id="4k8-ed-TQ9"/>
+                                    <constraint firstAttribute="height" constant="67" id="FVM-Vh-AXy"/>
                                 </constraints>
                             </view>
                         </subviews>
                         <color key="backgroundColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
                         <constraints>
-                            <constraint firstAttribute="bottom" secondItem="mEd-hP-D3K" secondAttribute="bottom" id="8nF-Rw-GUj"/>
-                            <constraint firstAttribute="height" constant="70" id="K7W-Jg-Drz"/>
-                            <constraint firstAttribute="trailing" secondItem="mEd-hP-D3K" secondAttribute="trailing" constant="68" id="Pdm-sI-ugW"/>
-                            <constraint firstItem="6zO-LW-Xsd" firstAttribute="leading" secondItem="66z-i9-nDa" secondAttribute="leading" constant="78" id="Py9-6S-yfR"/>
-                            <constraint firstItem="mEd-hP-D3K" firstAttribute="top" secondItem="66z-i9-nDa" secondAttribute="top" id="bDz-5y-WUs"/>
-                            <constraint firstItem="6zO-LW-Xsd" firstAttribute="top" secondItem="66z-i9-nDa" secondAttribute="top" id="dMb-ZC-E1A"/>
-                            <constraint firstAttribute="bottom" secondItem="6zO-LW-Xsd" secondAttribute="bottom" id="nq0-Cc-DzX"/>
+                            <constraint firstAttribute="bottom" secondItem="xip-6i-tJE" secondAttribute="bottom" constant="2" id="5ro-Ez-D8I"/>
+                            <constraint firstItem="mEd-hP-D3K" firstAttribute="leading" secondItem="6zO-LW-Xsd" secondAttribute="trailing" constant="43" id="81O-E3-bpd"/>
+                            <constraint firstAttribute="bottom" secondItem="JaY-FM-8t8" secondAttribute="bottom" constant="1" id="8c6-1Z-nPt"/>
+                            <constraint firstItem="xip-6i-tJE" firstAttribute="width" secondItem="JaY-FM-8t8" secondAttribute="width" id="95G-lt-aXf"/>
+                            <constraint firstItem="JaY-FM-8t8" firstAttribute="leading" secondItem="mEd-hP-D3K" secondAttribute="trailing" constant="8" id="Boc-TD-Io6"/>
+                            <constraint firstItem="JaY-FM-8t8" firstAttribute="top" secondItem="gu4-id-Cgq" secondAttribute="top" constant="1" id="D3f-pc-eho"/>
+                            <constraint firstAttribute="bottom" secondItem="mEd-hP-D3K" secondAttribute="bottom" constant="1" id="Jbm-4v-Tyf"/>
+                            <constraint firstItem="JaY-FM-8t8" firstAttribute="leading" secondItem="mEd-hP-D3K" secondAttribute="trailing" constant="8" id="Nnh-3K-3FA"/>
+                            <constraint firstItem="xip-6i-tJE" firstAttribute="top" secondItem="gu4-id-Cgq" secondAttribute="top" constant="1" id="WEO-j0-wJf"/>
+                            <constraint firstItem="mEd-hP-D3K" firstAttribute="top" secondItem="gu4-id-Cgq" secondAttribute="top" constant="1" id="Ylm-V8-ZSa"/>
+                            <constraint firstAttribute="bottom" secondItem="6zO-LW-Xsd" secondAttribute="bottom" constant="2" id="Zro-Gh-LsF"/>
+                            <constraint firstAttribute="trailing" secondItem="JaY-FM-8t8" secondAttribute="trailing" constant="8" id="ack-rv-oEx"/>
+                            <constraint firstItem="xip-6i-tJE" firstAttribute="leading" secondItem="gu4-id-Cgq" secondAttribute="leading" constant="8" id="i3A-y9-RS2"/>
+                            <constraint firstItem="6zO-LW-Xsd" firstAttribute="leading" secondItem="xip-6i-tJE" secondAttribute="trailing" constant="8" id="mC2-a1-IBR"/>
+                            <constraint firstItem="mEd-hP-D3K" firstAttribute="leading" secondItem="6zO-LW-Xsd" secondAttribute="trailing" constant="43" id="v0M-hf-iVH"/>
+                            <constraint firstItem="6zO-LW-Xsd" firstAttribute="top" secondItem="gu4-id-Cgq" secondAttribute="top" constant="1" id="z03-ef-T2n"/>
+                            <constraint firstAttribute="height" constant="70" id="zox-rI-GVk"/>
                         </constraints>
                     </view>
-                    <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="maW-XZ-E3Q" userLabel="Top Button">
-                        <rect key="frame" x="65" y="95" width="244" height="90"/>
+                    <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="8qb-Uh-aRG" userLabel="Edit Profile">
+                        <rect key="frame" x="65" y="88" width="76" height="90"/>
                         <subviews>
-                            <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="sR5-DB-q6h" userLabel="Edit Profile">
-                                <rect key="frame" x="0.0" y="0.0" width="76" height="90"/>
-                                <subviews>
-                                    <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Edit" textAlignment="center" lineBreakMode="tailTruncation" numberOfLines="2" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="LWf-1v-ax4">
-                                        <rect key="frame" x="0.0" y="66" width="76" height="10"/>
-                                        <constraints>
-                                            <constraint firstAttribute="width" constant="76" id="SAC-es-dsL"/>
-                                            <constraint firstAttribute="height" constant="10" id="VRh-55-QW6"/>
-                                        </constraints>
-                                        <fontDescription key="fontDescription" type="system" pointSize="12"/>
-                                        <color key="textColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
-                                        <nil key="highlightedColor"/>
-                                    </label>
-                                    <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Profile" textAlignment="center" lineBreakMode="tailTruncation" numberOfLines="2" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="P15-gg-L3r">
-                                        <rect key="frame" x="0.0" y="78" width="76" height="10"/>
-                                        <constraints>
-                                            <constraint firstAttribute="width" constant="76" id="50n-5S-I5x"/>
-                                            <constraint firstAttribute="height" constant="10" id="TU8-LX-Puk"/>
-                                        </constraints>
-                                        <fontDescription key="fontDescription" type="system" pointSize="12"/>
-                                        <color key="textColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
-                                        <nil key="highlightedColor"/>
-                                    </label>
-                                    <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="Miz-hC-iTn" customClass="RoundedButton" customModule="YiLinkerOnlineBuyer" customModuleProvider="target">
-                                        <rect key="frame" x="8" y="0.0" width="60" height="60"/>
-                                        <color key="backgroundColor" red="0.37647058820000001" green="0.12549019610000001" blue="0.46666666670000001" alpha="1" colorSpace="calibratedRGB"/>
-                                        <constraints>
-                                            <constraint firstAttribute="height" constant="60" id="eOA-Ic-o6w"/>
-                                            <constraint firstAttribute="width" constant="60" id="flu-bf-2qZ"/>
-                                        </constraints>
-                                        <inset key="contentEdgeInsets" minX="15" minY="15" maxX="15" maxY="15"/>
-                                        <state key="normal" image="profile">
-                                            <color key="titleShadowColor" white="0.5" alpha="1" colorSpace="calibratedWhite"/>
-                                        </state>
-                                        <userDefinedRuntimeAttributes>
-                                            <userDefinedRuntimeAttribute type="number" keyPath="cornerRadius">
-                                                <real key="value" value="1"/>
-                                            </userDefinedRuntimeAttribute>
-                                        </userDefinedRuntimeAttributes>
-                                        <connections>
-                                            <action selector="tapEditProfileViewAction" destination="KGk-i7-Jjw" eventType="touchUpInside" id="3bq-Kf-Na0"/>
-                                        </connections>
-                                    </button>
-                                </subviews>
-                                <color key="backgroundColor" white="0.0" alpha="0.0" colorSpace="calibratedWhite"/>
-                                <constraints>
-                                    <constraint firstItem="P15-gg-L3r" firstAttribute="leading" secondItem="sR5-DB-q6h" secondAttribute="leading" id="0YF-mD-0GB"/>
-                                    <constraint firstItem="LWf-1v-ax4" firstAttribute="leading" secondItem="sR5-DB-q6h" secondAttribute="leading" id="6cy-Ew-eVH"/>
-                                    <constraint firstItem="LWf-1v-ax4" firstAttribute="top" secondItem="Miz-hC-iTn" secondAttribute="bottom" constant="6" id="8Po-77-a0K"/>
-                                    <constraint firstAttribute="trailing" secondItem="Miz-hC-iTn" secondAttribute="trailing" constant="8" id="F2R-ZU-4Ae"/>
-                                    <constraint firstItem="Miz-hC-iTn" firstAttribute="leading" secondItem="sR5-DB-q6h" secondAttribute="leading" constant="8" id="GDF-48-hNK"/>
-                                    <constraint firstAttribute="trailing" secondItem="P15-gg-L3r" secondAttribute="trailing" id="GoU-GR-XM3"/>
-                                    <constraint firstItem="Miz-hC-iTn" firstAttribute="top" secondItem="sR5-DB-q6h" secondAttribute="top" id="IOw-bu-Clq"/>
-                                    <constraint firstItem="LWf-1v-ax4" firstAttribute="top" secondItem="Miz-hC-iTn" secondAttribute="bottom" constant="6" id="JFm-iR-KYg"/>
-                                    <constraint firstAttribute="height" constant="90" id="Qyc-kF-2QF"/>
-                                    <constraint firstAttribute="width" constant="76" id="Veq-CS-pMa"/>
-                                    <constraint firstAttribute="bottom" secondItem="P15-gg-L3r" secondAttribute="bottom" constant="2" id="dCD-AY-ptJ"/>
-                                    <constraint firstAttribute="trailing" secondItem="LWf-1v-ax4" secondAttribute="trailing" id="fgD-cN-mf5"/>
-                                    <constraint firstItem="P15-gg-L3r" firstAttribute="top" secondItem="LWf-1v-ax4" secondAttribute="bottom" constant="2" id="lzp-i4-ePj"/>
-                                    <constraint firstItem="P15-gg-L3r" firstAttribute="top" secondItem="LWf-1v-ax4" secondAttribute="bottom" constant="2" id="xUZ-mg-1bf"/>
-                                </constraints>
-                            </view>
-                            <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="Uqx-Rm-m9P" userLabel="Activity Log">
-                                <rect key="frame" x="168" y="0.0" width="76" height="90"/>
-                                <subviews>
-                                    <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Activity" textAlignment="center" lineBreakMode="tailTruncation" numberOfLines="2" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="wOf-8i-suK">
-                                        <rect key="frame" x="0.0" y="65" width="76" height="10"/>
-                                        <constraints>
-                                            <constraint firstAttribute="width" constant="76" id="R2y-3y-GnZ"/>
-                                            <constraint firstAttribute="height" constant="10" id="yKl-ft-pzh"/>
-                                        </constraints>
-                                        <fontDescription key="fontDescription" type="system" pointSize="12"/>
-                                        <color key="textColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
-                                        <nil key="highlightedColor"/>
-                                    </label>
-                                    <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Log" textAlignment="center" lineBreakMode="tailTruncation" numberOfLines="2" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="x90-vu-nxw">
-                                        <rect key="frame" x="0.0" y="78" width="76" height="12"/>
-                                        <constraints>
-                                            <constraint firstAttribute="width" constant="76" id="SUi-e3-a4Q"/>
-                                            <constraint firstAttribute="height" constant="12" id="m9X-Uh-5kO"/>
-                                        </constraints>
-                                        <fontDescription key="fontDescription" type="system" pointSize="12"/>
-                                        <color key="textColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
-                                        <nil key="highlightedColor"/>
-                                    </label>
-                                    <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="Med-iD-bSP" customClass="RoundedButton" customModule="YiLinkerOnlineBuyer" customModuleProvider="target">
-                                        <rect key="frame" x="8" y="0.0" width="60" height="60"/>
-                                        <color key="backgroundColor" red="0.37647058820000001" green="0.12549019610000001" blue="0.46666666670000001" alpha="1" colorSpace="calibratedRGB"/>
-                                        <constraints>
-                                            <constraint firstAttribute="width" constant="60" id="K9f-ci-agN"/>
-                                            <constraint firstAttribute="height" constant="60" id="s9T-MW-lRR"/>
-                                        </constraints>
-                                        <inset key="contentEdgeInsets" minX="15" minY="18" maxX="15" maxY="15"/>
-                                        <state key="normal" image="activity">
-                                            <color key="titleShadowColor" white="0.5" alpha="1" colorSpace="calibratedWhite"/>
-                                        </state>
-                                        <userDefinedRuntimeAttributes>
-                                            <userDefinedRuntimeAttribute type="number" keyPath="cornerRadius">
-                                                <real key="value" value="1"/>
-                                            </userDefinedRuntimeAttribute>
-                                        </userDefinedRuntimeAttributes>
-                                        <connections>
-                                            <action selector="tapActivityLogViewAction" destination="KGk-i7-Jjw" eventType="touchUpInside" id="aRw-Iq-obB"/>
-                                        </connections>
-                                    </button>
-                                </subviews>
-                                <color key="backgroundColor" white="0.0" alpha="0.0" colorSpace="calibratedWhite"/>
-                                <constraints>
-                                    <constraint firstAttribute="trailing" secondItem="x90-vu-nxw" secondAttribute="trailing" id="3sm-1a-F0S"/>
-                                    <constraint firstItem="wOf-8i-suK" firstAttribute="top" secondItem="Med-iD-bSP" secondAttribute="bottom" constant="5" id="8lS-wV-1jo"/>
-                                    <constraint firstAttribute="trailing" secondItem="wOf-8i-suK" secondAttribute="trailing" id="BTa-cp-bRv"/>
-                                    <constraint firstItem="x90-vu-nxw" firstAttribute="top" secondItem="wOf-8i-suK" secondAttribute="bottom" constant="3" id="Dot-NW-5En"/>
-                                    <constraint firstAttribute="width" constant="76" id="JIE-94-uYX"/>
-                                    <constraint firstItem="Med-iD-bSP" firstAttribute="leading" secondItem="Uqx-Rm-m9P" secondAttribute="leading" constant="8" id="VPE-44-4ZP"/>
-                                    <constraint firstItem="Med-iD-bSP" firstAttribute="top" secondItem="Uqx-Rm-m9P" secondAttribute="top" id="Yxi-Ra-6sh"/>
-                                    <constraint firstItem="x90-vu-nxw" firstAttribute="leading" secondItem="Uqx-Rm-m9P" secondAttribute="leading" id="aHj-JK-hHq"/>
-                                    <constraint firstItem="x90-vu-nxw" firstAttribute="top" secondItem="wOf-8i-suK" secondAttribute="bottom" constant="3" id="aLw-he-fyu"/>
-                                    <constraint firstItem="wOf-8i-suK" firstAttribute="leading" secondItem="Uqx-Rm-m9P" secondAttribute="leading" id="akQ-nA-hIA"/>
-                                    <constraint firstItem="wOf-8i-suK" firstAttribute="top" secondItem="Med-iD-bSP" secondAttribute="bottom" constant="5" id="iNX-2G-0SK"/>
-                                    <constraint firstAttribute="bottom" secondItem="x90-vu-nxw" secondAttribute="bottom" id="p1Q-Mn-r4w"/>
-                                    <constraint firstAttribute="height" constant="90" id="xNL-rO-ydc"/>
-                                    <constraint firstAttribute="trailing" secondItem="Med-iD-bSP" secondAttribute="trailing" constant="8" id="yf9-7z-q6i"/>
-                                </constraints>
-                            </view>
-                            <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="lts-1R-Tyh" userLabel="Transaction">
-                                <rect key="frame" x="84" y="0.0" width="76" height="90"/>
-                                <subviews>
-                                    <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Transactions" textAlignment="center" lineBreakMode="tailTruncation" numberOfLines="2" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="mpS-id-D4Y">
-                                        <rect key="frame" x="0.0" y="66" width="76" height="22"/>
-                                        <constraints>
-                                            <constraint firstAttribute="height" constant="22" id="F3W-zw-0GI"/>
-                                            <constraint firstAttribute="width" constant="76" id="LQq-X4-nZD"/>
-                                        </constraints>
-                                        <fontDescription key="fontDescription" type="system" pointSize="12"/>
-                                        <color key="textColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
-                                        <nil key="highlightedColor"/>
-                                    </label>
-                                    <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="vUR-iL-pIB" customClass="RoundedButton" customModule="YiLinkerOnlineBuyer" customModuleProvider="target">
-                                        <rect key="frame" x="8" y="0.0" width="60" height="60"/>
-                                        <color key="backgroundColor" red="0.37647058820000001" green="0.12549019610000001" blue="0.46666666670000001" alpha="1" colorSpace="calibratedRGB"/>
-                                        <constraints>
-                                            <constraint firstAttribute="width" constant="60" id="1kC-Vp-NZa"/>
-                                            <constraint firstAttribute="height" constant="60" id="pcx-b6-uN2"/>
-                                        </constraints>
-                                        <inset key="contentEdgeInsets" minX="18" minY="15" maxX="18" maxY="15"/>
-                                        <state key="normal" image="transactions">
-                                            <color key="titleShadowColor" white="0.5" alpha="1" colorSpace="calibratedWhite"/>
-                                        </state>
-                                        <userDefinedRuntimeAttributes>
-                                            <userDefinedRuntimeAttribute type="number" keyPath="cornerRadius">
-                                                <real key="value" value="1"/>
-                                            </userDefinedRuntimeAttribute>
-                                        </userDefinedRuntimeAttributes>
-                                        <connections>
-                                            <action selector="tapTransactionsViewAction" destination="KGk-i7-Jjw" eventType="touchUpInside" id="o2D-g6-nce"/>
-                                        </connections>
-                                    </button>
-                                </subviews>
-                                <color key="backgroundColor" white="0.0" alpha="0.0" colorSpace="calibratedWhite"/>
-                                <constraints>
-                                    <constraint firstAttribute="trailing" secondItem="mpS-id-D4Y" secondAttribute="trailing" id="1Bf-cO-Aas"/>
-                                    <constraint firstAttribute="bottom" secondItem="mpS-id-D4Y" secondAttribute="bottom" constant="2" id="NyY-gY-XIR"/>
-                                    <constraint firstItem="mpS-id-D4Y" firstAttribute="top" secondItem="vUR-iL-pIB" secondAttribute="bottom" constant="6" id="YiM-xW-b0u"/>
-                                    <constraint firstItem="mpS-id-D4Y" firstAttribute="top" secondItem="vUR-iL-pIB" secondAttribute="bottom" constant="6" id="aFD-mC-3rQ"/>
-                                    <constraint firstItem="mpS-id-D4Y" firstAttribute="leading" secondItem="lts-1R-Tyh" secondAttribute="leading" id="b2C-vC-vE3"/>
-                                    <constraint firstAttribute="trailing" secondItem="vUR-iL-pIB" secondAttribute="trailing" constant="8" id="hPa-1e-7y2"/>
-                                    <constraint firstAttribute="width" constant="76" id="hgc-wm-IlP"/>
-                                    <constraint firstItem="vUR-iL-pIB" firstAttribute="leading" secondItem="lts-1R-Tyh" secondAttribute="leading" constant="8" id="jqc-Ne-wgm"/>
-                                    <constraint firstItem="vUR-iL-pIB" firstAttribute="top" secondItem="lts-1R-Tyh" secondAttribute="top" id="ln7-R0-Je1"/>
-                                    <constraint firstAttribute="height" constant="90" id="mg8-do-3JC"/>
-                                    <constraint firstAttribute="centerX" secondItem="vUR-iL-pIB" secondAttribute="centerX" id="nJH-r5-lPx"/>
-                                </constraints>
-                            </view>
+                            <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" text="Edit" textAlignment="center" lineBreakMode="tailTruncation" numberOfLines="2" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="Nqx-0U-kbN">
+                                <rect key="frame" x="0.0" y="66" width="76" height="10"/>
+                                <fontDescription key="fontDescription" type="system" pointSize="12"/>
+                                <color key="textColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
+                                <nil key="highlightedColor"/>
+                            </label>
+                            <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" text="Profile" textAlignment="center" lineBreakMode="tailTruncation" numberOfLines="2" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="qQ8-5S-Sqd">
+                                <rect key="frame" x="0.0" y="78" width="76" height="10"/>
+                                <fontDescription key="fontDescription" type="system" pointSize="12"/>
+                                <color key="textColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
+                                <nil key="highlightedColor"/>
+                            </label>
+                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="H7e-dQ-Xgm">
+                                <rect key="frame" x="8" y="0.0" width="60" height="60"/>
+                                <color key="backgroundColor" red="0.37647058820000001" green="0.12549019610000001" blue="0.46666666670000001" alpha="1" colorSpace="calibratedRGB"/>
+                                <inset key="contentEdgeInsets" minX="15" minY="15" maxX="15" maxY="15"/>
+                                <state key="normal" image="profile">
+                                    <color key="titleShadowColor" white="0.5" alpha="1" colorSpace="calibratedWhite"/>
+                                </state>
+                                <userDefinedRuntimeAttributes>
+                                    <userDefinedRuntimeAttribute type="number" keyPath="cornerRadius">
+                                        <real key="value" value="1"/>
+                                    </userDefinedRuntimeAttribute>
+                                </userDefinedRuntimeAttributes>
+                                <connections>
+                                    <action selector="tapEditProfileViewAction" destination="j2V-8m-LxX" eventType="touchUpInside" id="3GK-ae-7b6"/>
+                                </connections>
+                            </button>
                         </subviews>
                         <color key="backgroundColor" white="0.0" alpha="0.0" colorSpace="calibratedWhite"/>
                         <constraints>
-                            <constraint firstAttribute="height" constant="90" id="2de-rF-3hQ"/>
-                            <constraint firstItem="sR5-DB-q6h" firstAttribute="leading" secondItem="maW-XZ-E3Q" secondAttribute="leading" id="4ZY-Gn-viG"/>
-                            <constraint firstAttribute="bottom" secondItem="sR5-DB-q6h" secondAttribute="bottom" id="7pm-VK-GgM"/>
-                            <constraint firstAttribute="bottom" secondItem="lts-1R-Tyh" secondAttribute="bottom" id="AbK-Vb-neT"/>
-                            <constraint firstAttribute="trailing" secondItem="Uqx-Rm-m9P" secondAttribute="trailing" id="O0i-AR-tqF"/>
-                            <constraint firstItem="lts-1R-Tyh" firstAttribute="top" secondItem="maW-XZ-E3Q" secondAttribute="top" id="Q88-6w-z4v"/>
-                            <constraint firstItem="Uqx-Rm-m9P" firstAttribute="top" secondItem="maW-XZ-E3Q" secondAttribute="top" id="Sos-bX-TWa"/>
-                            <constraint firstItem="sR5-DB-q6h" firstAttribute="top" secondItem="maW-XZ-E3Q" secondAttribute="top" id="U3H-Ay-ysL"/>
-                            <constraint firstAttribute="bottom" secondItem="Uqx-Rm-m9P" secondAttribute="bottom" id="VPA-Wu-506"/>
-                            <constraint firstItem="lts-1R-Tyh" firstAttribute="leading" secondItem="sR5-DB-q6h" secondAttribute="trailing" constant="8" id="ZUx-wm-BGF"/>
-                            <constraint firstItem="Uqx-Rm-m9P" firstAttribute="leading" secondItem="lts-1R-Tyh" secondAttribute="trailing" constant="8" id="fS0-J1-q7p"/>
-                            <constraint firstItem="Uqx-Rm-m9P" firstAttribute="leading" secondItem="lts-1R-Tyh" secondAttribute="trailing" constant="8" id="fvf-st-oQI"/>
-                            <constraint firstItem="lts-1R-Tyh" firstAttribute="leading" secondItem="sR5-DB-q6h" secondAttribute="trailing" constant="8" id="lPI-Dn-i13"/>
-                            <constraint firstAttribute="width" constant="244" id="qnX-mK-W5i"/>
-                            <constraint firstAttribute="centerX" secondItem="lts-1R-Tyh" secondAttribute="centerX" id="si5-sa-ruF"/>
+                            <constraint firstAttribute="width" constant="76" id="c0f-NX-QdE"/>
+                            <constraint firstAttribute="height" constant="90" id="xad-22-CYu"/>
                         </constraints>
                     </view>
-                    <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="L9S-VP-xCl" userLabel="Bottom Button">
-                        <rect key="frame" x="107" y="215" width="160" height="90"/>
+                    <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="pCN-OU-UYC" userLabel="Transaction">
+                        <rect key="frame" x="149" y="88" width="76" height="90"/>
                         <subviews>
-                            <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="mTK-JG-jeA" userLabel="My Points">
-                                <rect key="frame" x="0.0" y="0.0" width="76" height="90"/>
-                                <subviews>
-                                    <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="My" textAlignment="center" lineBreakMode="tailTruncation" numberOfLines="2" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="t63-Rc-1oI">
-                                        <rect key="frame" x="0.0" y="65" width="76" height="10"/>
-                                        <constraints>
-                                            <constraint firstAttribute="width" constant="76" id="viI-O3-TCS"/>
-                                            <constraint firstAttribute="height" constant="10" id="wlV-qy-7D2"/>
-                                        </constraints>
-                                        <fontDescription key="fontDescription" type="system" pointSize="12"/>
-                                        <color key="textColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
-                                        <nil key="highlightedColor"/>
-                                    </label>
-                                    <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Points" textAlignment="center" lineBreakMode="tailTruncation" numberOfLines="2" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="Ols-UC-uc9">
-                                        <rect key="frame" x="0.0" y="78" width="76" height="12"/>
-                                        <constraints>
-                                            <constraint firstAttribute="height" constant="12" id="9zD-tE-fba"/>
-                                            <constraint firstAttribute="width" constant="76" id="cm9-sI-3NY"/>
-                                        </constraints>
-                                        <fontDescription key="fontDescription" type="system" pointSize="12"/>
-                                        <color key="textColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
-                                        <nil key="highlightedColor"/>
-                                    </label>
-                                    <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="DBE-50-j7u" customClass="RoundedButton" customModule="YiLinkerOnlineBuyer" customModuleProvider="target">
-                                        <rect key="frame" x="8" y="0.0" width="60" height="60"/>
-                                        <color key="backgroundColor" red="0.37647058820000001" green="0.12549019610000001" blue="0.46666666670000001" alpha="1" colorSpace="calibratedRGB"/>
-                                        <constraints>
-                                            <constraint firstAttribute="height" constant="60" id="kEw-8r-LOO"/>
-                                            <constraint firstAttribute="width" constant="60" id="qQL-6l-6fv"/>
-                                        </constraints>
-                                        <inset key="contentEdgeInsets" minX="15" minY="18" maxX="15" maxY="15"/>
-                                        <state key="normal" image="myPoints">
-                                            <color key="titleShadowColor" white="0.5" alpha="1" colorSpace="calibratedWhite"/>
-                                        </state>
-                                        <userDefinedRuntimeAttributes>
-                                            <userDefinedRuntimeAttribute type="number" keyPath="cornerRadius">
-                                                <real key="value" value="1"/>
-                                            </userDefinedRuntimeAttribute>
-                                        </userDefinedRuntimeAttributes>
-                                        <connections>
-                                            <action selector="tapMyPointsViewAction" destination="KGk-i7-Jjw" eventType="touchUpInside" id="hH5-fJ-ACP"/>
-                                        </connections>
-                                    </button>
-                                </subviews>
-                                <color key="backgroundColor" white="0.0" alpha="0.0" colorSpace="calibratedWhite"/>
-                                <constraints>
-                                    <constraint firstItem="Ols-UC-uc9" firstAttribute="leading" secondItem="mTK-JG-jeA" secondAttribute="leading" id="6OG-dw-KNQ"/>
-                                    <constraint firstAttribute="trailing" secondItem="DBE-50-j7u" secondAttribute="trailing" constant="8" id="GCV-VZ-AQc"/>
-                                    <constraint firstAttribute="bottom" secondItem="Ols-UC-uc9" secondAttribute="bottom" id="Hqh-ZK-dSY"/>
-                                    <constraint firstItem="Ols-UC-uc9" firstAttribute="top" secondItem="t63-Rc-1oI" secondAttribute="bottom" constant="3" id="JKq-aF-8Pl"/>
-                                    <constraint firstItem="t63-Rc-1oI" firstAttribute="top" secondItem="DBE-50-j7u" secondAttribute="bottom" constant="5" id="MJy-5i-J2R"/>
-                                    <constraint firstItem="DBE-50-j7u" firstAttribute="leading" secondItem="mTK-JG-jeA" secondAttribute="leading" constant="8" id="MV1-2Q-sq3"/>
-                                    <constraint firstAttribute="width" constant="76" id="Q7N-nm-HHE"/>
-                                    <constraint firstItem="t63-Rc-1oI" firstAttribute="top" secondItem="DBE-50-j7u" secondAttribute="bottom" constant="5" id="UDk-Qj-VLU"/>
-                                    <constraint firstAttribute="trailing" secondItem="t63-Rc-1oI" secondAttribute="trailing" id="XRd-i6-MPU"/>
-                                    <constraint firstItem="DBE-50-j7u" firstAttribute="top" secondItem="mTK-JG-jeA" secondAttribute="top" id="aLG-ym-y01"/>
-                                    <constraint firstAttribute="height" constant="90" id="fQe-di-oN3"/>
-                                    <constraint firstItem="t63-Rc-1oI" firstAttribute="leading" secondItem="mTK-JG-jeA" secondAttribute="leading" id="jgj-S6-W8T"/>
-                                    <constraint firstAttribute="trailing" secondItem="Ols-UC-uc9" secondAttribute="trailing" id="lz4-c9-zfa"/>
-                                    <constraint firstItem="Ols-UC-uc9" firstAttribute="top" secondItem="t63-Rc-1oI" secondAttribute="bottom" constant="3" id="vdn-Pd-a2q"/>
-                                </constraints>
-                            </view>
-                            <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="zGI-fW-f9V" userLabel="Settings">
-                                <rect key="frame" x="84" y="0.0" width="76" height="90"/>
-                                <subviews>
-                                    <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Settings" textAlignment="center" lineBreakMode="tailTruncation" numberOfLines="2" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="f9Y-SQ-g5d">
-                                        <rect key="frame" x="0.0" y="66" width="76" height="22"/>
-                                        <constraints>
-                                            <constraint firstAttribute="width" constant="76" id="fbP-j5-7G0"/>
-                                            <constraint firstAttribute="height" constant="22" id="jfW-Xw-sai"/>
-                                        </constraints>
-                                        <fontDescription key="fontDescription" type="system" pointSize="12"/>
-                                        <color key="textColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
-                                        <nil key="highlightedColor"/>
-                                    </label>
-                                    <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="Pqi-Ld-TaG" customClass="RoundedButton" customModule="YiLinkerOnlineBuyer" customModuleProvider="target">
-                                        <rect key="frame" x="8" y="0.0" width="60" height="60"/>
-                                        <color key="backgroundColor" red="0.37647058820000001" green="0.12549019610000001" blue="0.46666666670000001" alpha="1" colorSpace="calibratedRGB"/>
-                                        <constraints>
-                                            <constraint firstAttribute="height" constant="60" id="R5L-sa-xEf"/>
-                                            <constraint firstAttribute="width" constant="60" id="zoH-bN-qr0"/>
-                                        </constraints>
-                                        <inset key="contentEdgeInsets" minX="15" minY="15" maxX="15" maxY="15"/>
-                                        <state key="normal" image="settings">
-                                            <color key="titleShadowColor" white="0.5" alpha="1" colorSpace="calibratedWhite"/>
-                                        </state>
-                                        <userDefinedRuntimeAttributes>
-                                            <userDefinedRuntimeAttribute type="number" keyPath="cornerRadius">
-                                                <real key="value" value="1"/>
-                                            </userDefinedRuntimeAttribute>
-                                        </userDefinedRuntimeAttributes>
-                                        <connections>
-                                            <action selector="tapSettingsViewAction" destination="KGk-i7-Jjw" eventType="touchUpInside" id="9D0-jF-FTg"/>
-                                        </connections>
-                                    </button>
-                                </subviews>
-                                <color key="backgroundColor" white="0.0" alpha="0.0" colorSpace="calibratedWhite"/>
-                                <constraints>
-                                    <constraint firstItem="f9Y-SQ-g5d" firstAttribute="top" secondItem="Pqi-Ld-TaG" secondAttribute="bottom" constant="6" id="3wi-nS-bik"/>
-                                    <constraint firstAttribute="height" constant="90" id="5vP-1M-E0z"/>
-                                    <constraint firstAttribute="trailing" secondItem="f9Y-SQ-g5d" secondAttribute="trailing" id="F2g-62-dkS"/>
-                                    <constraint firstItem="f9Y-SQ-g5d" firstAttribute="top" secondItem="Pqi-Ld-TaG" secondAttribute="bottom" constant="6" id="FdI-P2-hJJ"/>
-                                    <constraint firstItem="Pqi-Ld-TaG" firstAttribute="top" secondItem="zGI-fW-f9V" secondAttribute="top" id="URd-vu-LrY"/>
-                                    <constraint firstItem="f9Y-SQ-g5d" firstAttribute="leading" secondItem="zGI-fW-f9V" secondAttribute="leading" id="Vzn-Ju-m3S"/>
-                                    <constraint firstAttribute="bottom" secondItem="f9Y-SQ-g5d" secondAttribute="bottom" constant="2" id="Y7T-Py-1Dv"/>
-                                    <constraint firstAttribute="width" constant="76" id="ofW-DA-oem"/>
-                                    <constraint firstItem="Pqi-Ld-TaG" firstAttribute="leading" secondItem="zGI-fW-f9V" secondAttribute="leading" constant="8" id="or9-XO-RZa"/>
-                                    <constraint firstAttribute="trailing" secondItem="Pqi-Ld-TaG" secondAttribute="trailing" constant="8" id="oy4-f6-71B"/>
-                                </constraints>
-                            </view>
+                            <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" text="Transactions" textAlignment="center" lineBreakMode="tailTruncation" numberOfLines="2" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="5yN-FY-ZP1">
+                                <rect key="frame" x="0.0" y="66" width="76" height="22"/>
+                                <fontDescription key="fontDescription" type="system" pointSize="12"/>
+                                <color key="textColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
+                                <nil key="highlightedColor"/>
+                            </label>
+                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="gfO-lN-4H6">
+                                <rect key="frame" x="8" y="0.0" width="60" height="60"/>
+                                <color key="backgroundColor" red="0.37647058820000001" green="0.12549019610000001" blue="0.46666666670000001" alpha="1" colorSpace="calibratedRGB"/>
+                                <inset key="contentEdgeInsets" minX="18" minY="15" maxX="18" maxY="15"/>
+                                <state key="normal" image="transactions">
+                                    <color key="titleShadowColor" white="0.5" alpha="1" colorSpace="calibratedWhite"/>
+                                </state>
+                                <userDefinedRuntimeAttributes>
+                                    <userDefinedRuntimeAttribute type="number" keyPath="cornerRadius">
+                                        <real key="value" value="1"/>
+                                    </userDefinedRuntimeAttribute>
+                                </userDefinedRuntimeAttributes>
+                                <connections>
+                                    <action selector="tapTransactionsViewAction" destination="j2V-8m-LxX" eventType="touchUpInside" id="mDJ-xh-lzj"/>
+                                </connections>
+                            </button>
                         </subviews>
                         <color key="backgroundColor" white="0.0" alpha="0.0" colorSpace="calibratedWhite"/>
                         <constraints>
-                            <constraint firstAttribute="height" constant="90" id="9BG-hL-SQq"/>
-                            <constraint firstItem="zGI-fW-f9V" firstAttribute="leading" secondItem="mTK-JG-jeA" secondAttribute="trailing" constant="8" id="Pir-Sb-xtD"/>
-                            <constraint firstItem="zGI-fW-f9V" firstAttribute="top" secondItem="L9S-VP-xCl" secondAttribute="top" id="Uts-Ti-I9G"/>
-                            <constraint firstItem="mTK-JG-jeA" firstAttribute="top" secondItem="L9S-VP-xCl" secondAttribute="top" id="VqX-v1-o1h"/>
-                            <constraint firstItem="zGI-fW-f9V" firstAttribute="leading" secondItem="mTK-JG-jeA" secondAttribute="trailing" constant="8" id="Z6a-Yd-aoj"/>
-                            <constraint firstItem="mTK-JG-jeA" firstAttribute="leading" secondItem="L9S-VP-xCl" secondAttribute="leading" id="lia-fD-10A"/>
-                            <constraint firstAttribute="trailing" secondItem="zGI-fW-f9V" secondAttribute="trailing" id="riu-Vm-5Ml"/>
-                            <constraint firstAttribute="width" constant="160" id="seu-n4-cTp"/>
-                            <constraint firstAttribute="bottom" secondItem="zGI-fW-f9V" secondAttribute="bottom" id="vJv-R9-6L6"/>
-                            <constraint firstAttribute="bottom" secondItem="mTK-JG-jeA" secondAttribute="bottom" id="ygQ-kv-hPh"/>
+                            <constraint firstAttribute="height" constant="90" id="7PC-yH-Q7v"/>
+                            <constraint firstAttribute="width" constant="76" id="QVe-SU-ucY"/>
                         </constraints>
                     </view>
+                    <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="Fzf-I7-wQV" userLabel="Activity Log">
+                        <rect key="frame" x="233" y="88" width="76" height="90"/>
+                        <subviews>
+                            <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" text="Activity" textAlignment="center" lineBreakMode="tailTruncation" numberOfLines="2" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="wmV-Rp-R28">
+                                <rect key="frame" x="0.0" y="65" width="76" height="10"/>
+                                <fontDescription key="fontDescription" type="system" pointSize="12"/>
+                                <color key="textColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
+                                <nil key="highlightedColor"/>
+                            </label>
+                            <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" text="Log" textAlignment="center" lineBreakMode="tailTruncation" numberOfLines="2" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="JSc-ou-vma">
+                                <rect key="frame" x="0.0" y="78" width="76" height="12"/>
+                                <fontDescription key="fontDescription" type="system" pointSize="12"/>
+                                <color key="textColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
+                                <nil key="highlightedColor"/>
+                            </label>
+                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="cPN-6e-0ak">
+                                <rect key="frame" x="8" y="0.0" width="60" height="60"/>
+                                <color key="backgroundColor" red="0.37647058820000001" green="0.12549019610000001" blue="0.46666666670000001" alpha="1" colorSpace="calibratedRGB"/>
+                                <inset key="contentEdgeInsets" minX="15" minY="18" maxX="15" maxY="15"/>
+                                <state key="normal" image="activity">
+                                    <color key="titleShadowColor" white="0.5" alpha="1" colorSpace="calibratedWhite"/>
+                                </state>
+                                <userDefinedRuntimeAttributes>
+                                    <userDefinedRuntimeAttribute type="number" keyPath="cornerRadius">
+                                        <real key="value" value="1"/>
+                                    </userDefinedRuntimeAttribute>
+                                </userDefinedRuntimeAttributes>
+                                <connections>
+                                    <action selector="tapActivityLogViewAction" destination="j2V-8m-LxX" eventType="touchUpInside" id="1L5-LS-ead"/>
+                                </connections>
+                            </button>
+                        </subviews>
+                        <color key="backgroundColor" white="0.0" alpha="0.0" colorSpace="calibratedWhite"/>
+                        <constraints>
+                            <constraint firstAttribute="width" constant="76" id="CfO-qa-PK2"/>
+                            <constraint firstAttribute="height" constant="90" id="uwx-6g-5LS"/>
+                        </constraints>
+                    </view>
+                    <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="fwf-kM-RU9" userLabel="Settings">
+                        <rect key="frame" x="191" y="218" width="76" height="90"/>
+                        <subviews>
+                            <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" text="Settings" textAlignment="center" lineBreakMode="tailTruncation" numberOfLines="2" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="z8W-QB-SvD">
+                                <rect key="frame" x="0.0" y="66" width="76" height="22"/>
+                                <fontDescription key="fontDescription" type="system" pointSize="12"/>
+                                <color key="textColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
+                                <nil key="highlightedColor"/>
+                            </label>
+                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="K6V-ck-cVR">
+                                <rect key="frame" x="8" y="0.0" width="60" height="60"/>
+                                <color key="backgroundColor" red="0.37647058820000001" green="0.12549019610000001" blue="0.46666666670000001" alpha="1" colorSpace="calibratedRGB"/>
+                                <inset key="contentEdgeInsets" minX="15" minY="15" maxX="15" maxY="15"/>
+                                <state key="normal" image="settings">
+                                    <color key="titleShadowColor" white="0.5" alpha="1" colorSpace="calibratedWhite"/>
+                                </state>
+                                <userDefinedRuntimeAttributes>
+                                    <userDefinedRuntimeAttribute type="number" keyPath="cornerRadius">
+                                        <real key="value" value="1"/>
+                                    </userDefinedRuntimeAttribute>
+                                </userDefinedRuntimeAttributes>
+                                <connections>
+                                    <action selector="tapSettingsViewAction" destination="j2V-8m-LxX" eventType="touchUpInside" id="Eyn-b4-oZN"/>
+                                </connections>
+                            </button>
+                        </subviews>
+                        <color key="backgroundColor" white="0.0" alpha="0.0" colorSpace="calibratedWhite"/>
+                        <constraints>
+                            <constraint firstAttribute="width" constant="76" id="SOe-pv-6Rc"/>
+                            <constraint firstAttribute="height" constant="90" id="fao-pQ-UO4"/>
+                        </constraints>
+                    </view>
+                    <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="LJk-Az-t9t" userLabel="Left Spacer">
+                        <rect key="frame" x="23" y="218" width="76" height="90"/>
+                        <color key="backgroundColor" white="0.0" alpha="0.0" colorSpace="calibratedWhite"/>
+                    </view>
+                    <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="MS7-oC-IX3" userLabel="My Points">
+                        <rect key="frame" x="107" y="218" width="76" height="90"/>
+                        <subviews>
+                            <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" text="My" textAlignment="center" lineBreakMode="tailTruncation" numberOfLines="2" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="W2d-a6-VYV">
+                                <rect key="frame" x="0.0" y="65" width="76" height="10"/>
+                                <fontDescription key="fontDescription" type="system" pointSize="12"/>
+                                <color key="textColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
+                                <nil key="highlightedColor"/>
+                            </label>
+                            <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" text="Points" textAlignment="center" lineBreakMode="tailTruncation" numberOfLines="2" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="fzw-55-G2I">
+                                <rect key="frame" x="0.0" y="78" width="76" height="12"/>
+                                <fontDescription key="fontDescription" type="system" pointSize="12"/>
+                                <color key="textColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
+                                <nil key="highlightedColor"/>
+                            </label>
+                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="N7H-53-Vw8">
+                                <rect key="frame" x="8" y="0.0" width="60" height="60"/>
+                                <color key="backgroundColor" red="0.37647058820000001" green="0.12549019610000001" blue="0.46666666670000001" alpha="1" colorSpace="calibratedRGB"/>
+                                <inset key="contentEdgeInsets" minX="15" minY="18" maxX="15" maxY="15"/>
+                                <state key="normal" image="myPoints">
+                                    <color key="titleShadowColor" white="0.5" alpha="1" colorSpace="calibratedWhite"/>
+                                </state>
+                                <userDefinedRuntimeAttributes>
+                                    <userDefinedRuntimeAttribute type="number" keyPath="cornerRadius">
+                                        <real key="value" value="1"/>
+                                    </userDefinedRuntimeAttribute>
+                                </userDefinedRuntimeAttributes>
+                                <connections>
+                                    <action selector="tapMyPointsViewAction" destination="j2V-8m-LxX" eventType="touchUpInside" id="H3k-lw-bIF"/>
+                                </connections>
+                            </button>
+                        </subviews>
+                        <color key="backgroundColor" white="0.0" alpha="0.0" colorSpace="calibratedWhite"/>
+                        <constraints>
+                            <constraint firstAttribute="width" constant="76" id="Xc1-qh-mgJ"/>
+                            <constraint firstAttribute="height" constant="90" id="qmh-yQ-IfY"/>
+                        </constraints>
+                    </view>
+                    <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="xfp-UQ-hN7" userLabel="Right Spacer">
+                        <rect key="frame" x="275" y="218" width="76" height="90"/>
+                        <color key="backgroundColor" white="0.0" alpha="0.0" colorSpace="calibratedWhite"/>
+                    </view>
                 </subviews>
                 <constraints>
-                    <constraint firstItem="L9S-VP-xCl" firstAttribute="top" secondItem="maW-XZ-E3Q" secondAttribute="bottom" constant="30" id="053-eh-bJO"/>
-                    <constraint firstItem="66z-i9-nDa" firstAttribute="top" secondItem="H2p-sc-9uM" secondAttribute="top" id="4hr-1S-JTN"/>
-                    <constraint firstItem="maW-XZ-E3Q" firstAttribute="top" secondItem="66z-i9-nDa" secondAttribute="bottom" constant="25" id="BSF-3o-oKg"/>
-                    <constraint firstItem="maW-XZ-E3Q" firstAttribute="top" secondItem="66z-i9-nDa" secondAttribute="bottom" constant="25" id="GBP-JP-aAl"/>
-                    <constraint firstAttribute="centerX" secondItem="maW-XZ-E3Q" secondAttribute="centerX" id="Gig-dE-QxI"/>
-                    <constraint firstAttribute="trailing" secondItem="66z-i9-nDa" secondAttribute="trailing" id="GtZ-jq-rjR"/>
-                    <constraint firstAttribute="centerX" secondItem="L9S-VP-xCl" secondAttribute="centerX" id="eJE-NR-AXI"/>
-                    <constraint firstItem="L9S-VP-xCl" firstAttribute="top" secondItem="maW-XZ-E3Q" secondAttribute="bottom" constant="30" id="m2m-02-Jv7"/>
-                    <constraint firstAttribute="bottomMargin" secondItem="L9S-VP-xCl" secondAttribute="bottom" constant="86" id="oxP-1g-JCz"/>
-                    <constraint firstItem="66z-i9-nDa" firstAttribute="leading" secondItem="H2p-sc-9uM" secondAttribute="leading" id="qwb-o2-RxD"/>
+                    <constraint firstItem="fwf-kM-RU9" firstAttribute="top" secondItem="Fzf-I7-wQV" secondAttribute="bottom" constant="40" id="0Po-2v-T0u"/>
+                    <constraint firstItem="MS7-oC-IX3" firstAttribute="leading" secondItem="LJk-Az-t9t" secondAttribute="trailing" constant="8" id="1xy-OW-65D"/>
+                    <constraint firstAttribute="bottomMargin" secondItem="xfp-UQ-hN7" secondAttribute="bottom" constant="83" id="2CI-xa-grP"/>
+                    <constraint firstAttribute="trailingMargin" secondItem="xfp-UQ-hN7" secondAttribute="trailing" constant="16" id="2KN-Ry-d3d"/>
+                    <constraint firstAttribute="centerX" secondItem="pCN-OU-UYC" secondAttribute="centerX" id="3Bi-R1-GtD"/>
+                    <constraint firstItem="gu4-id-Cgq" firstAttribute="leading" secondItem="meK-1n-TMy" secondAttribute="leading" id="FGt-OE-F0G"/>
+                    <constraint firstItem="LJk-Az-t9t" firstAttribute="leading" secondItem="meK-1n-TMy" secondAttribute="leadingMargin" constant="15" id="MYF-Xs-x11"/>
+                    <constraint firstItem="MS7-oC-IX3" firstAttribute="top" secondItem="pCN-OU-UYC" secondAttribute="bottom" constant="40" id="MgS-6L-ocR"/>
+                    <constraint firstItem="fwf-kM-RU9" firstAttribute="leading" secondItem="MS7-oC-IX3" secondAttribute="trailing" constant="8" id="N4N-eQ-tRT"/>
+                    <constraint firstItem="gu4-id-Cgq" firstAttribute="top" secondItem="meK-1n-TMy" secondAttribute="top" id="NOd-nF-pxf"/>
+                    <constraint firstItem="MS7-oC-IX3" firstAttribute="leading" secondItem="LJk-Az-t9t" secondAttribute="trailing" constant="8" id="Nws-mV-dY4"/>
+                    <constraint firstItem="pCN-OU-UYC" firstAttribute="top" secondItem="gu4-id-Cgq" secondAttribute="bottom" constant="18" id="UcH-0u-ea6"/>
+                    <constraint firstAttribute="bottomMargin" secondItem="LJk-Az-t9t" secondAttribute="bottom" constant="83" id="Vb5-xO-7yr"/>
+                    <constraint firstItem="pCN-OU-UYC" firstAttribute="leading" secondItem="8qb-Uh-aRG" secondAttribute="trailing" constant="8" id="XBh-zf-dB0"/>
+                    <constraint firstItem="xfp-UQ-hN7" firstAttribute="leading" secondItem="fwf-kM-RU9" secondAttribute="trailing" constant="8" id="ZHM-Sg-eeE"/>
+                    <constraint firstItem="fwf-kM-RU9" firstAttribute="leading" secondItem="MS7-oC-IX3" secondAttribute="trailing" constant="8" id="Zlf-Jc-rwv"/>
+                    <constraint firstItem="Fzf-I7-wQV" firstAttribute="leading" secondItem="pCN-OU-UYC" secondAttribute="trailing" constant="8" id="cf6-Xs-Nan"/>
+                    <constraint firstAttribute="trailing" secondItem="gu4-id-Cgq" secondAttribute="trailing" id="dso-Zc-EOp"/>
+                    <constraint firstItem="LJk-Az-t9t" firstAttribute="width" secondItem="xfp-UQ-hN7" secondAttribute="width" id="gTu-YL-be8"/>
+                    <constraint firstItem="Fzf-I7-wQV" firstAttribute="top" secondItem="gu4-id-Cgq" secondAttribute="bottom" constant="18" id="h3i-bn-DMP"/>
+                    <constraint firstItem="xfp-UQ-hN7" firstAttribute="leading" secondItem="fwf-kM-RU9" secondAttribute="trailing" constant="8" id="lTc-mM-im9"/>
+                    <constraint firstAttribute="bottomMargin" secondItem="MS7-oC-IX3" secondAttribute="bottom" constant="83" id="mX5-BV-9nT"/>
+                    <constraint firstAttribute="bottomMargin" secondItem="fwf-kM-RU9" secondAttribute="bottom" constant="83" id="ngG-Zz-A3b"/>
+                    <constraint firstItem="xfp-UQ-hN7" firstAttribute="top" secondItem="Fzf-I7-wQV" secondAttribute="bottom" constant="40" id="pKP-Ki-cVq"/>
+                    <constraint firstItem="8qb-Uh-aRG" firstAttribute="top" secondItem="gu4-id-Cgq" secondAttribute="bottom" constant="18" id="yTz-kO-fEx"/>
+                    <constraint firstItem="LJk-Az-t9t" firstAttribute="top" secondItem="8qb-Uh-aRG" secondAttribute="bottom" constant="40" id="zpa-kn-3Kw"/>
                 </constraints>
             </tableViewCellContentView>
             <connections>
-                <outlet property="activityLogView" destination="Uqx-Rm-m9P" id="0tj-FW-qye"/>
-                <outlet property="editProfileView" destination="sR5-DB-q6h" id="dlR-XY-MuZ"/>
-                <outlet property="followingLabel" destination="i0B-8a-R37" id="p3Z-kz-4kL"/>
-                <outlet property="myPointsView" destination="mTK-JG-jeA" id="Msa-hE-6nN"/>
-                <outlet property="settingsView" destination="zGI-fW-f9V" id="WU4-rk-tHZ"/>
-                <outlet property="transactionsLabel" destination="O5W-Kv-PRr" id="cGA-tW-IjX"/>
-                <outlet property="transactionsView" destination="lts-1R-Tyh" id="YED-kl-RRD"/>
+                <outlet property="activityLogButton" destination="cPN-6e-0ak" id="zeC-nE-Tkk"/>
+                <outlet property="activityLogView" destination="Fzf-I7-wQV" id="hPr-7t-5dx"/>
+                <outlet property="editProfileButton" destination="H7e-dQ-Xgm" id="EH0-ct-gac"/>
+                <outlet property="editProfileView" destination="8qb-Uh-aRG" id="9A1-R3-MaH"/>
+                <outlet property="myPointsButton" destination="N7H-53-Vw8" id="ZxB-D4-Hvm"/>
+                <outlet property="myPointsView" destination="MS7-oC-IX3" id="mM0-vb-pfi"/>
+                <outlet property="settingsButton" destination="K6V-ck-cVR" id="BKN-dG-Wh0"/>
+                <outlet property="settingsView" destination="fwf-kM-RU9" id="dvg-2b-qH4"/>
+                <outlet property="transactionsButton" destination="gfO-lN-4H6" id="j5w-Zc-VHS"/>
+                <outlet property="transactionsView" destination="pCN-OU-UYC" id="7gK-Jt-VOa"/>
             </connections>
-            <point key="canvasLocation" x="281.5" y="305"/>
+            <point key="canvasLocation" x="254.5" y="742"/>
         </tableViewCell>
     </objects>
     <resources>
diff --git a/YiLinkerOnlineBuyer/resources/View/ShipToTableViewCell.swift b/YiLinkerOnlineBuyer/resources/View/ShipToTableViewCell.swift
index 8346d3f..1bbb18f 100644
--- a/YiLinkerOnlineBuyer/resources/View/ShipToTableViewCell.swift
+++ b/YiLinkerOnlineBuyer/resources/View/ShipToTableViewCell.swift
@@ -14,6 +14,7 @@ protocol ShipToTableViewCellDelegate {
 
 class ShipToTableViewCell: UITableViewCell {
 
+    @IBOutlet weak var addressLabel: UILabel!
     @IBOutlet weak var changeAddressLabel: UILabel!
     @IBOutlet weak var defaultAddressLabel: UILabel!
     @IBOutlet weak var fakeContainerView: UIView!
diff --git a/YiLinkerOnlineBuyer/resources/ViewController/ActivityLogTableViewController.swift b/YiLinkerOnlineBuyer/resources/ViewController/ActivityLogTableViewController.swift
index 792ee9c..e552c7d 100644
--- a/YiLinkerOnlineBuyer/resources/ViewController/ActivityLogTableViewController.swift
+++ b/YiLinkerOnlineBuyer/resources/ViewController/ActivityLogTableViewController.swift
@@ -19,6 +19,8 @@ class ActivityLogTableViewController: UITableViewController {
         super.viewDidLoad()
 
         initializeViews()
+        titleView()
+        backButton()
         registerNibs()
     }
 
@@ -38,6 +40,27 @@ class ActivityLogTableViewController: UITableViewController {
         self.tableView.estimatedRowHeight = 75.0
     }
     
+    func titleView() {
+        self.title = "Activity Log"
+    }
+    
+    func backButton() {
+        var backButton:UIButton = UIButton.buttonWithType(UIButtonType.Custom) as! UIButton
+        backButton.frame = CGRectMake(0, 0, 40, 40)
+        backButton.addTarget(self, action: "back", forControlEvents: UIControlEvents.TouchUpInside)
+        backButton.setImage(UIImage(named: "back-white"), forState: UIControlState.Normal)
+        var customBackButton:UIBarButtonItem = UIBarButtonItem(customView: backButton)
+        
+        let navigationSpacer: UIBarButtonItem = UIBarButtonItem(barButtonSystemItem: UIBarButtonSystemItem.FixedSpace, target: nil, action: nil)
+        navigationSpacer.width = -20
+        self.navigationItem.leftBarButtonItems = [navigationSpacer, customBackButton]
+    }
+    
+    func back() {
+        self.navigationController!.popViewControllerAnimated(true)
+    }
+
+    
     func registerNibs() {
         var nib = UINib(nibName: "ActivityLogTableViewCell", bundle: nil)
         tableView.registerNib(nib, forCellReuseIdentifier: "ActivityLogTableViewCell")
diff --git a/YiLinkerOnlineBuyer/resources/ViewController/AddAddressTableViewController.swift b/YiLinkerOnlineBuyer/resources/ViewController/AddAddressTableViewController.swift
index f5dc204..90dc3f7 100644
--- a/YiLinkerOnlineBuyer/resources/ViewController/AddAddressTableViewController.swift
+++ b/YiLinkerOnlineBuyer/resources/ViewController/AddAddressTableViewController.swift
@@ -12,17 +12,28 @@ protocol AddAddressTableViewControllerDelegate {
     func addAddressTableViewController(didAddAddressSucceed addAddressTableViewController: AddAddressTableViewController)
 }
 
-class AddAddressTableViewController: UITableViewController, UITableViewDelegate, UITableViewDataSource, NewAddressTableViewCellDelegate {
+class AddAddressTableViewController: UITableViewController, UITableViewDelegate, UITableViewDataSource, NewAddressTableViewCellDelegate, UIPickerViewDataSource, UIPickerViewDelegate {
     
     let titles: [String] = ["Address Title:", "Unit No.:", "Building Name:", "Street No.:", "Street Name:", "Subdivision:", "Province:", "City:", "Barangay:", "Zip Code:", "Additional Info:"]
     
     var delegate: AddAddressTableViewControllerDelegate?
     
+    let manager = APIManager.sharedInstance
+    var provinceModel: ProvinceModel!
+    var cityModel: CityModel!
+    var barangayModel: BarangayModel!
+    
+    var idProvince: Int = 0
+    var idCity: Int = 0
+    var activeTextField: Int = 0
+    
     override func viewDidLoad() {
         super.viewDidLoad()
         self.registerNib()
         self.backButton()
         self.tableView.separatorStyle = UITableViewCellSeparatorStyle.None
+        
+        requestGetProvince()
     }
     
     func registerNib() {
@@ -33,22 +44,31 @@ class AddAddressTableViewController: UITableViewController, UITableViewDelegate,
     override func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {
         let cell: NewAddressTableViewCell = self.tableView.dequeueReusableCellWithIdentifier(Constants.Checkout.newAddressTableViewCellNibNameAndIdentifier) as! NewAddressTableViewCell
         cell.rowTitleLabel.text = titles[indexPath.row]
+        cell.tag = indexPath.row
         cell.delegate = self
-        
+        cell.rowTextField.addToolBarWithTarget(self, next: "next", previous: "previous", done: "done")
         if indexPath.row == 0 {
             cell.rowTextField.becomeFirstResponder()
         }
         
+        if indexPath.row == 6 || indexPath.row == 7 || indexPath.row == 8 {
+            
+            let screenSize: CGRect = UIScreen.mainScreen().bounds
+            let pickerView: UIPickerView = UIPickerView(frame:CGRectMake(0, 0, screenSize.width, 225))
+            pickerView.delegate = self
+            pickerView.dataSource = self
+            cell.rowTextField.inputView = pickerView
+        }
+        
         return cell
     }
     
     override func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
         return self.titles.count
     }
-
-    override func didReceiveMemoryWarning() {
-        super.didReceiveMemoryWarning()
-        // Dispose of any resources that can be recreated.
+    
+    override func tableView(tableView: UITableView, didSelectRowAtIndexPath indexPath: NSIndexPath) {
+        println(indexPath.row)
     }
     
     func newAddressTableViewCell(didClickNext newAddressTableViewCell: NewAddressTableViewCell) {
@@ -76,6 +96,18 @@ class AddAddressTableViewController: UITableViewController, UITableViewDelegate,
         }
     }
     
+    func newAddressTableViewCell(didBeginEditing newAddressTableViewCell: NewAddressTableViewCell, index: Int) {
+        activeTextField = index
+        
+        if index == 6 && self.provinceModel != nil {
+            setTextAtIndex(6, text: self.provinceModel.location[0])
+        } else if index == 7 && self.cityModel != nil {
+            setTextAtIndex(7, text: self.cityModel.location[0])
+        } else if index == 8 && self.barangayModel != nil {
+            setTextAtIndex(8, text: self.barangayModel.location[0])
+        }
+    }
+    
     func backButton() {
         var backButton:UIButton = UIButton.buttonWithType(UIButtonType.Custom) as! UIButton
         backButton.frame = CGRectMake(0, 0, 40, 40)
@@ -89,7 +121,7 @@ class AddAddressTableViewController: UITableViewController, UITableViewDelegate,
         
         var checkButton:UIButton = UIButton.buttonWithType(UIButtonType.Custom) as! UIButton
         checkButton.frame = CGRectMake(0, 0, 25, 25)
-        checkButton.addTarget(self, action: "done", forControlEvents: UIControlEvents.TouchUpInside)
+        checkButton.addTarget(self, action: "check", forControlEvents: UIControlEvents.TouchUpInside)
         checkButton.setImage(UIImage(named: "check-white"), forState: UIControlState.Normal)
         var customCheckButton:UIBarButtonItem = UIBarButtonItem(customView: checkButton)
         
@@ -103,8 +135,249 @@ class AddAddressTableViewController: UITableViewController, UITableViewDelegate,
         self.navigationController!.popViewControllerAnimated(true)
     }
     
+    func check() {
+//        self.endEditing(true)
+        var filledUpAllFields: Bool = true
+        for i in 0..<10 {
+            if getTextAtIndex(i) == "" {
+                filledUpAllFields = false
+            }
+        }
+        
+        if filledUpAllFields {
+            requestAddAddress()
+        } else {
+            showAlert(title: "Error", message: "All text fields must be filled up.")
+        }
+
+    }
+    
     func done() {
-        self.delegate!.addAddressTableViewController(didAddAddressSucceed: self)
-        self.navigationController!.popViewControllerAnimated(true)
+        let row = NSIndexPath(forItem: activeTextField, inSection: 0)
+        let cell: NewAddressTableViewCell = tableView.cellForRowAtIndexPath(row) as! NewAddressTableViewCell
+        cell.rowTextField.endEditing(true)
+        
+        if activeTextField == 6 && getTextAtIndex(activeTextField) != "" {
+            requestGetCities(idProvince)
+        } else if activeTextField == 7 && getTextAtIndex(activeTextField) != "" {
+            requestGetBarangay(idCity)
+        }
+        
+
+    }
+    
+    func getTextAtIndex(index: Int) -> String {
+        let row = NSIndexPath(forItem: index, inSection: 0)
+        let cell: NewAddressTableViewCell = tableView.cellForRowAtIndexPath(row) as! NewAddressTableViewCell
+        return cell.rowTextField.text
+    }
+    
+    func setTextAtIndex(index: Int, text: String) {
+        let row = NSIndexPath(forItem: index, inSection: 0)
+        let cell: NewAddressTableViewCell = tableView.cellForRowAtIndexPath(row) as! NewAddressTableViewCell
+        cell.rowTextField.text = text
+    }
+    
+    func showAlert(#title: String!, message: String!) {
+        let alertController = UIAlertController(title: title, message: message, preferredStyle: .Alert)
+        let defaultAction = UIAlertAction(title: "OK", style: .Default, handler: nil)
+        alertController.addAction(defaultAction)
+        presentViewController(alertController, animated: true, completion: nil)
+    }
+    
+    // MARK: - Requests
+    
+    func requestAddAddress() {
+        SVProgressHUD.show()
+        
+        let url = "http://online.api.easydeal.ph/api/v1/auth/address/addNewAddress"
+        let params = ["access_token": /*SessionManager.accessToken()*/"NmUxZjU5NjZjODdhYWZmMjY0NDE4YmI0YzQwMDc0NzIzYTM4MzI1NWJiMGFkNTNmNWM2N2ZiMzQyNGFlMGQ1Yg",
+            "title": getTextAtIndex(0),
+            "unitNumber": getTextAtIndex(1),
+            "buildingName": getTextAtIndex(2),
+            "streetNumber": getTextAtIndex(3),
+            "streetName": getTextAtIndex(4),
+            "subdivision": getTextAtIndex(5),
+            "province": getTextAtIndex(6),
+            "city": getTextAtIndex(7),
+            "barangay": getTextAtIndex(8),
+            "zipCode": getTextAtIndex(9),
+            "addtionalInfo": getTextAtIndex(10),
+        ]
+        
+        manager.POST(url, parameters: params, success: {
+            (task: NSURLSessionDataTask!, responseObject: AnyObject!) in
+            
+            self.showAlert(title: "Address successfully added", message: nil)
+            SVProgressHUD.dismiss()
+            self.delegate!.addAddressTableViewController(didAddAddressSucceed: self)
+            self.navigationController!.popViewControllerAnimated(true)
+
+            }, failure: {
+                (task: NSURLSessionDataTask!, error: NSError!) in
+                println(error)
+                let task: NSHTTPURLResponse = task.response as! NSHTTPURLResponse
+                if task.statusCode == 401 {
+                    self.requestRefreshToken("add")
+                } else {
+                    self.showAlert(title: "Something went wrong", message: nil)
+                    SVProgressHUD.dismiss()
+                }
+        })
+    }
+    
+    func requestRefreshToken(type: String) {
+        let url: String = "http://online.api.easydeal.ph/api/v1/login"
+        let params: NSDictionary = ["client_id": Constants.Credentials.clientID,
+            "client_secret": Constants.Credentials.clientSecret,
+            "grant_type": Constants.Credentials.grantRefreshToken,
+            "refresh_token": SessionManager.refreshToken()]
+        
+        let manager = APIManager.sharedInstance
+        manager.POST(url, parameters: params, success: {
+            (task: NSURLSessionDataTask!, responseObject: AnyObject!) in
+            
+            if type == "add" {
+                self.requestAddAddress()
+            } else if type == "update" {
+                
+            }
+            
+            }, failure: {
+                (task: NSURLSessionDataTask!, error: NSError!) in
+                SVProgressHUD.dismiss()
+                let alertController = UIAlertController(title: "Something went wrong", message: "", preferredStyle: .Alert)
+                let defaultAction = UIAlertAction(title: "OK", style: .Default, handler: nil)
+                alertController.addAction(defaultAction)
+                self.presentViewController(alertController, animated: true, completion: nil)
+        })
+    }
+    
+    func requestGetProvince() {
+        let url: String = "http://online.api.easydeal.ph/api/v1/location/getAllProvinces"
+        let manager = APIManager.sharedInstance
+        
+        manager.POST(url, parameters: nil, success: {
+            (task: NSURLSessionDataTask!, responseObject: AnyObject!) in
+            
+            self.provinceModel = ProvinceModel.parseDataWithDictionary(responseObject)
+            println(self.provinceModel.location)
+            
+            }, failure: {
+                (task: NSURLSessionDataTask!, error: NSError!) in
+                SVProgressHUD.dismiss()
+                self.showAlert(title: "Something went wrong", message: nil)
+        })
+    }
+    
+    func requestGetCities(id: Int) {
+        let url: String = "http://online.api.easydeal.ph/api/v1/location/getChildCities"
+        let manager = APIManager.sharedInstance
+        let params = ["provinceId": String(id)]
+        
+        manager.POST(url, parameters: params, success: {
+            (task: NSURLSessionDataTask!, responseObject: AnyObject!) in
+            
+            self.cityModel = CityModel.parseDataWithDictionary(responseObject)
+            println(self.cityModel.location)
+            
+            }, failure: {
+                (task: NSURLSessionDataTask!, error: NSError!) in
+                SVProgressHUD.dismiss()
+                self.showAlert(title: "Something went wrong", message: nil)
+        })
+    }
+    
+    func requestGetBarangay(id: Int) {
+        let url: String = "http://online.api.easydeal.ph/api/v1/location/getBarangaysByCity"
+        let manager = APIManager.sharedInstance
+        let params = ["cityId": String(id)]
+        
+        manager.POST(url, parameters: params, success: {
+            (task: NSURLSessionDataTask!, responseObject: AnyObject!) in
+            
+            self.barangayModel = BarangayModel.parseDataWithDictionary(responseObject)
+            println(self.barangayModel.location)
+            
+            }, failure: {
+                (task: NSURLSessionDataTask!, error: NSError!) in
+                SVProgressHUD.dismiss()
+                self.showAlert(title: "Something went wrong", message: nil)
+        })
+    }
+    
+    // MARK: - Picker
+    
+    func addPicker() {
+        let screenSize: CGRect = UIScreen.mainScreen().bounds
+        
+        let pickerView: UIPickerView = UIPickerView(frame:CGRectMake(0, 0, screenSize.width, 225))
+        pickerView.delegate = self
+        pickerView.dataSource = self
+//        self.attributeTextField.inputView = pickerView
+    }
+    
+    func pickerView(pickerView: UIPickerView, didSelectRow row: Int, inComponent component: Int) {
+        if activeTextField == 6 {
+            setTextAtIndex(6, text: self.provinceModel.location[row])
+            idProvince = self.provinceModel.provinceId[row]
+        } else if activeTextField == 7 {
+            setTextAtIndex(7, text: self.cityModel.location[row])
+            idCity = self.cityModel.cityId[row]
+        } else if activeTextField == 8 {
+            setTextAtIndex(8, text: self.barangayModel.location[row])
+        }
+    }
+    
+    func numberOfComponentsInPickerView(pickerView: UIPickerView) -> Int {
+        return 1
+    }
+    
+    func pickerView(pickerView: UIPickerView, numberOfRowsInComponent component: Int) -> Int {
+        if activeTextField == 6 && self.provinceModel != nil {
+            return self.provinceModel.location.count
+        } else if activeTextField == 7 && self.cityModel != nil {
+            return self.cityModel.location.count
+        } else if activeTextField == 8 && self.barangayModel != nil  {
+            return self.barangayModel.location.count
+        }
+        
+        return 0
+    }
+    
+    func pickerView(pickerView: UIPickerView, titleForRow row: Int, forComponent component: Int) -> String! {
+        if activeTextField == 6 {
+            return self.provinceModel.location[row]
+        } else if activeTextField == 7 {
+            return self.cityModel.location[row]
+        } else if activeTextField == 8 {
+            return self.barangayModel.location[row]
+        }
+        
+        return ""
+    }
+    
+    // MARK: - Keyboard Toolbar Actions 
+    
+    func next() {
+        
+        if activeTextField + 1 != self.titles.count {
+            let indexPath = NSIndexPath(forItem: activeTextField + 1, inSection: 0)
+            let cell: NewAddressTableViewCell = tableView.cellForRowAtIndexPath(indexPath) as! NewAddressTableViewCell
+            cell.rowTextField.becomeFirstResponder()
+        } else {
+            self.tableView.endEditing(true)
+        }
+    }
+    
+    func previous() {
+        if activeTextField - 1 != self.titles.count {
+            let indexPath = NSIndexPath(forItem: activeTextField - 1, inSection: 0)
+            let cell: NewAddressTableViewCell = tableView.cellForRowAtIndexPath(indexPath) as! NewAddressTableViewCell
+            cell.rowTextField.becomeFirstResponder()
+        } else {
+            self.tableView.endEditing(true)
+        }
     }
+
 }
diff --git a/YiLinkerOnlineBuyer/resources/ViewController/CartProductAttributeViewController.swift b/YiLinkerOnlineBuyer/resources/ViewController/CartProductAttributeViewController.swift
index e6bf4ac..433d4fc 100644
--- a/YiLinkerOnlineBuyer/resources/ViewController/CartProductAttributeViewController.swift
+++ b/YiLinkerOnlineBuyer/resources/ViewController/CartProductAttributeViewController.swift
@@ -13,7 +13,7 @@ protocol CartProductAttributeViewControllerDelegate {
     func pressedDoneAttribute(controller: CartProductAttributeViewController)
 }
 
-class CartProductAttributeViewController: UIViewController, UITableViewDelegate, ProductAttributeTableViewCellDelegate {
+class CartProductAttributeViewController: UIViewController, UITableViewDelegate, CartProductAttributeTableViewCellDelegate {
     
     var manager = APIManager()
     
@@ -35,12 +35,14 @@ class CartProductAttributeViewController: UIViewController, UITableViewDelegate,
     var maximumStock = 1
     var stocks: Int = 0
     
-    var cartModel : CartModel?
     var productDetailModel: CartProductDetailsModel?
-    var attributes: [ProductAttributeModel] = []
-    var availableCombinations: [ProductAvailableAttributeCombinationModel] = []
-    var selectedValue: [String] = []
-    var selectedCombination: [Int] = []
+    var selectedProductUnit: ProductUnitsModel!
+    
+    var availableCombinations = [String: [String]]()
+    
+    var selectedCombinations: [String] = []
+    
+    var unitIDs: [String] = []
     
     override func viewDidLoad() {
         super.viewDidLoad()
@@ -49,8 +51,8 @@ class CartProductAttributeViewController: UIViewController, UITableViewDelegate,
         stocksLabel.layer.borderColor = UIColor.grayColor().CGColor
         stocksLabel.layer.cornerRadius = 5
         
-        let nib = UINib(nibName: "ProductAttributeTableViewCell", bundle: nil)
-        self.tableView.registerNib(nib, forCellReuseIdentifier: "AttributeTableCell")
+        let nib = UINib(nibName: "CartProductAttributeTableViewCell", bundle: nil)
+        self.tableView.registerNib(nib, forCellReuseIdentifier: "CartProductAttributeTableViewCell")
         
         let tap = UITapGestureRecognizer()
         tap.numberOfTapsRequired = 1
@@ -63,10 +65,10 @@ class CartProductAttributeViewController: UIViewController, UITableViewDelegate,
         
         var params = Dictionary<String, String>()
         
-        params["access_token"] = "access_token"
-        params["productId"] = "\(cartModel?.productDetails.id)"
-        params["unitId"] = "\(cartModel?.unitId)"
-        params["quantity"] = "\(quantity)"
+        params["access_token"] = SessionManager.accessToken()
+        params["productId"] = "\(productDetailModel?.id)"
+        params["unitId"] = "\(productDetailModel?.unitId)"
+        params["quantity"] = "\(productDetailModel?.quantity)"
         
         showLoader()
         manager.GET(url, parameters: params, success: {
@@ -88,18 +90,15 @@ class CartProductAttributeViewController: UIViewController, UITableViewDelegate,
     // MARK: - Table View Data Source
     
     func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
-        return attributes.count
+        return productDetailModel!.attributes.count
     }
     
     func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {
-        let cell: ProductAttributeTableViewCell = self.tableView.dequeueReusableCellWithIdentifier("AttributeTableCell") as! ProductAttributeTableViewCell
-        
-//        cell.delegate = self
-//        cell.passAvailableCombination(availableCombinations)
-        
-//        cell.tag = indexPath.row
-//        cell.setAttribute(name: attributes[indexPath.row].attributeName, values: attributes[indexPath.row].valueName, id: attributes[indexPath.row].valueId, selectedValue: selectedValue)
+        let cell: CartProductAttributeTableViewCell = self.tableView.dequeueReusableCellWithIdentifier("CartProductAttributeTableViewCell") as! CartProductAttributeTableViewCell
         
+        var productAttribute: ProductAttributeModel = productDetailModel!.attributes[indexPath.row]
+        cell.delegate = self
+        cell.passModel(productAttribute, selectedProductUnit: selectedProductUnit, availableCombination: availableCombinations, unitID: unitIDs)
         return cell
     }
     
@@ -121,8 +120,6 @@ class CartProductAttributeViewController: UIViewController, UITableViewDelegate,
     
     @IBAction func cancelAction(sender: AnyObject!) {
         self.dismissViewControllerAnimated(true, completion: nil)
-        println(attributes.count)
-        println(availableCombinations.count)
         if let delegate = self.delegate {
             delegate.pressedCancelAttribute(self)
         }
@@ -134,42 +131,79 @@ class CartProductAttributeViewController: UIViewController, UITableViewDelegate,
     
     // MARK: - Methods
     
-    func passModel(#cartModel: CartModel, combinationModel: [ProductAvailableAttributeCombinationModel], selectedValue: NSArray, quantity: Int) {
-        //setDetail("\(cartModel.productDetails.image)", title: cartModel.productDetails.title, price: cartModel.productDetails.newPrice)
-        self.cartModel = cartModel
-        self.attributes = cartModel.productDetails.attributes as [ProductAttributeModel]
-        self.availableCombinations = combinationModel
-        self.selectedValue = selectedValue as! [String]
-        self.selectedCombination = combinationModel[0].combination
-        self.maximumStock = combinationModel[0].quantity
+    func passModel(#cartModel: CartProductDetailsModel, selectedProductUnits: ProductUnitsModel) {
+        productDetailModel = cartModel
+        setDetail(productDetailModel!.image, title: productDetailModel!.title, price: selectedProductUnits.discountedPrice)
+        self.maximumStock = selectedProductUnits.quantity
+        stocks = cartModel.quantity
+        checkStock(stocks)
+        selectedProductUnit = selectedProductUnits
+        self.availabilityStocksLabel.text = "Available stocks : " + String(maximumStock)
         
-        stocks = quantity
+        selectedCombinations = selectedProductUnit.combination
         
-        checkStock(stocks)
+        getAvailableCombinations()
     }
     
-    func selectedAttribute(controller: ProductAttributeTableViewCell, attributeIndex: Int, attributeValue: String!, attributeId: Int) {
-        stocks = 0
-        checkStock(stocks)
-        self.selectedValue[attributeIndex + 1] = String(attributeValue)
-//        self.selectedCombination[attributeIndex] = attributeId
-        
-        maximumStock = availableStock(selectedCombination)
-        self.availabilityStocksLabel.text = "Available stocks : " + String(availableStock(selectedCombination))
-        
-        checkStock(stocks)
+    func selectedAttribute(attributeId: String){
+        println(selectedCombinations)
+        if !contains(selectedCombinations, attributeId) {
+            selectedCombinations.append(attributeId)
+            println(checkSelectedIfAvailable(selectedCombinations))
+            updateDetails(checkSelectedIfAvailable(selectedCombinations))
+        }
+        println(selectedCombinations)
     }
     
-    func availableStock(combination: NSArray) -> Int {
-        
-        for i in 0..<availableCombinations.count {
-            println(selectedCombination)
-            if availableCombinations[i].combination == selectedCombination {
-                println("benga! > \(availableCombinations[i].quantity)")
-                return availableCombinations[i].quantity
+    func deselectedAttribute(attributeId: String) {
+        println(selectedCombinations)
+        for var i = 0; i < selectedCombinations.count; i++ {
+            if selectedCombinations[i] == attributeId {
+                selectedCombinations.removeAtIndex(i)
+                break
             }
         }
-        return 0
+        updateDetails(checkSelectedIfAvailable(selectedCombinations))
+        println(selectedCombinations)
+    }
+    
+    func getAvailableCombinations() {
+        for var i = 0; i < productDetailModel!.productUnits.count; i++ {
+            unitIDs.append(productDetailModel!.productUnits[i].productUnitId)
+            availableCombinations[productDetailModel!.productUnits[i].productUnitId] = productDetailModel!.productUnits[i].combination
+        }
+    }
+    
+    func checkSelectedIfAvailable(selectedValues: [String]) -> String {
+        var checker: [Bool] = []
+        for var i = 0; i < availableCombinations.count; i++ {
+            let tempProductUnitId: String = self.productDetailModel!.productUnits[i].productUnitId
+            if sorted(selectedValues, <) == sorted(availableCombinations[tempProductUnitId]!, <) {
+                return tempProductUnitId
+            }
+        }
+        return ""
+    }
+    
+    func updateDetails(unitId: String) {
+        if !unitId.isEmpty {
+            for tempProductUnit in productDetailModel!.productUnits {
+                if unitId == tempProductUnit.productUnitId {
+                    selectedProductUnit = tempProductUnit
+                }
+            }
+            
+            self.maximumStock = selectedProductUnit.quantity
+            stocks = productDetailModel!.quantity
+            checkStock(stocks)
+            self.availabilityStocksLabel.text = "Available stocks : " + String(maximumStock)
+        } else {
+            self.maximumStock = 0
+            stocks = 0
+            checkStock(stocks)
+            self.availabilityStocksLabel.text = "Available stocks : " + String(0)
+        }
+        
     }
     
     func checkStock(stocks: Int) {
@@ -180,11 +214,11 @@ class CartProductAttributeViewController: UIViewController, UITableViewDelegate,
             stocksLabel.text = String(stringInterpolationSegment: stocks)
         }
         
-        if stocks == 0  && maximumStock != 0 {
+        if stocks == 1  && maximumStock != 0 {
             enableButton(increaseButton)
             disableButton(decreaseButton)
             stocksLabel.alpha = 1.0
-        } else if stocks == 0  && maximumStock == 0{
+        } else if stocks == 1  && maximumStock == 0{
             stocksLabel.alpha = 0.3
             disableButton(increaseButton)
         } else if stocks == maximumStock {
@@ -199,11 +233,11 @@ class CartProductAttributeViewController: UIViewController, UITableViewDelegate,
         }
     }
     
-    func setDetail(image: String, title: String, price: Float) {
+    func setDetail(image: String, title: String, price: String) {
         
         productImageView.sd_setImageWithURL(NSURL(string: image), placeholderImage: UIImage(named: "dummy-placeholder"))
         nameLabel.text = title
-        priceLabel.text = String(format: "P %.2f", price)
+        priceLabel.text = price
     }
     
     func disableButton(button: UIButton) {
diff --git a/YiLinkerOnlineBuyer/resources/ViewController/CartViewController.swift b/YiLinkerOnlineBuyer/resources/ViewController/CartViewController.swift
index 20ca9aa..bcf317f 100644
--- a/YiLinkerOnlineBuyer/resources/ViewController/CartViewController.swift
+++ b/YiLinkerOnlineBuyer/resources/ViewController/CartViewController.swift
@@ -8,7 +8,7 @@
 
 import UIKit
 
-class CartViewController: UIViewController, UITableViewDelegate, UITableViewDataSource, CartTableViewCellDelegate, CartProductAttributeViewControllerDelegate {
+class CartViewController: UIViewController, UITableViewDelegate, UITableViewDataSource, CartTableViewCellDelegate, CartProductAttributeViewControllerDelegate, EmptyViewDelegate {
     
     var manager = APIManager()
     
@@ -20,12 +20,14 @@ class CartViewController: UIViewController, UITableViewDelegate, UITableViewData
     
     @IBOutlet var checkoutButton: UIButton!
     
-    var tableData: [CartModel] = []
+    var tableData: [CartProductDetailsModel] = []
     var selectedValue: [String] = []
     
     //formatter of Text to remove trailing decimal
     let formatter = NSNumberFormatter()
     
+     var emptyView: EmptyView?
+    
     override func viewDidLoad() {
         super.viewDidLoad()
         manager = APIManager.sharedInstance
@@ -50,117 +52,114 @@ class CartViewController: UIViewController, UITableViewDelegate, UITableViewData
     
     override func viewDidAppear(animated: Bool) {
         super.viewDidAppear(true)
+        if emptyView != nil {
+            emptyView?.hidden = true
+        }
+        NSNotificationCenter.defaultCenter().postNotificationName("SwipeForOptionsCellEnclosingTableViewDidBeginScrollingNotification", object: self)
+        getCartData()
         
-        populateWishListTableView()
     }
     
     @IBAction func buttonClicked(sender: AnyObject) {
     }
     
+    //REST API request
+    //
+    
+    func getCartData() {
+        tableData = []
+        cartTableView.reloadData()
+        cartCounterLabel.text = ""
+        
+        if Reachability.isConnectedToNetwork() {
+            requestProductDetails(APIAtlas.cartUrl, params: NSDictionary(dictionary: ["access_token": SessionManager.accessToken()]))
+        } else {
+            addEmptyView()
+        }
+    }
+    
     func fireDeleteCartItem(url: String, params: NSDictionary!) {
         showLoader()
-        manager.DELETE(url, parameters: params, success: {
-                (task: NSURLSessionDataTask!, responseObject: AnyObject!) in
-                print(responseObject as! NSDictionary)
-                self.updateCounterLabel()
-                self.dismissLoader()
+        manager.POST(url, parameters: params, success: {
+            (task: NSURLSessionDataTask!, responseObject: AnyObject!) in print(responseObject as! NSDictionary)
+            if responseObject.objectForKey("error") != nil {
+                self.requestRefreshToken("getCart", url: url, params: params)
+            } else {
+                self.populateTableView(responseObject)
+            }
+            
             }, failure: {
                 (task: NSURLSessionDataTask!, error: NSError!) in
-                println("failed: \(error)")
+                UIAlertController.displayErrorMessageWithTarget(self, errorMessage: "Something went wrong. . .", title: "Error")
                 self.dismissLoader()
         })
     }
     
-    func requestProductDetails(url: String, params: NSDictionary!) {
+    func fireAddToCartItem(url: String, params: NSDictionary!) {
         showLoader()
-        manager.GET(url, parameters: params, success: {
-            (task: NSURLSessionDataTask!, responseObject: AnyObject!) in
-            //print(responseObject as! NSDictionary)
-            
-            if let value: AnyObject = responseObject["data"] {
-                for subValue in value["cartItems"] as! NSArray {
-                    
-                    let model: CartModel = CartModel.parseDataWithDictionary(subValue as! NSDictionary)
-                    
-                    self.tableData.append(model)
-                }
-                self.cartTableView.reloadData()
+        manager.POST(url, parameters: params, success: {
+            (task: NSURLSessionDataTask!, responseObject: AnyObject!) in print(responseObject as! NSDictionary)
+            if responseObject.objectForKey("error") != nil {
+                self.requestRefreshToken("editToCart", url: url, params: params)
             }
-            self.updateCounterLabel()
             self.dismissLoader()
-            
             }, failure: {
                 (task: NSURLSessionDataTask!, error: NSError!) in
-                println("failed: \(error)")
+                UIAlertController.displayErrorMessageWithTarget(self, errorMessage: "Something went wrong. . .", title: "Error")
                 self.dismissLoader()
         })
     }
     
-    func fireDeleteCartItem(url: String, index: Int!) {
-        
-        var params = Dictionary<String, String>()
-        
-        var cartModelTemp = tableData[index]
-        
-        params["access_token"] = "access_token"
-        params["productId"] = "\(cartModelTemp.productDetails.id)"
-        params["unitId"] = "\(cartModelTemp.unitId)"
-        params["quantity"] = "\(0)"
-        
+    func requestProductDetails(url: String, params: NSDictionary!) {
         showLoader()
+        
         manager.GET(url, parameters: params, success: {
-            (task: NSURLSessionDataTask!, responseObject: AnyObject!) in
-            self.dismissLoader()
-            self.populateWishListTableView()
+            (task: NSURLSessionDataTask!, responseObject: AnyObject!) in print(responseObject as! NSDictionary)
+            if responseObject.objectForKey("error") != nil {
+                self.requestRefreshToken("getCart", url: url, params: params)
+            } else {
+                self.populateTableView(responseObject)
+            }
             }, failure: {
                 (task: NSURLSessionDataTask!, error: NSError!) in
-                println("failed: \(error)")
+                UIAlertController.displayErrorMessageWithTarget(self, errorMessage: "Something went wrong. . .", title: "Error")
+                self.updateCounterLabel()
                 self.dismissLoader()
         })
     }
     
-    func seeMoreAttribute(index: Int) {
-        
-        var tempModel: CartModel = tableData[index]
-        
-        selectedValue = []
-        //selectedValue.append(String(tempModel.productDetails.combinations[0].quantity) + "x")
-        
-        var tempAttributeId: [Int] = []
-        var tempAttributeName: [String] = []
-        
-//        for tempAttribute in tempModel.productDetails.attributes{
-//            tempAttributeId += tempAttribute.valueId
-//            tempAttributeName += tempAttribute.valueName
-//        }
-        
-        for tempId in tempModel.selectedAttributes {
-            if let index = find(tempAttributeId, tempId) {
-                selectedValue.append(tempAttributeName[index])
+    func populateTableView(responseObject: AnyObject) {
+        tableData.removeAll(keepCapacity: false)
+        if let value: AnyObject = responseObject["data"] {
+            for subValue in value["items"] as! NSArray {
+                println(subValue)
+                let model: CartProductDetailsModel = CartProductDetailsModel.parseDataWithDictionary(subValue as! NSDictionary)
+                
+                self.tableData.append(model)
             }
+            self.cartTableView.reloadData()
         }
+        self.updateCounterLabel()
+        self.calculateTotalPrice()
+        self.dismissLoader()
         
-        println(selectedValue)
-        
-        var attributeModal = CartProductAttributeViewController(nibName: "CartProductAttributeViewController", bundle: nil)
-        attributeModal.delegate = self
-        attributeModal.modalPresentationStyle = UIModalPresentationStyle.OverCurrentContext
-        attributeModal.providesPresentationContextTransitionStyle = true
-        attributeModal.definesPresentationContext = true
-        attributeModal.view.backgroundColor = UIColor.clearColor()
-        attributeModal.view.frame.origin.y = attributeModal.view.frame.size.height
-       // attributeModal.passModel(cartModel: tableData[index], combinationModel: tempModel.productDetails.combinations, selectedValue: selectedValue, quantity: tempModel.quantity)
-        //        self.navigationController?.presentViewController(attributeModal, animated: true, completion: nil)
-        self.tabBarController?.presentViewController(attributeModal, animated: true, completion: nil)
-        
-        UIView.animateWithDuration(0.3, animations: {
-            self.dimView.alpha = 0.5
-            self.view.transform = CGAffineTransformMakeScale(0.92, 0.95)
-            self.navigationController?.navigationBar.alpha = 0.0
-        })
-
+        if tableData.count != 0 {
+            let badgeValue = (self.tabBarController!.tabBar.items![4] as! UITabBarItem).badgeValue?.toInt()
+            (self.tabBarController!.tabBar.items![4] as! UITabBarItem).badgeValue = String(tableData.count)
+        } else {
+            (self.tabBarController!.tabBar.items![4] as! UITabBarItem).badgeValue = nil
+        }
     }
     
+    func updateCounterLabel() {
+        if tableData.count < 2 {
+            cartCounterLabel.text = "You have \(tableData.count) item in your cart"
+        } else {
+            cartCounterLabel.text = "You have \(tableData.count) items in your cart"
+        }
+    }
+    
+    
     //Loader function
     func showLoader() {
         SVProgressHUD.show()
@@ -171,31 +170,24 @@ class CartViewController: UIViewController, UITableViewDelegate, UITableViewData
         SVProgressHUD.dismiss()
     }
     
-    // MARK: Methods Updating Values
-    func populateWishListTableView () {
-        tableData = []
-        //requestProductDetails(APIAtlas.cartUrl, params: nil)
-        requestProductDetails("http://demo3526363.mockable.io/api/v1/auth/cart/getCart", params: nil)
-    }
-    
-    func updateCounterLabel() {
-        if tableData.count < 2 {
-            cartCounterLabel.text = "You have \(tableData.count) item in your cart"
-        } else{
-            cartCounterLabel.text = "You have \(tableData.count) items in your cart"
-        }
-    }
-    
     func calculateTotalPrice() {
         var totalPrice: Double = 0.0
         for tempModel in tableData {
             if tempModel.selected {
-                //totalPrice += (Double(tempModel.productDetails.newPrice) * Double(tempModel.quantity))
+                for tempProductUnit in tempModel.productUnits {
+                     if tempModel.unitId == tempProductUnit.productUnitId {
+                        let discountedPrice = (tempProductUnit.discountedPrice as NSString).doubleValue
+                        let quantity = Double(tempModel.quantity)
+                        totalPrice = totalPrice + (quantity * discountedPrice)
+                    }
+                }
             }
         }
         totalPriceLabel.text = "P \(formatter.stringFromNumber(totalPrice)!)"
     }
     
+    
+
     // MARK: - Table View Delegate
     func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
         return self.tableData.count
@@ -203,41 +195,40 @@ class CartViewController: UIViewController, UITableViewDelegate, UITableViewData
     
     func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell 	{
         var cell:CartTableViewCell = self.cartTableView.dequeueReusableCellWithIdentifier("CartTableViewCell") as! CartTableViewCell
-        
-        
         //Set cell data
-        var tempModel: CartModel = tableData[indexPath.row]
+        var tempModel: CartProductDetailsModel = tableData[indexPath.row]
         
-        for selectedProductUnit in tempModel.selectedAttributes {
-            for tempProductUnit in tempModel.productDetails.productUnits {
-                if selectedProductUnit == tempProductUnit.productUnitId.toInt() {
-                    if tempProductUnit.imageIds.count == 0 {
-                        cell.productItemImageView.sd_setImageWithURL(NSURL(string: tempModel.productDetails.image), placeholderImage: UIImage(named: "dummy-placeholder"))
-                    } else {
-                        cell.productItemImageView.sd_setImageWithURL(NSURL(string: tempProductUnit.imageIds[0]), placeholderImage: UIImage(named: "dummy-placeholder"))
-                    }
-                    
-                    var tempAttributesText: String = ""
-                    for tempId in tempProductUnit.combination {
-                        for tempAttributes in tempModel.productDetails.attributes {
-                            if let index = find(tempAttributes.valueId, tempId) {
-                                if tempAttributesText.isEmpty {
-                                    tempAttributesText = tempAttributes.valueName[index]
-                                } else {
-                                    tempAttributesText += " | " + tempAttributes.valueName[index]
-                                }
+        cell.checkBox.selected = false
+        cell.checkBox.backgroundColor = UIColor.whiteColor()
+        cell.checkBox.layer.borderWidth = 1
+        cell.checkBox.layer.borderColor = UIColor.darkGrayColor().CGColor
+        
+        for tempProductUnit in tempModel.productUnits {
+            if tempModel.unitId == tempProductUnit.productUnitId {
+                if tempProductUnit.imageIds.count == 0 {
+                    cell.productItemImageView.sd_setImageWithURL(NSURL(string: tempModel.image), placeholderImage: UIImage(named: "dummy-placeholder"))
+                } else {
+                    cell.productItemImageView.sd_setImageWithURL(NSURL(string: tempProductUnit.imageIds[0]), placeholderImage: UIImage(named: "dummy-placeholder"))
+                }
+                
+                var tempAttributesText: String = ""
+                for tempId in tempProductUnit.combination {
+                    for tempAttributes in tempModel.attributes {
+                        if let index = find(tempAttributes.valueId, tempId) {
+                            if tempAttributesText.isEmpty {
+                                tempAttributesText = tempAttributes.valueName[index]
+                            } else {
+                                tempAttributesText += " | " + tempAttributes.valueName[index]
                             }
                         }
                     }
-                    cell.productDetailsLabel?.text = tempAttributesText
-                    
-                    
-                    cell.productPriceLabel.text = "P" + tempProductUnit.discountedPrice + " x\(tempModel.quantity)"
                 }
+                cell.productDetailsLabel?.text = tempAttributesText
+                cell.productPriceLabel.text = "P " + tempProductUnit.discountedPrice + " x \(tempModel.quantity)"
             }
         }
         
-        cell.productNameLabel.text = tempModel.productDetails.title
+        cell.productNameLabel.text = tempModel.title
         
         cell.delegate = self
         return cell
@@ -254,14 +245,78 @@ class CartViewController: UIViewController, UITableViewDelegate, UITableViewData
     
     // MARK: - Wishlist Table View Delegate
     func deleteButtonActionForIndex(sender: AnyObject){
-        var pathOfTheCell: NSIndexPath = cartTableView.indexPathForCell(sender as! UITableViewCell)!
-        var rowOfTheCell: Int = pathOfTheCell.row
-        fireDeleteCartItem("https://demo3526363.mockable.io/api/v1/auth/cart/updateCartItem", index: rowOfTheCell)
+        if Reachability.isConnectedToNetwork() {
+            var pathOfTheCell: NSIndexPath = cartTableView.indexPathForCell(sender as! UITableViewCell)!
+            var rowOfTheCell: Int = pathOfTheCell.row
+            
+            let tempModel: CartProductDetailsModel = tableData[rowOfTheCell]
+            
+            var params: NSDictionary = ["access_token": SessionManager.accessToken(),
+                "productId": tempModel.id,
+                "unitId": tempModel.unitId,
+                "quantity": 0,
+            ]
+            fireDeleteCartItem(APIAtlas.updateCartUrl, params: params)
+        } else {
+            UIAlertController.displayErrorMessageWithTarget(self, errorMessage: "Cannot retrieve data. Please check your internet connection.", title: "Connection Unreachable")
+        }
+    }
+    
+    func seeMoreAttribute(index: Int) {
+        
+        var tempModel: CartProductDetailsModel = tableData[index]
+        var selectedProductUnits: ProductUnitsModel?
+        
+        for tempProductUnit in tempModel.productUnits {
+            if tempModel.unitId == tempProductUnit.productUnitId {
+                selectedProductUnits = tempProductUnit
+            }
+        }
+
+        
+        println(selectedValue)
+        
+        var attributeModal = CartProductAttributeViewController(nibName: "CartProductAttributeViewController", bundle: nil)
+        attributeModal.delegate = self
+        attributeModal.modalPresentationStyle = UIModalPresentationStyle.OverCurrentContext
+        attributeModal.providesPresentationContextTransitionStyle = true
+        attributeModal.definesPresentationContext = true
+        attributeModal.view.backgroundColor = UIColor.clearColor()
+        attributeModal.view.frame.origin.y = attributeModal.view.frame.size.height
+        attributeModal.passModel(cartModel: tempModel, selectedProductUnits: selectedProductUnits!)
+        self.tabBarController?.presentViewController(attributeModal, animated: true, completion: nil)
+        
+        UIView.animateWithDuration(0.3, animations: {
+            self.dimView.alpha = 0.5
+            self.view.transform = CGAffineTransformMakeScale(0.92, 0.95)
+            self.navigationController?.navigationBar.alpha = 0.0
+        })
+        
     }
     
     func editButtonActionForIndex(sender: AnyObject){
+        /*
+        if Reachability.isConnectedToNetwork() {
+            var pathOfTheCell: NSIndexPath = cartTableView.indexPathForCell(sender as! UITableViewCell)!
+            var rowOfTheCell: Int = pathOfTheCell.row
+            
+            let tempModel: CartProductDetailsModel = tableData[rowOfTheCell]
+            
+            var params: NSDictionary = ["access_token": SessionManager.accessToken(),
+                "wishlist": "true",
+                "productId": tempModel.id,
+                "unitId": tempModel.unitId,
+                "quantity": tempModel.quantity
+            ]
+            
+            fireAddToCartItem(APIAtlas.updateCartUrl, params: params)
+        } else {
+            showAlert("Connection Unreachable", message: "Cannot retrieve data. Please check your internet connection.")
+        }*/
+        
         var pathOfTheCell: NSIndexPath = cartTableView.indexPathForCell(sender as! UITableViewCell)!
         var rowOfTheCell: Int = pathOfTheCell.row
+
         seeMoreAttribute(rowOfTheCell)
     }
     
@@ -269,8 +324,7 @@ class CartViewController: UIViewController, UITableViewDelegate, UITableViewData
         var pathOfTheCell: NSIndexPath = cartTableView.indexPathForCell(sender as! UITableViewCell)!
         var rowOfTheCell: Int = pathOfTheCell.row
         
-        var tempModel: CartModel = tableData[rowOfTheCell]
-        tempModel.selected = state
+        tableData[rowOfTheCell].selected = state
 
         calculateTotalPrice()
     }
@@ -294,10 +348,79 @@ class CartViewController: UIViewController, UITableViewDelegate, UITableViewData
             self.dimView.alpha = 0
             self.navigationController?.navigationBar.alpha = 1.0
         })
+    }
+    
+    func didTapReload() {
+        emptyView?.hidden = true
+        getCartData()
+    }
+    
+    func addEmptyView() {
+        if self.emptyView == nil {
+            self.emptyView = UIView.loadFromNibNamed("EmptyView", bundle: nil) as? EmptyView
+            self.emptyView?.frame = self.view.frame
+            self.emptyView!.delegate = self
+            self.view.addSubview(self.emptyView!)
+        } else {
+            self.emptyView!.hidden = false
+        }
+    }
+    
+    func showAlert(title: String, message: String) {
+        let alertController = UIAlertController(title: title, message: message, preferredStyle: .Alert)
         
-        populateWishListTableView()
+        let OKAction = UIAlertAction(title: "OK", style: .Default) { (action) in
+            alertController.dismissViewControllerAnimated(true, completion: nil)
+            
+            let appDelegate: AppDelegate = UIApplication.sharedApplication().delegate as! AppDelegate
+            appDelegate.changeRootToHomeView()
+        }
+        
+        alertController.addAction(OKAction)
+        
+        self.presentViewController(alertController, animated: true) {
+            
+        }
     }
     
+    func requestRefreshToken(type: String, url: String, params: NSDictionary!) {
+        let url: String = "http://online.api.easydeal.ph/api/v1/login"
+        let params: NSDictionary = ["client_id": Constants.Credentials.clientID,
+            "client_secret": Constants.Credentials.clientSecret,
+            "grant_type": Constants.Credentials.grantRefreshToken,
+            "refresh_token": SessionManager.refreshToken()]
+        
+        let manager = APIManager.sharedInstance
+        manager.POST(url, parameters: params, success: {
+            (task: NSURLSessionDataTask!, responseObject: AnyObject!) in
+            
+            SVProgressHUD.dismiss()
+            
+            if (responseObject["isSuccessful"] as! Bool) {
+                SessionManager.parseTokensFromResponseObject(responseObject as! NSDictionary)
+                
+                if type == "getCart" {
+                    self.requestProductDetails(url, params: params)
+                } else if type == "editToCart" {
+                    self.fireAddToCartItem(url, params: params)
+                } else if type == "deleteWishlist" {
+                    self.fireDeleteCartItem(url, params: params)
+                }
+            } else {
+                self.showAlert("Error", message: responseObject["message"] as! String)
+            }
+            
+            }, failure: {
+                (task: NSURLSessionDataTask!, error: NSError!) in
+                SVProgressHUD.dismiss()
+                let task: NSHTTPURLResponse = task.response as! NSHTTPURLResponse
+                
+               "Cannot retrieve data. Please check your internet connection."
+                
+        })
+    }
+
+    
     /*
     // MARK: - Navigation
     
diff --git a/YiLinkerOnlineBuyer/resources/ViewController/ChangeAddressViewController.swift b/YiLinkerOnlineBuyer/resources/ViewController/ChangeAddressViewController.swift
index b209de9..61b81d2 100644
--- a/YiLinkerOnlineBuyer/resources/ViewController/ChangeAddressViewController.swift
+++ b/YiLinkerOnlineBuyer/resources/ViewController/ChangeAddressViewController.swift
@@ -8,18 +8,31 @@
 
 import UIKit
 
-class ChangeAddressViewController: UIViewController, UICollectionViewDelegateFlowLayout, UICollectionViewDataSource, UICollectionViewDelegate, ChangeAddressCollectionViewCellDelegate, ChangeAddressFooterCollectionViewCellDelegate, AddAddressTableViewControllerDelegate {
+protocol ChangeAddressViewControllerDelegate {
+    func changeAddressViewController(didSelectAddress address: String)
+}
+
+class ChangeAddressViewController: UIViewController, UICollectionViewDelegateFlowLayout, UICollectionViewDataSource, UICollectionViewDelegate, ChangeAddressCollectionViewCellDelegate, ChangeAddressFooterCollectionViewCellDelegate, AddAddressTableViewControllerDelegate, EmptyViewDelegate {
 
     @IBOutlet weak var collectionView: UICollectionView!
    
-    var cellCount: Int = 3
+    var cellCount: Int = 0
     var selectedIndex: Int = 0
     
+    var getAddressModel: GetAddressesModel!
+    var emptyView: EmptyView?
+    
+    let manager = APIManager.sharedInstance
+    
+    var delegate: ChangeAddressViewControllerDelegate?
+    
     override func viewDidLoad() {
         super.viewDidLoad()
+        requestGetAddressess()
         
         self.titleView()
         self.backButton()
+
         let layout: UICollectionViewFlowLayout = UICollectionViewFlowLayout()
         layout.itemSize = CGSize(width: self.view.frame.size.width - 20, height: 79)
         layout.minimumLineSpacing = 20
@@ -62,6 +75,8 @@ class ChangeAddressViewController: UIViewController, UICollectionViewDelegateFlo
     }
     
     func done() {
+        let cell: ChangeAddressCollectionViewCell = self.collectionView.cellForItemAtIndexPath(NSIndexPath(forItem: self.selectedIndex, inSection: 0)) as! ChangeAddressCollectionViewCell
+        self.delegate!.changeAddressViewController(didSelectAddress: cell.addressLabel.text!)
         self.navigationController!.popViewControllerAnimated(true)
     }
     
@@ -74,6 +89,8 @@ class ChangeAddressViewController: UIViewController, UICollectionViewDelegateFlo
         self.collectionView.registerNib(collectionViewFooterNib, forSupplementaryViewOfKind: UICollectionElementKindSectionHeader, withReuseIdentifier: Constants.Checkout.changeAddressFooterCollectionViewCellNibNameAndIdentifier)
     }
 
+    // MARK: - Collection View Data Source and Delegates
+    
     func collectionView(collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
         return cellCount
     }
@@ -81,6 +98,9 @@ class ChangeAddressViewController: UIViewController, UICollectionViewDelegateFlo
     func collectionView(collectionView: UICollectionView, cellForItemAtIndexPath indexPath: NSIndexPath) -> UICollectionViewCell {
         let cell : ChangeAddressCollectionViewCell = collectionView.dequeueReusableCellWithReuseIdentifier(Constants.Checkout.changeAddressCollectionViewCellNibNameAndIdentifier, forIndexPath: indexPath) as! ChangeAddressCollectionViewCell
         
+        cell.titleLabel.text = self.getAddressModel.listOfAddress[indexPath.row].title
+        cell.addressLabel.text = self.getAddressModel.listOfAddress[indexPath.row].streetName
+
         if indexPath.row == self.selectedIndex {
             cell.layer.borderWidth = 1
             cell.layer.borderColor = Constants.Colors.selectedGreenColor.CGColor
@@ -111,6 +131,37 @@ class ChangeAddressViewController: UIViewController, UICollectionViewDelegateFlo
         self.collectionView.reloadData()
     }
     
+    func collectionView(collectionView: UICollectionView, viewForSupplementaryElementOfKind kind: String, atIndexPath indexPath: NSIndexPath) -> UICollectionReusableView {
+        let footerView: ChangeAddressFooterCollectionViewCell = self.collectionView?.dequeueReusableSupplementaryViewOfKind(kind, withReuseIdentifier: Constants.Checkout.changeAddressFooterCollectionViewCellNibNameAndIdentifier, forIndexPath: indexPath) as! ChangeAddressFooterCollectionViewCell
+        
+        footerView.delegate = self
+        
+        return footerView
+    }
+    
+    // MARK: - Other Delegates
+    
+    func changeAddressCollectionViewCell(deleteAddressWithCell cell: ChangeAddressCollectionViewCell) {
+        let indexPath: NSIndexPath = self.collectionView.indexPathForCell(cell)!
+        requestDeleteAddress(self.getAddressModel.listOfAddress[indexPath.row].userAddressId, index: indexPath)
+    }
+
+    func changeAddressFooterCollectionViewCell(didSelecteAddAddress cell: ChangeAddressFooterCollectionViewCell) {
+        /*let indexPath: NSIndexPath = NSIndexPath(forItem: self.cellCount, inSection: 0)
+        self.addCellInIndexPath(indexPath)*/
+        
+        let addAddressTableViewController: AddAddressTableViewController = AddAddressTableViewController(nibName: "AddAddressTableViewController", bundle: nil)
+        addAddressTableViewController.delegate = self
+        self.navigationController!.pushViewController(addAddressTableViewController, animated: true)
+    }
+    
+    func addAddressTableViewController(didAddAddressSucceed addAddressTableViewController: AddAddressTableViewController) {
+        let indexPath: NSIndexPath = NSIndexPath(forItem: self.cellCount, inSection: 0)
+        self.addCellInIndexPath(indexPath)
+    }
+    
+    // MARK: - Actions
+    
     func addCellInIndexPath(indexPath: NSIndexPath) {
         self.cellCount++
         self.collectionView.insertItemsAtIndexPaths([NSIndexPath(forItem: indexPath.row, inSection: indexPath.section)])
@@ -120,40 +171,113 @@ class ChangeAddressViewController: UIViewController, UICollectionViewDelegateFlo
         if cellCount != 0 {
             self.cellCount = self.cellCount - 1
         }
-   
+        
         self.collectionView.deleteItemsAtIndexPaths([NSIndexPath(forItem: indexPath.row, inSection: indexPath.section)])
     }
     
-    override func didReceiveMemoryWarning() {
-        super.didReceiveMemoryWarning()
-        // Dispose of any resources that can be recreated.
+    // MARK: - Methods
+    
+    func showAlert(#title: String!, message: String!) {
+        let alertController = UIAlertController(title: title, message: message, preferredStyle: .Alert)
+        let defaultAction = UIAlertAction(title: "OK", style: .Default, handler: nil)
+        alertController.addAction(defaultAction)
+        presentViewController(alertController, animated: true, completion: nil)
     }
     
-    func changeAddressCollectionViewCell(deleteAddressWithCell cell: ChangeAddressCollectionViewCell) {
-        let indexPath: NSIndexPath = self.collectionView.indexPathForCell(cell)!
-        self.deleteCellInIndexPath(indexPath)
+    func addEmptyView() {
+        self.emptyView = UIView.loadFromNibNamed("EmptyView", bundle: nil) as? EmptyView
+        self.emptyView?.frame = self.view.frame
+        self.emptyView!.delegate = self
+        self.view.addSubview(self.emptyView!)
     }
-
-    func collectionView(collectionView: UICollectionView, viewForSupplementaryElementOfKind kind: String, atIndexPath indexPath: NSIndexPath) -> UICollectionReusableView {
-        let footerView: ChangeAddressFooterCollectionViewCell = self.collectionView?.dequeueReusableSupplementaryViewOfKind(kind, withReuseIdentifier: Constants.Checkout.changeAddressFooterCollectionViewCellNibNameAndIdentifier, forIndexPath: indexPath) as! ChangeAddressFooterCollectionViewCell
+    
+    func didTapReload() {
+        requestGetAddressess()
+        self.emptyView?.removeFromSuperview()
+    }
+    
+    // MARK: - Requests
+    
+    func requestGetAddressess() {
+        SVProgressHUD.show()
         
-        footerView.delegate = self
+        let url = "http://online.api.easydeal.ph/api/v1/auth/address/getUserAddresses"
+        let params = ["access_token": SessionManager.accessToken()]
         
-        return footerView
+        manager.POST(url, parameters: params, success: {
+            (task: NSURLSessionDataTask!, responseObject: AnyObject!) in
+            
+            self.getAddressModel = GetAddressesModel.parseDataWithDictionary(responseObject)
+            self.cellCount = self.getAddressModel.listOfAddress.count
+            self.collectionView.reloadData()
+            SVProgressHUD.dismiss()
+            
+            }, failure: {
+                (task: NSURLSessionDataTask!, error: NSError!) in
+                let task: NSHTTPURLResponse = task.response as! NSHTTPURLResponse
+                if task.statusCode == 401 {
+                    self.requestRefreshToken("get", deleteId: nil, deleteIndex: nil)
+                } else {
+                    self.addEmptyView()
+                    SVProgressHUD.dismiss()
+                }
+        })
     }
     
-    
-    func changeAddressFooterCollectionViewCell(didSelecteAddAddress cell: ChangeAddressFooterCollectionViewCell) {
-        /*let indexPath: NSIndexPath = NSIndexPath(forItem: self.cellCount, inSection: 0)
-        self.addCellInIndexPath(indexPath)*/
+    func requestDeleteAddress(addressId: Int, index: NSIndexPath) {
+        SVProgressHUD.show()
         
-        let addAddressTableViewController: AddAddressTableViewController = AddAddressTableViewController(nibName: "AddAddressTableViewController", bundle: nil)
-        addAddressTableViewController.delegate = self
-        self.navigationController!.pushViewController(addAddressTableViewController, animated: true)
+        let url = "http://online.api.easydeal.ph/api/v1/auth/address/deleteUserAddress"
+        let params = ["access_token": SessionManager.accessToken(),
+        "userAddressId": String(addressId)]
+        
+        manager.POST(url, parameters: params, success: {
+            (task: NSURLSessionDataTask!, responseObject: AnyObject!) in
+            
+            if (responseObject["isSuccessful"] as! Bool) {
+                self.showAlert(title: "Address successfully deleted.", message: nil)
+                self.deleteCellInIndexPath(index)
+            } else {
+                self.showAlert(title: responseObject["message"] as! String, message: nil)
+            }
+            
+            SVProgressHUD.dismiss()
+            }, failure: {
+                (task: NSURLSessionDataTask!, error: NSError!) in
+                let task: NSHTTPURLResponse = task.response as! NSHTTPURLResponse
+                if task.statusCode == 401 {
+                    self.requestRefreshToken("delete", deleteId: addressId, deleteIndex: index)
+                } else {
+                    self.addEmptyView()
+                    SVProgressHUD.dismiss()
+                }
+        })
     }
     
-    func addAddressTableViewController(didAddAddressSucceed addAddressTableViewController: AddAddressTableViewController) {
-        let indexPath: NSIndexPath = NSIndexPath(forItem: self.cellCount, inSection: 0)
-        self.addCellInIndexPath(indexPath)
+    func requestRefreshToken(type: String, deleteId: Int!, deleteIndex: NSIndexPath!) {
+        let url: String = "http://online.api.easydeal.ph/api/v1/login"
+        let params: NSDictionary = ["client_id": Constants.Credentials.clientID,
+            "client_secret": Constants.Credentials.clientSecret,
+            "grant_type": Constants.Credentials.grantRefreshToken,
+            "refresh_token": SessionManager.refreshToken()]
+        
+        let manager = APIManager.sharedInstance
+        manager.POST(url, parameters: params, success: {
+            (task: NSURLSessionDataTask!, responseObject: AnyObject!) in
+            
+            if type == "get" {
+                self.requestGetAddressess()
+            } else if type == "delete" {
+                self.requestDeleteAddress(deleteId, index: deleteIndex)
+            }
+            
+            }, failure: {
+                (task: NSURLSessionDataTask!, error: NSError!) in
+                SVProgressHUD.dismiss()
+                let alertController = UIAlertController(title: "Something went wrong", message: "", preferredStyle: .Alert)
+                let defaultAction = UIAlertAction(title: "OK", style: .Default, handler: nil)
+                alertController.addAction(defaultAction)
+                self.presentViewController(alertController, animated: true, completion: nil)
+        })
     }
 }
diff --git a/YiLinkerOnlineBuyer/resources/ViewController/CircularMenuViewController.swift b/YiLinkerOnlineBuyer/resources/ViewController/CircularMenuViewController.swift
index dbd38f4..13110e1 100644
--- a/YiLinkerOnlineBuyer/resources/ViewController/CircularMenuViewController.swift
+++ b/YiLinkerOnlineBuyer/resources/ViewController/CircularMenuViewController.swift
@@ -395,6 +395,8 @@ class CircularMenuViewController: UIViewController {
     func logout() {
         SessionManager.logout()
         self.dissmissViewControllerAnimated()
+        let appDelegate: AppDelegate = UIApplication.sharedApplication().delegate as! AppDelegate
+        appDelegate.changeRootToHomeView()
     }
     
 }
diff --git a/YiLinkerOnlineBuyer/resources/ViewController/EditProfileTableViewController.swift b/YiLinkerOnlineBuyer/resources/ViewController/EditProfileTableViewController.swift
new file mode 100644
index 0000000..856e1c1
--- /dev/null
+++ b/YiLinkerOnlineBuyer/resources/ViewController/EditProfileTableViewController.swift
@@ -0,0 +1,478 @@
+//
+//  EditProfileTableViewController.swift
+//  YiLinkerOnlineBuyer
+//
+//  Created by John Paul Chan on 8/24/15.
+//  Copyright (c) 2015 yiLinker-online-buyer. All rights reserved.
+//
+
+import UIKit
+
+class EditProfileTableViewController: UITableViewController, UINavigationControllerDelegate, EditProfileAddPhotoTableViewCellDelegate, EditProfileAddressTableViewCellDelegate, EditProfileAccountInformationTableViewCellDelegate, UIImagePickerControllerDelegate, UIActionSheetDelegate, EditProfilePersonalInformationTableViewCellDelegate  {
+    
+    let manager = APIManager.sharedInstance
+    
+    let addPhotoCellIndetifier: String = "EditProfileAddPhotoTableViewCell"
+    let personalInfoCellIdentifier: String = "EditProfilePersonalInformationTableViewCell"
+    let addressCellIdentifier: String = "EditProfileAddressTableViewCell"
+    let accountCellIdentifier: String = "EditProfileAccountInformationTableViewCell"
+    
+    var addPhotoCell: EditProfileAddPhotoTableViewCell?
+    var personalInfoCell: EditProfilePersonalInformationTableViewCell?
+    var addressCell: EditProfileAddressTableViewCell?
+    var accountCell: EditProfileAccountInformationTableViewCell?
+    
+    var photoIndexPath: NSIndexPath?
+    var personalIndexPath: NSIndexPath?
+    var addressIndexPath: NSIndexPath?
+    var accountIndexPath: NSIndexPath?
+    
+    var profileUserDetailsModel: ProfileUserDetailsModel!
+    
+    var firstName: String = ""
+    var lastName: String = ""
+    var mobileNumber: String = ""
+    var emailAddress: String = ""
+    var password: String = ""
+    
+    var imageData: NSData?
+    
+    override func viewDidLoad() {
+        super.viewDidLoad()
+        
+        initializeViews()
+        backButton()
+        titleView()
+        registerNibs()
+    }
+    
+    override func didReceiveMemoryWarning() {
+        super.didReceiveMemoryWarning()
+    }
+    
+    func initializeViews() {
+        if self.respondsToSelector("edgesForExtendedLayout") {
+            self.edgesForExtendedLayout = UIRectEdge.None
+        }
+        self.tableView.separatorInset = UIEdgeInsetsZero
+        self.tableView.layoutMargins = UIEdgeInsetsZero
+        
+        self.tableView.tableFooterView = UIView(frame: CGRectZero)
+        
+        var tapTableView = UITapGestureRecognizer(target:self, action:"hideKeyboard")
+        self.tableView.addGestureRecognizer(tapTableView)
+    }
+    
+    func passModel(profileModel: ProfileUserDetailsModel){
+        profileUserDetailsModel = profileModel
+        firstName = profileModel.firstName
+        lastName = profileModel.lastName
+        mobileNumber = profileModel.contactNumber
+        emailAddress = profileModel.email
+    }
+    
+    func titleView() {
+        self.title = "Edit Profile"
+    }
+    
+    func backButton() {
+        var backButton:UIButton = UIButton.buttonWithType(UIButtonType.Custom) as! UIButton
+        backButton.frame = CGRectMake(0, 0, 40, 40)
+        backButton.addTarget(self, action: "back", forControlEvents: UIControlEvents.TouchUpInside)
+        backButton.setImage(UIImage(named: "back-white"), forState: UIControlState.Normal)
+        var customBackButton:UIBarButtonItem = UIBarButtonItem(customView: backButton)
+        
+        let navigationSpacer: UIBarButtonItem = UIBarButtonItem(barButtonSystemItem: UIBarButtonSystemItem.FixedSpace, target: nil, action: nil)
+        navigationSpacer.width = -20
+        self.navigationItem.leftBarButtonItems = [navigationSpacer, customBackButton]
+    }
+    
+    func back() {
+        self.navigationController!.popViewControllerAnimated(true)
+    }
+
+    
+    func registerNibs() {
+        var nibPhoto = UINib(nibName: addPhotoCellIndetifier, bundle: nil)
+        self.tableView.registerNib(nibPhoto, forCellReuseIdentifier: addPhotoCellIndetifier)
+        
+        var nibPersonal = UINib(nibName: personalInfoCellIdentifier, bundle: nil)
+        self.tableView.registerNib(nibPersonal, forCellReuseIdentifier: personalInfoCellIdentifier)
+        
+        var nibAddress = UINib(nibName: addressCellIdentifier, bundle: nil)
+        self.tableView.registerNib(nibAddress, forCellReuseIdentifier: addressCellIdentifier)
+        
+        var nibAccount = UINib(nibName: accountCellIdentifier, bundle: nil)
+        self.tableView.registerNib(nibAccount, forCellReuseIdentifier: accountCellIdentifier)
+    }
+    // MARK: - Table view data source
+    
+    override func numberOfSectionsInTableView(tableView: UITableView) -> Int {
+        // #warning Potentially incomplete method implementation.
+        // Return the number of sections.
+        return 1
+    }
+    
+    override func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
+        // #warning Incomplete method implementation.
+        // Return the number of rows in the section.
+        return 4
+    }
+    
+    
+    override func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {
+        
+        if indexPath.row == 0 {
+            let cell = tableView.dequeueReusableCellWithIdentifier(addPhotoCellIndetifier, forIndexPath: indexPath) as! EditProfileAddPhotoTableViewCell
+            cell.delegate = self
+            
+            cell.profileImageView.sd_setImageWithURL(NSURL(string: profileUserDetailsModel.profileImageUrl), placeholderImage: UIImage(named: "dummy-placeholder"))
+            
+            if profileUserDetailsModel.profileImageUrl.isNotEmpty() {
+                cell.profileImageView.hidden = false
+                cell.addPhotoLabel.text = "Edit Photo"
+            }
+            
+            photoIndexPath = indexPath
+            
+            return cell
+        } else if indexPath.row == 1 {
+            let cell = tableView.dequeueReusableCellWithIdentifier(personalInfoCellIdentifier, forIndexPath: indexPath) as! EditProfilePersonalInformationTableViewCell
+            cell.firstNameTextField.text = profileUserDetailsModel.firstName
+            cell.lastNameTextField.text = profileUserDetailsModel.lastName
+            cell.mobilePhoneTextField.text = profileUserDetailsModel.contactNumber
+            cell.delegate = self
+            personalIndexPath = indexPath
+            
+            return cell
+        } else if indexPath.row == 2 {
+            let cell = tableView.dequeueReusableCellWithIdentifier(addressCellIdentifier, forIndexPath: indexPath) as! EditProfileAddressTableViewCell
+            cell.delegate = self
+            addressIndexPath = indexPath
+            
+            return cell
+        } else {
+            let cell = tableView.dequeueReusableCellWithIdentifier(accountCellIdentifier, forIndexPath: indexPath) as! EditProfileAccountInformationTableViewCell
+            cell.delegate = self
+            accountIndexPath = indexPath
+            cell.emailAddressTextField.text = profileUserDetailsModel.email
+            return cell
+        }
+    }
+    
+    override func tableView(tableView: UITableView, heightForRowAtIndexPath indexPath: NSIndexPath) -> CGFloat {
+        if indexPath.row == 0 {
+            return 150
+        } else if indexPath.row == 1 {
+            return 175
+        }  else if indexPath.row == 2 {
+            return 145
+        } else {
+            return 270
+        }
+    }
+    
+    /*
+    // Override to support conditional editing of the table view.
+    override func tableView(tableView: UITableView, canEditRowAtIndexPath indexPath: NSIndexPath) -> Bool {
+    // Return NO if you do not want the specified item to be editable.
+    return true
+    }
+    */
+    
+    /*
+    // Override to support editing the table view.
+    override func tableView(tableView: UITableView, commitEditingStyle editingStyle: UITableViewCellEditingStyle, forRowAtIndexPath indexPath: NSIndexPath) {
+    if editingStyle == .Delete {
+    // Delete the row from the data source
+    tableView.deleteRowsAtIndexPaths([indexPath], withRowAnimation: .Fade)
+    } else if editingStyle == .Insert {
+    // Create a new instance of the appropriate class, insert it into the array, and add a new row to the table view
+    }
+    }
+    */
+    
+    /*
+    // Override to support rearranging the table view.
+    override func tableView(tableView: UITableView, moveRowAtIndexPath fromIndexPath: NSIndexPath, toIndexPath: NSIndexPath) {
+    
+    }
+    */
+    
+    /*
+    // Override to support conditional rearranging of the table view.
+    override func tableView(tableView: UITableView, canMoveRowAtIndexPath indexPath: NSIndexPath) -> Bool {
+    // Return NO if you do not want the item to be re-orderable.
+    return true
+    }
+    */
+    
+    /*
+    // MARK: - Navigation
+    
+    // In a storyboard-based application, you will often want to do a little preparation before navigation
+    override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {
+    // Get the new view controller using [segue destinationViewController].
+    // Pass the selected object to the new view controller.
+    }
+    */
+    
+    // MARK: - EditProfileAddPhotoTableViewCellDelegate
+    func addPhotoAction(sender: AnyObject) {
+        println("addPhotoAction")
+        /* Supports UIAlert Controller */
+        if( controllerAvailable()){
+            handleIOS8()
+        } else {
+            var actionSheet:UIActionSheet
+            if(UIImagePickerController .isSourceTypeAvailable(UIImagePickerControllerSourceType.Camera)){
+                actionSheet = UIActionSheet(title: "Add photo", delegate: self, cancelButtonTitle: "Cancel", destructiveButtonTitle: nil,otherButtonTitles:"Select photo from library", "Take a picture")
+            } else {
+                actionSheet = UIActionSheet(title: "Add photo", delegate: self, cancelButtonTitle: "Cancel", destructiveButtonTitle: nil,otherButtonTitles:"Select photo from library")
+            }
+            actionSheet.delegate = self
+            actionSheet.showInView(self.view)
+            /* Implement the delegate for actionSheet */
+        }
+    }
+    
+    //Method for
+    func handleIOS8(){
+        let imageController = UIImagePickerController()
+        imageController.editing = false
+        imageController.delegate = self
+        let alert = UIAlertController(title: "Add photo", message: "", preferredStyle: UIAlertControllerStyle.ActionSheet)
+        let libButton = UIAlertAction(title: "Select photo from library", style: UIAlertActionStyle.Default) { (alert) -> Void in
+            imageController.sourceType = UIImagePickerControllerSourceType.PhotoLibrary
+            self.presentViewController(imageController, animated: true, completion: nil)
+        }
+        if(UIImagePickerController .isSourceTypeAvailable(UIImagePickerControllerSourceType.Camera)){
+            let cameraButton = UIAlertAction(title: "Take a picture", style: UIAlertActionStyle.Default) { (alert) -> Void in
+                println("Take Photo")
+                imageController.sourceType = UIImagePickerControllerSourceType.Camera
+                self.presentViewController(imageController, animated: true, completion: nil)
+                
+            }
+            alert.addAction(cameraButton)
+        } else {
+            println("Camera not available")
+            
+        }
+        let cancelButton = UIAlertAction(title: "Cancel", style: UIAlertActionStyle.Cancel) { (alert) -> Void in
+            println("Cancel Pressed")
+        }
+        
+        alert.addAction(libButton)
+        alert.addAction(cancelButton)
+        
+        self.presentViewController(alert, animated: true, completion: nil)
+        
+    }
+    
+    func imagePickerController(picker: UIImagePickerController, didFinishPickingImage image: UIImage!, editingInfo: [NSObject : AnyObject]!) {
+        self.dismissViewControllerAnimated(true, completion: nil)
+        
+        addPhotoCell = self.tableView.cellForRowAtIndexPath(photoIndexPath!) as? EditProfileAddPhotoTableViewCell
+        
+        addPhotoCell!.profileImageView.hidden = false
+        addPhotoCell!.profileImageView.image = image
+        addPhotoCell!.addPhotoLabel.text = "Edit Photo"
+        
+        imageData = UIImagePNGRepresentation(image)
+    }
+    
+    func actionSheet(actionSheet: UIActionSheet, clickedButtonAtIndex buttonIndex: Int) {
+        println("Title : \(actionSheet.buttonTitleAtIndex(buttonIndex))")
+        println("Button Index : \(buttonIndex)")
+        let imageController = UIImagePickerController()
+        imageController.editing = false
+        imageController.delegate = self;
+        if buttonIndex == 1 {
+            imageController.sourceType = UIImagePickerControllerSourceType.PhotoLibrary
+        } else if buttonIndex == 2 {
+            imageController.sourceType = UIImagePickerControllerSourceType.Camera
+        } else {
+            
+        }
+        self.presentViewController(imageController, animated: true, completion: nil)
+    }
+    
+    func controllerAvailable() -> Bool {
+        if let gotModernAlert: AnyClass = NSClassFromString("UIAlertController") {
+            return true;
+        }
+        else {
+            return false;
+        }
+    }
+    
+    // MARK: - EditProfileAddressTableViewCellDelegate
+    func changeAddressAction(sender: AnyObject){
+        println("changeAddressAction")
+        let changeAddressViewController: ChangeAddressViewController = ChangeAddressViewController(nibName: "ChangeAddressViewController", bundle: nil)
+        self.navigationController!.pushViewController(changeAddressViewController, animated: true)
+    }
+    
+    // Hide Keyboard
+    func hideKeyboard() {
+        self.view.endEditing(true)
+    }
+    
+    // MARK: - EditProfilePersonalInformationTableViewCellDelegate
+    func passPersonalInformation(firstName: String, lastName: String, mobileNumber: String) {
+        self.firstName = firstName
+        self.lastName = lastName
+        self.mobileNumber = mobileNumber
+    }
+    
+    // MARK: - EditProfileAccountInformationTableViewCellDelegate
+    func saveAction(sender: AnyObject) {
+        println("saveAction")
+        
+        var errorMessage: String = ""
+        
+        /*
+        if firstName.isEmpty {
+            errorMessage = "First name is required."
+        } else if firstName.isValidName() {
+            errorMessage = "First name contains illegal characters. It can only contain letters, numbers and underscores."
+        } else if lastName.isNotEmpty() {
+            errorMessage = "Last name is required."
+        } else if lastName.isValidName() {
+            errorMessage = "Last name contains illegal characters. It can only contain letters, numbers and underscores."
+        } else if emailAddress.isNotEmpty() {
+            errorMessage = "Email is required."
+        } else if emailAddress.isValidEmail() {
+            errorMessage = "The email address you enter is not a valid email address."
+        } else if password.isNotEmpty() {
+            errorMessage = "Password is required."
+        } else if password.isAlphaNumeric() {
+            errorMessage = "Password contains illegal characters. It can only contain letters, numbers and underscores."
+        }*/
+        
+        if errorMessage != "" {
+            UIAlertController.displayErrorMessageWithTarget(self, errorMessage: errorMessage)
+        } else {
+            if Reachability.isConnectedToNetwork(){
+                if imageData != nil{
+                    var params: NSDictionary = [
+                        "firstName": firstName as String,
+                        "lastName": lastName as String,
+                        "contactNumber": mobileNumber as String,
+                        "access_token": SessionManager.accessToken()]
+                    
+                    fireUpdateProfile(APIAtlas.editProfileUrl, params: params, withImage: true)
+                } else {
+                    var params: NSDictionary = [
+                        "firstName": firstName as String,
+                        "lastName": lastName as String,
+                        "profilePhoto": profileUserDetailsModel.profileImageUrl as String,
+                        "contactNumber": mobileNumber as String,
+                        "access_token": SessionManager.accessToken()]
+                    
+                    fireUpdateProfile(APIAtlas.editProfileUrl, params: params, withImage: false)
+                }
+                
+            }
+            else {
+                showAlert("Connection Unreachable", message: "Cannot retrieve data. Please check your internet connection.")
+            }
+        }
+            
+    }
+    
+    
+    func fireUpdateProfile(url: String, params: NSDictionary!, withImage: Bool) {
+        showLoader()
+        if withImage {
+            manager.POST(url, parameters: params, constructingBodyWithBlock: { (data: AFMultipartFormData!) in
+                println("")
+                data.appendPartWithFileData(self.imageData!, name: "profilePhoto", fileName: "photo", mimeType: "")
+                }, success: {
+                    (task: NSURLSessionDataTask!, responseObject: AnyObject!) in print(responseObject as! NSDictionary)
+                    if responseObject.objectForKey("error") != nil {
+                        self.requestRefreshToken("updateProfile", url: url, params: params, withImage: withImage)
+                    }
+                    self.dismissLoader()
+                    self.showAlert("Success", message: "Successfully updated profile!")
+                }, failure: {
+                    (task: NSURLSessionDataTask!, error: NSError!) in
+                    self.showAlert("Error", message: "Something went wrong. . .")
+                    self.dismissLoader()
+                    println(error)
+            })
+        } else {
+            manager.POST(url, parameters: params, success: {
+                    (task: NSURLSessionDataTask!, responseObject: AnyObject!) in print(responseObject as! NSDictionary)
+                    if responseObject.objectForKey("error") != nil {
+                        self.requestRefreshToken("updateProfile", url: url, params: params, withImage: withImage)
+                    }
+                    self.dismissLoader()
+                    self.showAlert("Success", message: "Successfully updated profile!")
+                    println(responseObject)
+                }, failure: {
+                    (task: NSURLSessionDataTask!, error: NSError!) in
+                    self.showAlert("Error", message: "Something went wrong. . .")
+                    self.dismissLoader()
+                    println(error)
+            })
+        }
+        
+    }
+    
+    //Loader function
+    func showLoader() {
+        SVProgressHUD.show()
+        SVProgressHUD.setBackgroundColor(UIColor.whiteColor())
+    }
+    
+    func dismissLoader() {
+        SVProgressHUD.dismiss()
+    }
+    
+    func requestRefreshToken(type: String, url: String, params: NSDictionary!, withImage: Bool) {
+        let url: String = "http://online.api.easydeal.ph/api/v1/login"
+        let params: NSDictionary = ["client_id": Constants.Credentials.clientID,
+            "client_secret": Constants.Credentials.clientSecret,
+            "grant_type": Constants.Credentials.grantRefreshToken,
+            "refresh_token": SessionManager.refreshToken()]
+        
+        let manager = APIManager.sharedInstance
+            manager.POST(url, parameters: params, success: {
+            (task: NSURLSessionDataTask!, responseObject: AnyObject!) in
+            
+            SVProgressHUD.dismiss()
+            
+            if (responseObject["isSuccessful"] as! Bool) {
+                SessionManager.parseTokensFromResponseObject(responseObject as! NSDictionary)
+                self.fireUpdateProfile(url, params: params, withImage: withImage)
+                
+            } else {
+                self.showAlert("Error", message: responseObject["message"] as! String)
+            }
+            
+            }, failure: {
+                (task: NSURLSessionDataTask!, error: NSError!) in
+                SVProgressHUD.dismiss()
+                let task: NSHTTPURLResponse = task.response as! NSHTTPURLResponse
+                
+                self.showAlert("Something went wrong", message: "")
+                
+        })
+    }
+    
+    func showAlert(title: String, message: String) {
+        let alertController = UIAlertController(title: title, message: message, preferredStyle: .Alert)
+        
+        let OKAction = UIAlertAction(title: "OK", style: .Default) { (action) in
+            alertController.dismissViewControllerAnimated(true, completion: nil)
+        }
+        
+        alertController.addAction(OKAction)
+        
+        self.presentViewController(alertController, animated: true) {
+            
+        }
+    }
+
+}
diff --git a/YiLinkerOnlineBuyer/resources/ViewController/EditProfileTableViewController.xib b/YiLinkerOnlineBuyer/resources/ViewController/EditProfileTableViewController.xib
new file mode 100644
index 0000000..b84a8f8
--- /dev/null
+++ b/YiLinkerOnlineBuyer/resources/ViewController/EditProfileTableViewController.xib
@@ -0,0 +1,24 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="7706" systemVersion="14E46" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" useTraitCollections="YES">
+    <dependencies>
+        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="7703"/>
+    </dependencies>
+    <objects>
+        <placeholder placeholderIdentifier="IBFilesOwner" id="-1" userLabel="File's Owner" customClass="EditProfileTableViewController" customModule="YiLinkerOnlineBuyer" customModuleProvider="target">
+            <connections>
+                <outlet property="view" destination="i5M-Pr-FkT" id="sfx-zR-JGt"/>
+            </connections>
+        </placeholder>
+        <placeholder placeholderIdentifier="IBFirstResponder" id="-2" customClass="UIResponder"/>
+        <tableView opaque="NO" clipsSubviews="YES" clearsContextBeforeDrawing="NO" contentMode="scaleToFill" bouncesZoom="NO" style="plain" separatorStyle="default" allowsSelection="NO" rowHeight="44" sectionHeaderHeight="22" sectionFooterHeight="22" id="i5M-Pr-FkT">
+            <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
+            <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
+            <color key="backgroundColor" red="0.88235294119999996" green="0.88235294119999996" blue="0.88235294119999996" alpha="1" colorSpace="calibratedRGB"/>
+            <simulatedScreenMetrics key="simulatedDestinationMetrics" type="retina47"/>
+            <connections>
+                <outlet property="dataSource" destination="-1" id="Tng-2m-Rnh"/>
+                <outlet property="delegate" destination="-1" id="9aC-8N-iBw"/>
+            </connections>
+        </tableView>
+    </objects>
+</document>
diff --git a/YiLinkerOnlineBuyer/resources/ViewController/FollowedSellerViewController.swift b/YiLinkerOnlineBuyer/resources/ViewController/FollowedSellerViewController.swift
index f628171..a56970b 100644
--- a/YiLinkerOnlineBuyer/resources/ViewController/FollowedSellerViewController.swift
+++ b/YiLinkerOnlineBuyer/resources/ViewController/FollowedSellerViewController.swift
@@ -21,7 +21,7 @@ class FollowedSellerViewController: UIViewController, EmptyViewDelegate {
         let nib = UINib(nibName: "FollowedSellerTableViewCell", bundle: nil)
         self.tableView.registerNib(nib, forCellReuseIdentifier: "FollowedSellerIdentifier")
         
-        requestReviewDetails()
+        requestFollowedSelers()
         
         customizedNavigationBar()
     }
@@ -70,18 +70,17 @@ class FollowedSellerViewController: UIViewController, EmptyViewDelegate {
     
     func tableView(tableView: UITableView, didSelectRowAtIndexPath indexPath: NSIndexPath) {
         let seller = SellerViewController(nibName: "SellerViewController", bundle: nil)
-//        self.presentViewController(vc, animated: true, completion: nil)
         self.navigationController?.pushViewController(seller, animated: true)
     }
     
     // MARK: - Request
     
-    func requestReviewDetails() {
+    func requestFollowedSelers() {
         SVProgressHUD.show()
         
         let manager = APIManager.sharedInstance
         let url = "http://online.api.easydeal.ph/api/v1/auth/getFollowedSellers"
-        let params = ["access_token": "MDNlMTE2M2ExMzBiNWZlMDliZDVhOGQ5MWYxZjE0ODFiMGVkYWM0NDhlMDkwNzBmOWEzMWJjNTYzMGQ3NDIzZQ",
+        let params = ["access_token": SessionManager.accessToken(),
             "page": "1", "limit": "99"]
         
         manager.POST(url, parameters: params, success: {
@@ -93,8 +92,37 @@ class FollowedSellerViewController: UIViewController, EmptyViewDelegate {
             
             }, failure: {
                 (task: NSURLSessionDataTask!, error: NSError!) in
-                self.addEmptyView()
+                let task: NSHTTPURLResponse = task.response as! NSHTTPURLResponse
+                if task.statusCode == 401 {
+                    self.requestRefreshToken()
+                } else {
+                    self.addEmptyView()
+                    SVProgressHUD.dismiss()
+                }
+        })
+    }
+    
+    func requestRefreshToken() {
+        let url: String = "http://online.api.easydeal.ph/api/v1/login"
+        let params: NSDictionary = ["client_id": Constants.Credentials.clientID,
+            "client_secret": Constants.Credentials.clientSecret,
+            "grant_type": Constants.Credentials.grantRefreshToken,
+            "refresh_token": SessionManager.refreshToken()]
+        
+        let manager = APIManager.sharedInstance
+        manager.POST(url, parameters: params, success: {
+            (task: NSURLSessionDataTask!, responseObject: AnyObject!) in
+            
+                SessionManager.parseTokensFromResponseObject(responseObject as! NSDictionary)
+                self.requestFollowedSelers()
+
+            }, failure: {
+                (task: NSURLSessionDataTask!, error: NSError!) in
                 SVProgressHUD.dismiss()
+                let alertController = UIAlertController(title: "Something went wrong", message: "", preferredStyle: .Alert)
+                let defaultAction = UIAlertAction(title: "OK", style: .Default, handler: nil)
+                alertController.addAction(defaultAction)
+                self.presentViewController(alertController, animated: true, completion: nil)
         })
     }
     
@@ -108,7 +136,7 @@ class FollowedSellerViewController: UIViewController, EmptyViewDelegate {
     }
     
     func didTapReload() {
-        requestReviewDetails()
+        requestFollowedSelers()
         self.emptyView?.removeFromSuperview()
     }
     
diff --git a/YiLinkerOnlineBuyer/resources/ViewController/HiddenViewController.swift b/YiLinkerOnlineBuyer/resources/ViewController/HiddenViewController.swift
index c39c447..4e2c018 100644
--- a/YiLinkerOnlineBuyer/resources/ViewController/HiddenViewController.swift
+++ b/YiLinkerOnlineBuyer/resources/ViewController/HiddenViewController.swift
@@ -47,7 +47,14 @@ class HiddenViewController: UIViewController {
         if index == 0 {
             
         } else if index == 1 {
-            
+            if SessionManager.isLoggedIn() {
+                var titleLabel = UILabel(frame: CGRectZero)
+                titleLabel.font = UIFont(name: "Panton-Regular", size: 20)
+                titleLabel.text = "Followed Sellers"
+                titleLabel.textColor = .whiteColor()
+                titleLabel.sizeToFit()
+                self.navigationItem.titleView = titleLabel
+            }
         } else if index == 2 {
             
         } else if index == 3 {
@@ -62,21 +69,30 @@ class HiddenViewController: UIViewController {
                 self.navigationItem.titleView = titleLabel
             }
         } else if index == 5 {
-            if SessionManager.isLoggedIn() {
+            if !SessionManager.isLoggedIn() {
                 var titleLabel = UILabel(frame: CGRectZero)
                 titleLabel.text = "Customize Shopping"
                 titleLabel.font = UIFont(name: "Panton-Regular", size: 20)
                 titleLabel.textColor = .whiteColor()
                 titleLabel.sizeToFit()
                 self.navigationItem.titleView = titleLabel
+            } else if SessionManager.isLoggedIn() {
+                var titleLabel = UILabel(frame: CGRectZero)
+                titleLabel.font = UIFont(name: "Panton-Regular", size: 20)
+                titleLabel.text = "Category Page"
+                titleLabel.textColor = .whiteColor()
+                titleLabel.sizeToFit()
+                self.navigationItem.titleView = titleLabel
             }
         } else if index == 6 {
-            var titleLabel = UILabel(frame: CGRectZero)
-            titleLabel.font = UIFont(name: "Panton-Regular", size: 20)
-            titleLabel.text = "Category Page"
-            titleLabel.textColor = .whiteColor()
-            titleLabel.sizeToFit()
-            self.navigationItem.titleView = titleLabel
+            if !SessionManager.isLoggedIn() {
+                var titleLabel = UILabel(frame: CGRectZero)
+                titleLabel.font = UIFont(name: "Panton-Regular", size: 20)
+                titleLabel.text = "Category Page"
+                titleLabel.textColor = .whiteColor()
+                titleLabel.sizeToFit()
+                self.navigationItem.titleView = titleLabel
+            }
         }
         
     }
diff --git a/YiLinkerOnlineBuyer/resources/ViewController/HomeContainerViewController.swift b/YiLinkerOnlineBuyer/resources/ViewController/HomeContainerViewController.swift
index 8dc29c4..29887c8 100644
--- a/YiLinkerOnlineBuyer/resources/ViewController/HomeContainerViewController.swift
+++ b/YiLinkerOnlineBuyer/resources/ViewController/HomeContainerViewController.swift
@@ -77,7 +77,21 @@ class HomeContainerViewController: UIViewController, UITabBarControllerDelegate,
     }
     
     func tabBarController(tabBarController: UITabBarController, shouldSelectViewController viewController: UIViewController) -> Bool {
-        if self != viewController && viewController != tabBarController.viewControllers![2] as! UIViewController {
+        if viewController == tabBarController.viewControllers![4] as! UIViewController {
+            if SessionManager.isLoggedIn() {
+                return true
+            } else {
+                UIAlertController.displayErrorMessageWithTarget(self, errorMessage: "Please log in to view your Cart.", title: "Error")
+                return false
+            }
+        } else if viewController == tabBarController.viewControllers![3] as! UIViewController {
+            if SessionManager.isLoggedIn() {
+                return true
+            } else {
+                UIAlertController.displayErrorMessageWithTarget(self, errorMessage: "Please log in to view your Wishlist.", title: "Error")
+                return false
+            }
+        } else if self != viewController && viewController != tabBarController.viewControllers![2] as! UIViewController {
             return true
         } else if self.customTabBarController?.isValidToSwitchToMenuTabBarItems != true {
             let storyBoard: UIStoryboard = UIStoryboard(name: "HomeStoryBoard", bundle: nil)
@@ -109,10 +123,10 @@ class HomeContainerViewController: UIViewController, UITabBarControllerDelegate,
             self.tabBarController?.presentViewController(animatedViewController!, animated: false, completion: nil)
             return false
         } else {
-            
             return true
         }
         
+        
     }
     
     // This function is for executing child view logic code
diff --git a/YiLinkerOnlineBuyer/resources/ViewController/MyPointsTableViewController.swift b/YiLinkerOnlineBuyer/resources/ViewController/MyPointsTableViewController.swift
index 1a934f4..8d1e57e 100644
--- a/YiLinkerOnlineBuyer/resources/ViewController/MyPointsTableViewController.swift
+++ b/YiLinkerOnlineBuyer/resources/ViewController/MyPointsTableViewController.swift
@@ -20,6 +20,8 @@ class MyPointsTableViewController: UITableViewController, PointsBreakdownTableVi
         super.viewDidLoad()
         
         initializeViews()
+        titleView()
+        backButton()
         registerNibs()
     }
 
@@ -40,6 +42,26 @@ class MyPointsTableViewController: UITableViewController, PointsBreakdownTableVi
         self.tableView.tableFooterView = UIView(frame: CGRectZero)
     }
     
+    func titleView() {
+        self.title = "My Points"
+    }
+    
+    func backButton() {
+        var backButton:UIButton = UIButton.buttonWithType(UIButtonType.Custom) as! UIButton
+        backButton.frame = CGRectMake(0, 0, 40, 40)
+        backButton.addTarget(self, action: "back", forControlEvents: UIControlEvents.TouchUpInside)
+        backButton.setImage(UIImage(named: "back-white"), forState: UIControlState.Normal)
+        var customBackButton:UIBarButtonItem = UIBarButtonItem(customView: backButton)
+        
+        let navigationSpacer: UIBarButtonItem = UIBarButtonItem(barButtonSystemItem: UIBarButtonSystemItem.FixedSpace, target: nil, action: nil)
+        navigationSpacer.width = -20
+        self.navigationItem.leftBarButtonItems = [navigationSpacer, customBackButton]
+    }
+    
+    func back() {
+        self.navigationController!.popViewControllerAnimated(true)
+    }
+    
     func registerNibs() {
         var nibEarned = UINib(nibName: cellPointsEarned, bundle: nil)
         self.tableView.registerNib(nibEarned, forCellReuseIdentifier: cellPointsEarned)
diff --git a/YiLinkerOnlineBuyer/resources/ViewController/ProductAttributeViewController.swift b/YiLinkerOnlineBuyer/resources/ViewController/ProductAttributeViewController.swift
index 412a4f7..07c5db9 100644
--- a/YiLinkerOnlineBuyer/resources/ViewController/ProductAttributeViewController.swift
+++ b/YiLinkerOnlineBuyer/resources/ViewController/ProductAttributeViewController.swift
@@ -170,65 +170,72 @@ class ProductAttributeViewController: UIViewController, UITableViewDelegate, Pro
         hideSelf("cancel")
     }
     
-    // MARK: - Methods
-    
-//    change 0 (zeros) to unitId
-//    enabling first combination only, make it dynamic
-    
-    func passModel(#productDetailsModel: ProductDetailsModel, selectedValue: NSArray, selectedId: NSArray, unitId: Int) {
-        let index: Int = unitId - 1
-        setDetail("http://shop.bench.com.ph/media/catalog/product/cache/1/image/9df78eab33525d08d6e5fb8d27136e95/Y/W/YWH0089BU4.jpg", title: productDetailsModel.title, price: productDetailsModel.productUnits[index].price)
-        self.productDetailsModel = productDetailsModel
-        self.attributes = productDetailsModel.attributes as [ProductAttributeModel]
-        self.selectedId = selectedId as! [String]
-        self.selectedValue = selectedValue as! [String]
-        self.unitId = String(unitId)
-        self.selectedCombination = productDetailsModel.productUnits[index].combination
-        
-        self.maximumStock = productDetailsModel.productUnits[index].quantity
-        self.availabilityStocksLabel.text = "Available stocks : \(productDetailsModel.productUnits[index].quantity)"
+    @IBAction func doneAction(sender: AnyObject) {
+        var selectionComplete: Bool = true
         
-        convertCombinationToString()
-        println(combinationString)
+        for i in 0..<self.selectedId.count {
+            if selectedId[i] == "-1" {
+                selectionComplete = false
+            }
+        }
         
-        if self.maximumStock != 0 {
-            stocks = 1
-            checkStock(stocks)
-        } else if self.maximumStock == 0 {
-            checkStock(0)
+        if selectionComplete {
+            hideSelf("done")
+            if let delegate = self.delegate {
+                delegate.doneActionPassDetailsToProductView(self, unitId: unitId, quantity: quantity, selectedId: selectedId)
+            }
         } else {
-            println("----ProductAttributeViewController")
+            hideSelf("cancel")
         }
+        
     }
     
-    func selectedAttribute(controller: ProductAttributeTableViewCell, attributeIndex: Int, attributeValue: String!, attributeId: Int) {
-        self.selectedId[attributeIndex] = String(attributeId)
-        self.selectedValue[attributeIndex] = String(attributeValue)
-        self.selectedCombination[attributeIndex] = String(attributeId)
-
-        for i in 0..<self.productDetailsModel.productUnits.count {
-            if self.productDetailsModel.productUnits[i].combination == selectedId {
-                unitId = self.productDetailsModel.productUnits[i].productUnitId
-            }
+    @IBAction func checkoutAction(sender: AnyObject) {
+        hideSelf("buy")
+        if let delegate = self.delegate {
+            delegate.gotoCheckoutFromAttributes(self)
         }
-        
-        maximumStock = availableStock(selectedCombination)
-        self.availabilityStocksLabel.text = "Available stocks : " + String(maximumStock)
-
-        listAvailableCombinations()
-        println(self.availableCombination)
-        self.tableView.reloadData()
-        
-        if self.maximumStock != 0 {
-            stocks = 1
-            checkStock(stocks)
-        } else if self.maximumStock == 0 {
-            checkStock(0)
+    }
+    
+    @IBAction func addToCartAction(sender: AnyObject) {
+        if SessionManager.isLoggedIn() {
+            let url: String = "http://online.api.easydeal.ph/api/v1/auth/cart/updateCartItem"
+            let quantity: String = String(stringInterpolationSegment: stocksLabel.text?.toInt())
+            
+            let params: NSDictionary = ["access_token": SessionManager.accessToken(),
+                "productId": self.productDetailsModel.id,
+                "unitId": String(unitId.toInt()! + 1),
+                "quantity": quantity]
+            
+            println(params)
+            
+            requestAddCartItem(url, params: params)
         } else {
-            println("----ProductAttributeViewController")
+            let alertController = UIAlertController(title: "Failed", message: "Please logged-in to add item in your cart.", preferredStyle: .Alert)
+            let defaultAction = UIAlertAction(title: "OK", style: .Default, handler: nil)
+            alertController.addAction(defaultAction)
+            self.presentViewController(alertController, animated: true, completion: nil)
+        }
+    }
+
+    func dimViewAction(gesture: UIGestureRecognizer) {
+        cancelAction(nil)
+    }
+    
+    func buyItNowAction(gesture: UIGestureRecognizer) {
+        hideSelf("buy")
+        if let delegate = self.delegate {
+            delegate.gotoCheckoutFromAttributes(self)
         }
     }
     
+    func addBadge(items: Int) {
+        let badgeValue = (self.tabController.tabBar.items![4] as! UITabBarItem).badgeValue?.toInt()
+        (self.tabController.tabBar.items![4] as! UITabBarItem).badgeValue = String(items)
+    }
+    
+    // MARK: - Methods
+    
     func listAvailableCombinations() {
         self.availableCombination = []
         let not = "[^,]*"
@@ -324,55 +331,28 @@ class ProductAttributeViewController: UIViewController, UITableViewDelegate, Pro
         button.alpha = 1
     }
     
-    func pressedDimViewFromProductPage(controller: ProductViewController) {
+    func hideSelf(action: String) {
         self.dismissViewControllerAnimated(true, completion: nil)
+        if let delegate = self.delegate {
+            delegate.dissmissAttributeViewController(self, type: action)
+        }
     }
     
-    func dimViewAction(gesture: UIGestureRecognizer) {
-        cancelAction(nil)
-    }
-    
-    @IBAction func doneAction(sender: AnyObject) {
-        var selectionComplete: Bool = true
-        
-        for i in 0..<self.selectedId.count {
-            if selectedId[i] == "-1" {
-                selectionComplete = false
-            }
-        }
-        
-        if selectionComplete {
-            hideSelf("done")
-            if let delegate = self.delegate {
-                delegate.doneActionPassDetailsToProductView(self, unitId: unitId, quantity: quantity, selectedId: selectedId)
-            }
-        } else {
-            hideSelf("cancel")
-        }
+    func tapGesture(action: Selector) -> UITapGestureRecognizer {
+        var tap = UITapGestureRecognizer()
+        tap.numberOfTapsRequired = 1
+        tap.addTarget(self, action: action)
         
+        return tap
     }
     
-    @IBAction func checkoutAction(sender: AnyObject) {
-        hideSelf("buy")
-        if let delegate = self.delegate {
-            delegate.gotoCheckoutFromAttributes(self)
-        }
+    func setBorderOf(#view: AnyObject, width: CGFloat, color: UIColor, radius: CGFloat) {
+        view.layer.borderWidth = width
+        view.layer.borderColor = color.CGColor
+        view.layer.cornerRadius = radius
     }
     
-    @IBAction func addToCartAction(sender: AnyObject) {
-        
-        let url: String = "http://online.api.easydeal.ph/api/v1/auth/cart/updateCartItem"
-        let quantity: String = String(stringInterpolationSegment: stocksLabel.text?.toInt())
-        
-        let params: NSDictionary = ["access_token": SessionManager.accessToken(),
-                                       "productId": self.productDetailsModel.id,
-                                          "unitId": String(unitId.toInt()! + 1),
-                                        "quantity": quantity]
-        
-        println(params)
-        
-        requestAddCartItem(url, params: params)
-    }
+    // MARK: - Requests
     
     func requestAddCartItem(url: String, params: NSDictionary!) {
         SVProgressHUD.show()
@@ -386,8 +366,10 @@ class ProductAttributeViewController: UIViewController, UITableViewDelegate, Pro
                 
                 if let tempVar = responseObject["isSuccessful"] as? Bool {
                     if tempVar {
+                        var data: NSDictionary = responseObject["data"] as! NSDictionary
+                        var items: NSArray = data["items"] as! NSArray
                         self.hideSelf("cart")
-                        self.addBadge()
+                        self.addBadge(items.count)
                     } else {
                         if let tempVar = responseObject["message"] as? String {
                             let alertController = UIAlertController(title: "Error", message: tempVar, preferredStyle: .Alert)
@@ -464,41 +446,65 @@ class ProductAttributeViewController: UIViewController, UITableViewDelegate, Pro
                 
         })
     }
+
+    // MARK: - Delegates
     
-    func hideSelf(action: String) {
-        self.dismissViewControllerAnimated(true, completion: nil)
-        if let delegate = self.delegate {
-            delegate.dissmissAttributeViewController(self, type: action)
-        }
-    }
-    
-    func addBadge() {
-        if let badgeValue = (self.tabController.tabBar.items![4] as! UITabBarItem).badgeValue?.toInt() {
-            (self.tabController.tabBar.items![4] as! UITabBarItem).badgeValue = String(badgeValue + 1)
+    func passModel(#productDetailsModel: ProductDetailsModel, selectedValue: NSArray, selectedId: NSArray, unitId: Int) {
+        let index: Int = unitId - 1
+        setDetail("", title: productDetailsModel.title, price: productDetailsModel.productUnits[index].price)
+        self.productDetailsModel = productDetailsModel
+        self.attributes = productDetailsModel.attributes as [ProductAttributeModel]
+        self.selectedId = selectedId as! [String]
+        self.selectedValue = selectedValue as! [String]
+        self.unitId = String(unitId)
+        self.selectedCombination = productDetailsModel.productUnits[index].combination
+        
+        self.maximumStock = productDetailsModel.productUnits[index].quantity
+        self.availabilityStocksLabel.text = "Available stocks : \(productDetailsModel.productUnits[index].quantity)"
+        
+        convertCombinationToString()
+        println(combinationString)
+        
+        if self.maximumStock != 0 {
+            stocks = 1
+            checkStock(stocks)
+        } else if self.maximumStock == 0 {
+            checkStock(0)
         } else {
-            (self.tabController.tabBar.items![4] as! UITabBarItem).badgeValue = "1"
+            println("----ProductAttributeViewController")
         }
     }
     
-    func tapGesture(action: Selector) -> UITapGestureRecognizer {
-        var tap = UITapGestureRecognizer()
-        tap.numberOfTapsRequired = 1
-        tap.addTarget(self, action: action)
-        
-        return tap
+    func pressedDimViewFromProductPage(controller: ProductViewController) {
+        self.dismissViewControllerAnimated(true, completion: nil)
     }
     
-    func buyItNowAction(gesture: UIGestureRecognizer) {
-        hideSelf("buy")
-        if let delegate = self.delegate {
-            delegate.gotoCheckoutFromAttributes(self)
+    func selectedAttribute(controller: ProductAttributeTableViewCell, attributeIndex: Int, attributeValue: String!, attributeId: Int) {
+        self.selectedId[attributeIndex] = String(attributeId)
+        self.selectedValue[attributeIndex] = String(attributeValue)
+        self.selectedCombination[attributeIndex] = String(attributeId)
+        
+        for i in 0..<self.productDetailsModel.productUnits.count {
+            if self.productDetailsModel.productUnits[i].combination == selectedId {
+                unitId = self.productDetailsModel.productUnits[i].productUnitId
+            }
+        }
+        
+        maximumStock = availableStock(selectedCombination)
+        self.availabilityStocksLabel.text = "Available stocks : " + String(maximumStock)
+        
+        listAvailableCombinations()
+        println(self.availableCombination)
+        self.tableView.reloadData()
+        
+        if self.maximumStock != 0 {
+            stocks = 1
+            checkStock(stocks)
+        } else if self.maximumStock == 0 {
+            checkStock(0)
+        } else {
+            println("----ProductAttributeViewController")
         }
-    }
-    
-    func setBorderOf(#view: AnyObject, width: CGFloat, color: UIColor, radius: CGFloat) {
-        view.layer.borderWidth = width
-        view.layer.borderColor = color.CGColor
-        view.layer.cornerRadius = radius
     }
     
 }
diff --git a/YiLinkerOnlineBuyer/resources/ViewController/ProductViewController.swift b/YiLinkerOnlineBuyer/resources/ViewController/ProductViewController.swift
index 76845d7..2d77893 100644
--- a/YiLinkerOnlineBuyer/resources/ViewController/ProductViewController.swift
+++ b/YiLinkerOnlineBuyer/resources/ViewController/ProductViewController.swift
@@ -106,89 +106,6 @@ class ProductViewController: UIViewController, ProductImagesViewDelegate, Produc
         super.viewWillDisappear(animated)
     }
     
-    func requestProductDetails(url: String, params: NSDictionary!) {
-        SVProgressHUD.show()
-        SVProgressHUD.setBackgroundColor(UIColor.clearColor())
-        
-        manager.GET(self.productUrl, parameters: params, success: {
-            (task: NSURLSessionDataTask!, responseObject: AnyObject!) in
-            
-            self.productDetailsModel = ProductDetailsModel.parseDataWithDictionary(responseObject)
-            self.attributes = self.productDetailsModel.attributes
-//            self.combinations = self.productDetailsModel.combinations
-            self.populateDetails()
-            
-            self.requestSellerDetails(self.sellerUrl, params: ["userId": "1"])
-            
-            self.productRequest = true
-            self.productSuccess = true
-            self.checkRequests()
-            
-            }, failure: {
-                (task: NSURLSessionDataTask!, error: NSError!) in
-                println("product failed")
-                self.productRequest = true
-                self.productSuccess = false
-                self.checkRequests()
-        })
-    }
-    
-    func requestReviewDetails(url: String, params: NSDictionary!) {
-        manager.POST(self.reviewUrl, parameters: params, success: {
-            (task: NSURLSessionDataTask!, responseObject: AnyObject!) in
-            
-            self.productReviewModel = ProductReviewModel.parseDataWithDictionary(responseObject)
-            self.reviewRequest = true
-            self.reviewSuccess = true
-            self.checkRequests()
-            
-            }, failure: {
-                (task: NSURLSessionDataTask!, error: NSError!) in
-                println("review failed")
-                self.reviewRequest = true
-                self.reviewSuccess = false
-                self.checkRequests()
-        })
-    }
-    
-    func requestSellerDetails(url: String, params: NSDictionary!) {
-        
-        manager.POST(self.sellerUrl, parameters: params, success: {
-            (task: NSURLSessionDataTask!, responseObject: AnyObject!) in
-            
-            self.productSellerModel = ProductSellerModel.parseDataWithDictionary(responseObject)
-            self.sellerRequest = true
-            self.sellerSuccess = true
-            self.checkRequests()
-            
-            }, failure: {
-                (task: NSURLSessionDataTask!, error: NSError!) in
-                println("seller failed")
-                self.sellerRequest = true
-                self.sellerSuccess = false
-                self.checkRequests()
-        })
-    }
-    
-    func configureNavigationBar() {
-        self.navigationController?.navigationBar.alpha = 0
-        UIApplication.sharedApplication().statusBarStyle = UIStatusBarStyle.Default
-        self.navigationController?.navigationBar.barTintColor = .whiteColor()
-        self.navigationController?.navigationBar.tintColor = .grayColor()
-        
-//        let close = UIBarButtonItem(image: img.image, style: .Plain, target: self, action: "barCloseAction")
-        let close = UIBarButtonItem(barButtonSystemItem: .Stop, target: self, action: "barCloseAction")
-        let wishlist = UIBarButtonItem(image: UIImage(named: "wishlist"), style: .Plain, target: self, action: "barWishlistAction")
-        let rate = UIBarButtonItem(image: UIImage(named: "rating"), style: .Plain, target: self, action: "barRateAction")
-        let message = UIBarButtonItem(image: UIImage(named: "msg"), style: .Plain, target: self, action: "barMessageAction")
-        let share = UIBarButtonItem(image: UIImage(named: "share"), style: .Plain, target: self, action: "barShareAction")
-        let negativeSpacer = UIBarButtonItem(barButtonSystemItem: UIBarButtonSystemItem.FixedSpace, target: nil, action: nil)
-        negativeSpacer.width = -10
-        
-        self.navigationItem.setLeftBarButtonItem(close, animated: false)
-        self.navigationItem.setRightBarButtonItems([share, negativeSpacer, message, negativeSpacer, rate, negativeSpacer, wishlist], animated: true)
-    }
-    
     // MARK: - Table View Data Source
     
     func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
@@ -214,6 +131,36 @@ class ProductViewController: UIViewController, ProductImagesViewDelegate, Produc
         return cell
     }
     
+    func scrollViewDidScroll(scrollView: UIScrollView) {
+        
+        if self.lastContentOffset > scrollView.contentOffset.y && scrollView.contentOffset.y <= 140.0 { // hide
+            if visibility >= 0.0 && visibility <= 1.0 {
+                visibility -= Double(scrollView.contentOffset.y / 14) * 0.005
+            }
+        } else if self.lastContentOffset < scrollView.contentOffset.y && scrollView.contentOffset.y >= 140.0 { // show
+            if  visibility <= 1.0 && visibility >= 0.0 {
+                visibility += Double(scrollView.contentOffset.y / 14) * 0.005
+            }
+        }
+        
+        if visibility > 1.0 {
+            visibility = 1.0
+        } else if visibility < 0.0 {
+            visibility = 0.0
+        }
+        
+        // reached top or bottom
+        
+        if scrollView.contentOffset.y <= 0.0 {
+            visibility = 0.0
+        } else if scrollView.contentOffset.y + scrollView.frame.size.height == scrollView.contentSize.height {
+            visibility = 1.0
+        }
+        
+        self.navigationController?.navigationBar.alpha = CGFloat(visibility)
+        self.lastContentOffset = scrollView.contentOffset.y
+    }
+    
     // MARK: - Init Views
     
     func getHeaderView() -> UIView {
@@ -337,189 +284,186 @@ class ProductViewController: UIViewController, ProductImagesViewDelegate, Produc
         return self.productSellerView
     }
     
-    // MARK: - Functions
-    
-    func setUpViews() {
-        self.setPosition(self.productDetailsView, from: self.productImagesView)
-        self.setPosition(self.productAttributeView, from: self.productDetailsView)
-        self.setPosition(self.productDescriptionView, from: self.productAttributeView)
-        self.setPosition(self.productReviewHeaderView, from: self.productDescriptionView)
-        self.setPosition(self.productSellerView, from: self.productReviewFooterView)
-        
-        newFrame = self.headerView.frame
-        newFrame.size.height = CGRectGetMaxY(self.productReviewHeaderView.frame)
-        self.headerView.frame = newFrame
-        
-        newFrame = self.footerView.frame
-        newFrame.size.height = CGRectGetMaxY(self.productSellerView.frame)
-        self.footerView.frame = newFrame
-        
-        self.tableView.tableFooterView = nil
-        self.tableView.tableFooterView = self.footerView
-        self.tableView.tableHeaderView = nil
-        self.tableView.tableHeaderView = self.headerView
-    }
-    
-    func setPosition(view: UIView!, from: UIView!) {
-        newFrame = view.frame
-        newFrame.origin.y = CGRectGetMaxY(from.frame) + 20
-        view.frame = newFrame
-    }
-    
-    func setBorderOf(#view: AnyObject, width: CGFloat, color: UIColor, radius: CGFloat) {
-        view.layer.borderWidth = width
-        view.layer.borderColor = color.CGColor
-        view.layer.cornerRadius = radius
-    }
-    
-    // MARK: - Product View Delegates
-    
-    func close(controller: ProductImagesView) {
-        self.navigationController?.popToRootViewControllerAnimated(true)
-    }
-    
-    func wishlist(controller: ProductImagesView) {
-        barWishlistAction()
-    }
-    
-    func rate(controller: ProductImagesView) {
-        showAlert("Rate")
-    }
+    // MARK: - Requests
     
-    func message(controller: ProductImagesView) {
-        showAlert("Message")
-    }
-    
-    func seeMoreAttribute(title: String) {
-        var attributeModal = ProductAttributeViewController(nibName: "ProductAttributeViewController", bundle: nil)
-        attributeModal.delegate = self
-        attributeModal.modalPresentationStyle = UIModalPresentationStyle.OverCurrentContext
-        attributeModal.providesPresentationContextTransitionStyle = true
-        attributeModal.definesPresentationContext = true
-        attributeModal.view.backgroundColor = UIColor.clearColor()
-        attributeModal.view.frame.origin.y = attributeModal.view.frame.size.height
-        attributeModal.passModel(productDetailsModel: productDetailsModel, selectedValue: selectedValue, selectedId: selectedId, unitId: unitId.toInt()!)
-        attributeModal.setTitle = title
-        attributeModal.tabController = self.tabController
-        attributeModal.screenWidth = self.view.frame.width
-        self.tabBarController?.presentViewController(attributeModal, animated: true, completion: nil)
+    func requestProductDetails(url: String, params: NSDictionary!) {
+        SVProgressHUD.show()
+        SVProgressHUD.setBackgroundColor(UIColor.clearColor())
         
-        UIView.animateWithDuration(0.3, animations: {
-            self.dimView.alpha = 0.5
-            self.dimView.layer.zPosition = 2
-            self.view.transform = CGAffineTransformMakeScale(0.92, 0.95)
-            self.navigationController?.navigationBar.alpha = 0.0
+        manager.GET(self.productUrl, parameters: params, success: {
+            (task: NSURLSessionDataTask!, responseObject: AnyObject!) in
+            
+            self.productDetailsModel = ProductDetailsModel.parseDataWithDictionary(responseObject)
+            self.productId = self.productDetailsModel.id
+
+            self.attributes = self.productDetailsModel.attributes
+            self.requestSellerDetails(self.sellerUrl, params: ["userId": self.productDetailsModel.sellerId])
+            
+            self.productRequest = true
+            self.productSuccess = true
+            self.checkRequests()
+            
+            }, failure: {
+                (task: NSURLSessionDataTask!, error: NSError!) in
+                println("product failed")
+                self.productRequest = true
+                self.productSuccess = false
+                self.checkRequests()
         })
     }
     
-    func seeMoreDescription(controller: ProductDescriptionView) {
-        let description = ProductDescriptionViewController(nibName: "ProductDescriptionViewController", bundle: nil)
-        description.url = self.productDetailsModel.fullDescription
-        self.tabBarController?.presentViewController(description, animated: true, completion: nil)
-    }
-    
-    func seeMoreReview(controller: ProductReviewFooterView) {
-        var reviewModal = ProductReviewViewController(nibName: "ProductReviewViewController", bundle: nil)
-        reviewModal.delegate = self
-        reviewModal.modalPresentationStyle = UIModalPresentationStyle.OverCurrentContext
-        reviewModal.providesPresentationContextTransitionStyle = true
-        reviewModal.definesPresentationContext = true
-        reviewModal.view.backgroundColor = UIColor.clearColor()
-        reviewModal.view.frame.origin.y = reviewModal.view.frame.size.height
-        reviewModal.passModel(self.productReviewModel)
-        self.tabBarController?.presentViewController(reviewModal, animated: true, completion: nil)
-        
-        UIView.animateWithDuration(0.3, animations: {
-            self.dimView.alpha = 0.5
-            self.dimView.layer.zPosition = 2
-            self.view.transform = CGAffineTransformMakeScale(0.92, 0.93)
-            self.navigationController?.navigationBar.alpha = 0.0
+    func requestReviewDetails(url: String, params: NSDictionary!) {
+        manager.POST(self.reviewUrl, parameters: params, success: {
+            (task: NSURLSessionDataTask!, responseObject: AnyObject!) in
+            
+            self.productReviewModel = ProductReviewModel.parseDataWithDictionary(responseObject)
+            self.reviewRequest = true
+            self.reviewSuccess = true
+            self.checkRequests()
+            
+            }, failure: {
+                (task: NSURLSessionDataTask!, error: NSError!) in
+                println("review failed")
+                self.reviewRequest = true
+                self.reviewSuccess = false
+                self.checkRequests()
         })
     }
     
-    func seeMoreSeller(controller: ProductSellerView) {
-        let seller = SellerViewController(nibName: "SellerViewController", bundle: nil)
-        self.navigationController?.pushViewController(seller, animated: true)
-    }
-    
-    func share(controller: ProductImagesView) {
-        shareTextImageAndURL(sharingText: "Sample Text", sharingImage: UIImage(named: "s61"), sharingURL: NSURL(fileURLWithPath: "http://www.Easyshop.ph"))
-    }
-    
-    func shareTextImageAndURL(#sharingText: String?, sharingImage: UIImage?, sharingURL: NSURL?) {
-        var sharingItems = [AnyObject]()
-        
-        if let text = sharingText {
-            sharingItems.append(text)
-        }
-        if let image = sharingImage {
-            sharingItems.append(image)
-        }
-        if let url = sharingURL {
-            sharingItems.append(url)
-        }
-        
-        let activityViewController = UIActivityViewController(activityItems: sharingItems, applicationActivities: nil)
-        self.presentViewController(activityViewController, animated: true, completion: nil)
-    }
-    
-    func dissmissAttributeViewController(controller: ProductAttributeViewController, type: String) {
+    func requestSellerDetails(url: String, params: NSDictionary!) {
         
-        UIView.animateWithDuration(0.3, animations: {
-            self.view.transform = CGAffineTransformMakeTranslation(1, 1)
-            self.dimView.alpha = 0
-            self.dimView.layer.zPosition = -1
-            self.navigationController?.navigationBar.alpha = CGFloat(self.visibility)
-            }, completion: { finished in
-                if type == "cart" {
-                    self.showAlert("This item has been added to your cart.")
-                    self.loadViewsWithDetails()
-                } else if type == "done" {
-//                    self.showAlert(type)
-                }
-            })
-
-    }
-    
-    func doneActionPassDetailsToProductView(controller: ProductAttributeViewController, unitId: String, quantity: Int, selectedId: NSArray) {
-        self.unitId = unitId
-        self.selectedId = selectedId as! [String]
-        self.setAttributes(self.productDetailsModel.attributes, productUnits: self.productDetailsModel.productUnits, unitId: unitId, quantity: quantity)
+        manager.POST(self.sellerUrl, parameters: params, success: {
+            (task: NSURLSessionDataTask!, responseObject: AnyObject!) in
+            
+            self.productSellerModel = ProductSellerModel.parseDataWithDictionary(responseObject)
+            self.sellerRequest = true
+            self.sellerSuccess = true
+            self.checkRequests()
+            
+            }, failure: {
+                (task: NSURLSessionDataTask!, error: NSError!) in
+                println("seller failed")
+                self.sellerRequest = true
+                self.sellerSuccess = false
+                self.checkRequests()
+        })
     }
+    
+    func requestUpdateWishlistItem() {
+        
+        SVProgressHUD.show()
+        let manager = APIManager.sharedInstance
+        let params = ["access_token": SessionManager.accessToken(),
+            "productId": self.productId,
+            "unitId": self.unitId,
+            "quantity": "1",
+            "wishlist": "true"]
 
-    func gotoCheckoutFromAttributes(controller: ProductAttributeViewController) {
-        let checkout = CheckoutContainerViewController(nibName: "CheckoutContainerViewController", bundle: nil)
-        //self.navigationController?.pushViewController(checkout, animated: true)
-        let navigationController: UINavigationController = UINavigationController(rootViewController: checkout)
-        navigationController.navigationBar.barTintColor = Constants.Colors.appTheme
-        self.tabBarController?.presentViewController(navigationController, animated: true, completion: nil)
+        manager.POST("http://online.api.easydeal.ph/api/v1/auth/cart/updateCartItem", parameters: params, success: {
+            (task: NSURLSessionDataTask!, responseObject: AnyObject!) in
+            
+            var data: NSDictionary = responseObject["data"] as! NSDictionary
+            var items: NSArray = data["items"] as! NSArray
+            
+            if (responseObject["isSuccessful"] as! Bool) {
+                self.addWishlistBadge(items.count)
+                self.showAlert(title: nil, message: "This item has been added to your wishlist")
+            } else {
+                self.showAlert(title: "Error", message: responseObject["message"] as! String)
+            }
+            
+            SVProgressHUD.dismiss()
+            
+            }, failure: {
+                (task: NSURLSessionDataTask!, error: NSError!) in
+                let task: NSHTTPURLResponse = task.response as! NSHTTPURLResponse
+                
+                if task.statusCode == 401 {
+                    self.requestRefreshToken()
+                } else {
+                    println(error)
+                    SVProgressHUD.dismiss()
+                }
+        })
     }
     
-    func pressedCancelReview(controller: ProductReviewViewController) {
-        UIView.animateWithDuration(0.3, animations: {
-            self.view.transform = CGAffineTransformMakeTranslation(1, 1)
-            self.dimView.alpha = 0
-            self.dimView.layer.zPosition = -1
-            self.navigationController?.navigationBar.alpha = CGFloat(self.visibility)
+    func requestRefreshToken() {
+        let url: String = "http://online.api.easydeal.ph/api/v1/login"
+        let params: NSDictionary = ["client_id": Constants.Credentials.clientID,
+            "client_secret": Constants.Credentials.clientSecret,
+            "grant_type": Constants.Credentials.grantRefreshToken,
+            "refresh_token": SessionManager.refreshToken()]
+        
+        let manager = APIManager.sharedInstance
+        manager.POST(url, parameters: params, success: {
+            (task: NSURLSessionDataTask!, responseObject: AnyObject!) in
+            
+            SVProgressHUD.dismiss()
+            SessionManager.parseTokensFromResponseObject(responseObject as! NSDictionary)
+            self.requestUpdateWishlistItem()
+            
+            }, failure: {
+                (task: NSURLSessionDataTask!, error: NSError!) in
+                SVProgressHUD.dismiss()
+                let task: NSHTTPURLResponse = task.response as! NSHTTPURLResponse
+                
+                self.showAlert(title: "Something went wrong", message: nil)
+                
         })
     }
     
-    func populateDetails() {
-//        self.productImagesView.setDetails(productDetailsModel.title, price: productDetailsModel.newPrice, images: images)
-//        self.setDetails(productDetailsModel.details)
-//        self.setAttributes(productDetailsModel.attributes, combinationModel: productDetailsModel.combinations)
-//        self.productDescriptionView.setDescription(productDetailsModel.shortDescription, full: productDetailsModel.fullDescription)
-    }
+    // MARK: - Methods
     
-    func populateReviews() {
-//        println("POPULATING PRODUCT REVIEWS")
-//        self.productReviewHeaderView.setRating(self.productReviewModel.rating)
-//        self.tableView.reloadData()
+    func configureNavigationBar() {
+        self.navigationController?.navigationBar.alpha = 0
+        UIApplication.sharedApplication().statusBarStyle = UIStatusBarStyle.Default
+        self.navigationController?.navigationBar.barTintColor = .whiteColor()
+        self.navigationController?.navigationBar.tintColor = .grayColor()
+        
+        //        let close = UIBarButtonItem(image: img.image, style: .Plain, target: self, action: "barCloseAction")
+        let close = UIBarButtonItem(barButtonSystemItem: .Stop, target: self, action: "barCloseAction")
+        let wishlist = UIBarButtonItem(image: UIImage(named: "wishlist"), style: .Plain, target: self, action: "barWishlistAction")
+        let rate = UIBarButtonItem(image: UIImage(named: "rating"), style: .Plain, target: self, action: "barRateAction")
+        let message = UIBarButtonItem(image: UIImage(named: "msg"), style: .Plain, target: self, action: "barMessageAction")
+        let share = UIBarButtonItem(image: UIImage(named: "share"), style: .Plain, target: self, action: "barShareAction")
+        let negativeSpacer = UIBarButtonItem(barButtonSystemItem: UIBarButtonSystemItem.FixedSpace, target: nil, action: nil)
+        negativeSpacer.width = -10
+        
+        self.navigationItem.setLeftBarButtonItem(close, animated: false)
+        self.navigationItem.setRightBarButtonItems([share, negativeSpacer, message, negativeSpacer, rate, negativeSpacer, wishlist], animated: true)
     }
     
-    func populateSeller() {
-        println("POPULATING DETAILS")
+    func setUpViews() {
+        self.setPosition(self.productDetailsView, from: self.productImagesView)
+        self.setPosition(self.productAttributeView, from: self.productDetailsView)
+        self.setPosition(self.productDescriptionView, from: self.productAttributeView)
+        self.setPosition(self.productReviewHeaderView, from: self.productDescriptionView)
+        self.setPosition(self.productSellerView, from: self.productReviewFooterView)
+        
+        newFrame = self.headerView.frame
+        newFrame.size.height = CGRectGetMaxY(self.productReviewHeaderView.frame)
+        self.headerView.frame = newFrame
+        
+        newFrame = self.footerView.frame
+        newFrame.size.height = CGRectGetMaxY(self.productSellerView.frame)
+        self.footerView.frame = newFrame
         
+        self.tableView.tableFooterView = nil
+        self.tableView.tableFooterView = self.footerView
+        self.tableView.tableHeaderView = nil
+        self.tableView.tableHeaderView = self.headerView
+    }
+    
+    func setPosition(view: UIView!, from: UIView!) {
+        newFrame = view.frame
+        newFrame.origin.y = CGRectGetMaxY(from.frame) + 20
+        view.frame = newFrame
+    }
+    
+    func setBorderOf(#view: AnyObject, width: CGFloat, color: UIColor, radius: CGFloat) {
+        view.layer.borderWidth = width
+        view.layer.borderColor = color.CGColor
+        view.layer.cornerRadius = radius
     }
     
     func loadViewsWithDetails() {
@@ -537,7 +481,7 @@ class ProductViewController: UIViewController, ProductImagesViewDelegate, Produc
         self.getFooterView().addSubview(self.getProductSellerView())
         
         self.productImagesView.setDetails(self.productDetailsModel, unitId: unitId.toInt()!, width: self.view.frame.size.width)
-//        self.setDetails(productDetailsModel.details)
+        //        self.setDetails(productDetailsModel.details)
         self.setDetails(["Free Shipping"])
         self.setAttributes(self.productDetailsModel.attributes, productUnits: self.productDetailsModel.productUnits, unitId: "1", quantity: 0)
         self.productDescriptionView.setDescription(productDetailsModel.shortDescription, full: productDetailsModel.fullDescription)
@@ -597,8 +541,8 @@ class ProductViewController: UIViewController, ProductImagesViewDelegate, Produc
         selectedName = []
         selectedValue = []
         selectedId = []
-//        selectedName.append("Quantity")
-//        selectedValue.append(String(combinationModel[0].quantity) + "x")
+        //        selectedName.append("Quantity")
+        //        selectedValue.append(String(combinationModel[0].quantity) + "x")
         
         let index: Int = unitId.toInt()! - 1
         println(index)
@@ -668,49 +612,169 @@ class ProductViewController: UIViewController, ProductImagesViewDelegate, Produc
         setUpViews()
     }
     
-    // MARK: Actions
-    
-    @IBAction func addToCartAction(sender: AnyObject) {
-        seeMoreAttribute("cart")
+    func checkRequests() {
         
+        if productSuccess && reviewSuccess && sellerSuccess {
+            self.loadViewsWithDetails()
+        } else if productRequest && reviewRequest && sellerRequest {
+            if productSuccess == false || reviewSuccess == false || sellerSuccess == false {
+                addEmptyView()
+                SVProgressHUD.dismiss()
+            }
+        }
     }
     
-    func buyItNowAction(gesture: UIGestureRecognizer) {
-        seeMoreAttribute("buy")
+    func addEmptyView() {
+        self.emptyView = UIView.loadFromNibNamed("EmptyView", bundle: nil) as? EmptyView
+        self.emptyView!.delegate = self
+        self.view.addSubview(self.emptyView!)
     }
     
-    func scrollViewDidScroll(scrollView: UIScrollView) {
+    func addWishlistBadge(items: Int) {
+        let badgeValue = (self.tabController.tabBar.items![3] as! UITabBarItem).badgeValue?.toInt()
+        (self.tabController.tabBar.items![3] as! UITabBarItem).badgeValue = String(items)
+    }
+
+    // MARK: - Product View Delegate
+    
+    func close(controller: ProductImagesView) {
+        self.barCloseAction()
+    }
+    
+    func wishlist(controller: ProductImagesView) {
+        self.barWishlistAction()
+    }
+    
+    func rate(controller: ProductImagesView) {
+        self.barRateAction()
+    }
+    
+    func message(controller: ProductImagesView) {
+        self.barMessageAction()
+    }
+    
+    func share(controller: ProductImagesView) {
+        self.barShareAction()
+    }
+    
+    func seeMoreAttribute(title: String) {
+        var attributeModal = ProductAttributeViewController(nibName: "ProductAttributeViewController", bundle: nil)
+        attributeModal.delegate = self
+        attributeModal.modalPresentationStyle = UIModalPresentationStyle.OverCurrentContext
+        attributeModal.providesPresentationContextTransitionStyle = true
+        attributeModal.definesPresentationContext = true
+        attributeModal.view.backgroundColor = UIColor.clearColor()
+        attributeModal.view.frame.origin.y = attributeModal.view.frame.size.height
+        attributeModal.passModel(productDetailsModel: productDetailsModel, selectedValue: selectedValue, selectedId: selectedId, unitId: unitId.toInt()!)
+        attributeModal.setTitle = title
+        attributeModal.tabController = self.tabController
+        attributeModal.screenWidth = self.view.frame.width
+        self.tabBarController?.presentViewController(attributeModal, animated: true, completion: nil)
         
-        if self.lastContentOffset > scrollView.contentOffset.y && scrollView.contentOffset.y <= 140.0 { // hide
-            if visibility >= 0.0 && visibility <= 1.0 {
-                visibility -= Double(scrollView.contentOffset.y / 14) * 0.005
-            }
-        } else if self.lastContentOffset < scrollView.contentOffset.y && scrollView.contentOffset.y >= 140.0 { // show
-            if  visibility <= 1.0 && visibility >= 0.0 {
-                visibility += Double(scrollView.contentOffset.y / 14) * 0.005
-            }
-        }
+        UIView.animateWithDuration(0.3, animations: {
+            self.dimView.alpha = 0.5
+            self.dimView.layer.zPosition = 2
+            self.view.transform = CGAffineTransformMakeScale(0.92, 0.95)
+            self.navigationController?.navigationBar.alpha = 0.0
+        })
+    }
+    
+    // MARK: - Product Description Delegate
+    
+    func seeMoreDescription(controller: ProductDescriptionView) {
+        let description = ProductDescriptionViewController(nibName: "ProductDescriptionViewController", bundle: nil)
+        description.url = self.productDetailsModel.fullDescription
+        self.tabBarController?.presentViewController(description, animated: true, completion: nil)
+    }
+    
+    // MARK: - Product Attribute Delegate
+    
+    func dissmissAttributeViewController(controller: ProductAttributeViewController, type: String) {
         
-        if visibility > 1.0 {
-            visibility = 1.0
-        } else if visibility < 0.0 {
-            visibility = 0.0
+        UIView.animateWithDuration(0.3, animations: {
+            self.view.transform = CGAffineTransformMakeTranslation(1, 1)
+            self.dimView.alpha = 0
+            self.dimView.layer.zPosition = -1
+            self.navigationController?.navigationBar.alpha = CGFloat(self.visibility)
+            }, completion: { finished in
+                if type == "cart" {
+                    self.showAlert(title: nil, message: "This item has been added to your cart.")
+                    self.loadViewsWithDetails()
+                } else if type == "done" {
+//                    self.showAlert(type)
+                }
+            })
+
+    }
+    
+    func doneActionPassDetailsToProductView(controller: ProductAttributeViewController, unitId: String, quantity: Int, selectedId: NSArray) {
+        self.unitId = unitId
+        self.selectedId = selectedId as! [String]
+        self.setAttributes(self.productDetailsModel.attributes, productUnits: self.productDetailsModel.productUnits, unitId: unitId, quantity: quantity)
+    }
+
+    func gotoCheckoutFromAttributes(controller: ProductAttributeViewController) {
+        if SessionManager.isLoggedIn() {
+            let checkout = CheckoutContainerViewController(nibName: "CheckoutContainerViewController", bundle: nil)
+            //self.navigationController?.pushViewController(checkout, animated: true)
+            let navigationController: UINavigationController = UINavigationController(rootViewController: checkout)
+            navigationController.navigationBar.barTintColor = Constants.Colors.appTheme
+            self.tabBarController?.presentViewController(navigationController, animated: true, completion: nil)
+        } else {
+            showAlert(title: "Goto Guest Checkout", message: nil)
         }
+    }
+    
+    // MARK: - Product Review Delegate
+    
+    func pressedCancelReview(controller: ProductReviewViewController) {
+        UIView.animateWithDuration(0.3, animations: {
+            self.view.transform = CGAffineTransformMakeTranslation(1, 1)
+            self.dimView.alpha = 0
+            self.dimView.layer.zPosition = -1
+            self.navigationController?.navigationBar.alpha = CGFloat(self.visibility)
+        })
+    }
+    
+    func seeMoreReview(controller: ProductReviewFooterView) {
+        var reviewModal = ProductReviewViewController(nibName: "ProductReviewViewController", bundle: nil)
+        reviewModal.delegate = self
+        reviewModal.modalPresentationStyle = UIModalPresentationStyle.OverCurrentContext
+        reviewModal.providesPresentationContextTransitionStyle = true
+        reviewModal.definesPresentationContext = true
+        reviewModal.view.backgroundColor = UIColor.clearColor()
+        reviewModal.view.frame.origin.y = reviewModal.view.frame.size.height
+        reviewModal.passModel(self.productReviewModel)
+        self.tabBarController?.presentViewController(reviewModal, animated: true, completion: nil)
         
-        // reached top or bottom
-        
-        if scrollView.contentOffset.y <= 0.0 {
-             visibility = 0.0
-        } else if scrollView.contentOffset.y + scrollView.frame.size.height == scrollView.contentSize.height {
-            visibility = 1.0
-        }
+        UIView.animateWithDuration(0.3, animations: {
+            self.dimView.alpha = 0.5
+            self.dimView.layer.zPosition = 2
+            self.view.transform = CGAffineTransformMakeScale(0.92, 0.93)
+            self.navigationController?.navigationBar.alpha = 0.0
+        })
+    }
+    
+    // MARK: - Product Seller Delegate
+    
+    func seeMoreSeller(controller: ProductSellerView) {
+        let seller = SellerViewController(nibName: "SellerViewController", bundle: nil)
+        self.navigationController?.pushViewController(seller, animated: true)
+    }
+    
+    // MARK: Actions
+    
+    @IBAction func addToCartAction(sender: AnyObject) {
+        seeMoreAttribute("cart")
         
-        self.navigationController?.navigationBar.alpha = CGFloat(visibility)
-        self.lastContentOffset = scrollView.contentOffset.y
     }
     
-    func showAlert(text: String) {
-        let alertController = UIAlertController(title: "YiLinker", message: text, preferredStyle: .Alert)
+    func buyItNowAction(gesture: UIGestureRecognizer) {
+        seeMoreAttribute("buy")
+    }
+    
+    func showAlert(#title: String!, message: String!) {
+        let alertController = UIAlertController(title: title, message: message, preferredStyle: .Alert)
         let defaultAction = UIAlertAction(title: "OK", style: .Default, handler: nil)
         alertController.addAction(defaultAction)
         presentViewController(alertController, animated: true, completion: nil)
@@ -724,96 +788,45 @@ class ProductViewController: UIViewController, ProductImagesViewDelegate, Produc
         return tap
     }
     
-    // Navigation Bar Actions
-    
     func gotoAttributes(gesture: UIGestureRecognizer) {
         seeMoreAttribute("")
     }
     
-    func checkRequests() {
-        
-//        println("Request Product Details Successful: " + String(stringInterpolationSegment: productSuccess))
-//        println("Request Review  Details Successful: " + String(stringInterpolationSegment: reviewSuccess))
-//        println("Request Seller  Details Successful: " + String(stringInterpolationSegment: sellerSuccess))
-        
-        if productSuccess && reviewSuccess && sellerSuccess {
-            self.loadViewsWithDetails()
-        } else if productRequest && reviewRequest && sellerRequest {
-            if productSuccess == false || reviewSuccess == false || sellerSuccess == false {
-                addEmptyView()
-                SVProgressHUD.dismiss()
-            }
-        }
-    }
-    
-    func addEmptyView() {
-        self.emptyView = UIView.loadFromNibNamed("EmptyView", bundle: nil) as? EmptyView
-        self.emptyView!.delegate = self
-        self.view.addSubview(self.emptyView!)
-    }
-    
     func didTapReload() {
         self.requestProductDetails(productUrl, params: nil)
         self.requestReviewDetails(reviewUrl, params: nil)
         self.emptyView?.removeFromSuperview()
     }
+    
+    // MARK: - Navigation Bar Actions
 
     func barCloseAction() {
         self.navigationController?.popToRootViewControllerAnimated(true)
     }
 
     func barWishlistAction() {
-//        var imageToAnimate = UIImageView()
-//        imageToAnimate.frame = self.productImagesView.collectionView.frame
-//        
-//        for subView in self.productImagesView.collectionView.subviews as! [UIView] {
-//            for views in subView.subviews as! [UIView] {
-//                for imageView in views.subviews as! [UIImageView] {
-//                    if imageView.isKindOfClass(UIImageView) {
-//                        imageToAnimate.image = imageView.image
-//                    }
-//                }
-//            }
-//        }
-//        
-//        self.view.addSubview(imageToAnimate)
-//        UIView.animateWithDuration(0.3, animations: {
-//            imageToAnimate.transform = CGAffineTransformMakeScale(0.1, 0.1)
-//            }, completion: { finished in //after scaling
-//                UIView.animateWithDuration(0.3, animations: { //after animating
-//                    imageToAnimate.center = CGPointMake(250, self.tabController.tabBar.frame.origin.y - (self.tabController.tabBar.frame.size.height / 2))
-//                    imageToAnimate.alpha = 0.0
-//                    }, completion: { finished in
-//                        if let badgeValue = (self.tabController.tabBar.items![3] as! UITabBarItem).badgeValue?.toInt() {
-//                            (self.tabController.tabBar.items![3] as! UITabBarItem).badgeValue = String(badgeValue + 1)
-//                        } else {
-//                            (self.tabController.tabBar.items![3] as! UITabBarItem).badgeValue = "1"
-//                        }
-//                })
-//        })
-        
-        showAlert("This item has been added to your wishlist")
-        
-        if let badgeValue = (self.tabController.tabBar.items![3] as! UITabBarItem).badgeValue?.toInt() {
-            (self.tabController.tabBar.items![3] as! UITabBarItem).badgeValue = String(badgeValue + 1)
+        if SessionManager.isLoggedIn() {
+            requestUpdateWishlistItem()
         } else {
-            (self.tabController.tabBar.items![3] as! UITabBarItem).badgeValue = "1"
+            showAlert(title: "Failed", message: "Please logged-in to add item in your wishlist.")
         }
-        
-        
-//        SVProgressHUD.dismiss()
     }
 
     func barRateAction() {
-        showAlert("Rate")
+        showAlert(title: "Coming Soon", message: nil)
     }
 
     func barMessageAction() {
-        showAlert("Message")
+        showAlert(title: "Go to Messaging", message: nil)
     }
 
     func barShareAction() {
-        shareTextImageAndURL(sharingText: "Sample Text", sharingImage: UIImage(named: "s61"), sharingURL: NSURL(fileURLWithPath: "http://www.Easyshop.ph"))
+        var sharingItems = [AnyObject]()
+        sharingItems.append("Sample Caption" + "\n")
+        sharingItems.append(NSURL(string: "http://online.api.easydeal.ph/")!)
+        
+        let shareViewController = UIActivityViewController(activityItems: sharingItems, applicationActivities: nil)
+        self.presentViewController(shareViewController, animated: true, completion: nil)
     }
     
 }
\ No newline at end of file
diff --git a/YiLinkerOnlineBuyer/resources/ViewController/ProfileSettingsViewController.swift b/YiLinkerOnlineBuyer/resources/ViewController/ProfileSettingsViewController.swift
new file mode 100644
index 0000000..7b1f0f9
--- /dev/null
+++ b/YiLinkerOnlineBuyer/resources/ViewController/ProfileSettingsViewController.swift
@@ -0,0 +1,161 @@
+//
+//  ProfileSettingsViewController.swift
+//  YiLinkerOnlineBuyer
+//
+//  Created by John Paul Chan on 8/23/15.
+//  Copyright (c) 2015 yiLinker-online-buyer. All rights reserved.
+//
+
+import UIKit
+
+class ProfileSettingsViewController: UIViewController, UITableViewDataSource, UITableViewDelegate, ProfileSettingsTableViewCellDelegate {
+
+    let profileSettingsIdentifier: String = "ProfileSettingsTableViewCell"
+    
+    @IBOutlet weak var tableView: UITableView!
+    
+    var tableData: [String] = ["Receive Notifications via SMS?", "Receive Notifications via Email?", "Deactivate My Account?"]
+    var tableDataStatus: [Bool] = [true, false, false]
+    
+    override func viewDidLoad() {
+        super.viewDidLoad()
+
+        initializeViews()
+        titleView()
+        backButton()
+        registerNibs()
+    }
+
+    override func didReceiveMemoryWarning() {
+        super.didReceiveMemoryWarning()
+        // Dispose of any resources that can be recreated.
+    }
+    
+    func initializeViews() {
+        //Add Nav Bar
+        if self.respondsToSelector("edgesForExtendedLayout") {
+            self.edgesForExtendedLayout = UIRectEdge.None
+        }
+        
+        tableView.tableFooterView = UIView(frame: CGRectZero)
+    }
+    
+    func titleView() {
+        self.title = "Settings"
+    }
+    
+    func backButton() {
+        var backButton:UIButton = UIButton.buttonWithType(UIButtonType.Custom) as! UIButton
+        backButton.frame = CGRectMake(0, 0, 40, 40)
+        backButton.addTarget(self, action: "back", forControlEvents: UIControlEvents.TouchUpInside)
+        backButton.setImage(UIImage(named: "back-white"), forState: UIControlState.Normal)
+        var customBackButton:UIBarButtonItem = UIBarButtonItem(customView: backButton)
+        
+        let navigationSpacer: UIBarButtonItem = UIBarButtonItem(barButtonSystemItem: UIBarButtonSystemItem.FixedSpace, target: nil, action: nil)
+        navigationSpacer.width = -20
+        self.navigationItem.leftBarButtonItems = [navigationSpacer, customBackButton]
+    }
+    
+    func back() {
+        self.navigationController!.popViewControllerAnimated(true)
+    }
+    
+    func registerNibs() {
+        var nib = UINib(nibName: profileSettingsIdentifier, bundle: nil)
+        tableView.registerNib(nib, forCellReuseIdentifier: profileSettingsIdentifier)
+    }
+    
+    /*
+    // MARK: - Navigation
+    
+    // In a storyboard-based application, you will often want to do a little preparation before navigation
+    override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {
+    // Get the new view controller using segue.destinationViewController.
+    // Pass the selected object to the new view controller.
+    }
+    */
+    
+    // MARK: - Table view data source
+    
+    func numberOfSectionsInTableView(tableView: UITableView) -> Int {
+        // #warning Potentially incomplete method implementation.
+        // Return the number of sections.
+        return 1
+    }
+    
+    func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
+        // #warning Incomplete method implementation.
+        // Return the number of rows in the section.
+        return tableData.count
+    }
+    
+    func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {
+        let cell = tableView.dequeueReusableCellWithIdentifier(profileSettingsIdentifier, forIndexPath: indexPath) as! ProfileSettingsTableViewCell
+        
+        cell.delegate = self
+        cell.settingsLabel.text = tableData[indexPath.row]
+        cell.settingsSwitch.setOn(tableDataStatus[indexPath.row], animated: true)
+        
+        return cell
+    }
+    
+    func tableView(tableView: UITableView, heightForRowAtIndexPath indexPath: NSIndexPath) -> CGFloat {
+        return 50
+    }
+    
+    /*
+    func tableView(tableView: UITableView, didSelectRowAtIndexPath indexPath: NSIndexPath) {
+    
+    }*/
+    
+    /*
+    // Override to support conditional editing of the table view.
+    override func tableView(tableView: UITableView, canEditRowAtIndexPath indexPath: NSIndexPath) -> Bool {
+    // Return NO if you do not want the specified item to be editable.
+    return true
+    }
+    */
+    
+    /*
+    // Override to support editing the table view.
+    override func tableView(tableView: UITableView, commitEditingStyle editingStyle: UITableViewCellEditingStyle, forRowAtIndexPath indexPath: NSIndexPath) {
+    if editingStyle == .Delete {
+    // Delete the row from the data source
+    tableView.deleteRowsAtIndexPaths([indexPath], withRowAnimation: .Fade)
+    } else if editingStyle == .Insert {
+    // Create a new instance of the appropriate class, insert it into the array, and add a new row to the table view
+    }
+    }
+    */
+    
+    /*
+    // Override to support rearranging the table view.
+    override func tableView(tableView: UITableView, moveRowAtIndexPath fromIndexPath: NSIndexPath, toIndexPath: NSIndexPath) {
+    
+    }
+    */
+    
+    /*
+    // Override to support conditional rearranging of the table view.
+    override func tableView(tableView: UITableView, canMoveRowAtIndexPath indexPath: NSIndexPath) -> Bool {
+    // Return NO if you do not want the item to be re-orderable.
+    return true
+    }
+    */
+
+
+    /*
+    // MARK: - Navigation
+
+    // In a storyboard-based application, you will often want to do a little preparation before navigation
+    override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {
+        // Get the new view controller using segue.destinationViewController.
+        // Pass the selected object to the new view controller.
+    }
+    */
+
+    // MARK: - ProfileSettingsTableViewCellDelegate
+    func settingsSwitchAction(sender: AnyObject, value: Bool) {
+        
+    }
+}
diff --git a/YiLinkerOnlineBuyer/resources/ViewController/ProfileSettingsViewController.xib b/YiLinkerOnlineBuyer/resources/ViewController/ProfileSettingsViewController.xib
new file mode 100644
index 0000000..37f86bf
--- /dev/null
+++ b/YiLinkerOnlineBuyer/resources/ViewController/ProfileSettingsViewController.xib
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="7706" systemVersion="14E46" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" useTraitCollections="YES">
+    <dependencies>
+        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="7703"/>
+    </dependencies>
+    <objects>
+        <placeholder placeholderIdentifier="IBFilesOwner" id="-1" userLabel="File's Owner" customClass="ProfileSettingsViewController" customModule="YiLinkerOnlineBuyer" customModuleProvider="target">
+            <connections>
+                <outlet property="tableView" destination="8Za-v0-MfX" id="6tZ-hG-gQB"/>
+                <outlet property="view" destination="i5M-Pr-FkT" id="sfx-zR-JGt"/>
+            </connections>
+        </placeholder>
+        <placeholder placeholderIdentifier="IBFirstResponder" id="-2" customClass="UIResponder"/>
+        <view clearsContextBeforeDrawing="NO" contentMode="scaleToFill" id="i5M-Pr-FkT">
+            <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
+            <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
+            <subviews>
+                <tableView clipsSubviews="YES" contentMode="scaleToFill" alwaysBounceVertical="YES" style="plain" separatorStyle="default" rowHeight="44" sectionHeaderHeight="22" sectionFooterHeight="22" translatesAutoresizingMaskIntoConstraints="NO" id="8Za-v0-MfX">
+                    <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
+                    <color key="backgroundColor" red="0.88235294119999996" green="0.88235294119999996" blue="0.88235294119999996" alpha="1" colorSpace="calibratedRGB"/>
+                    <connections>
+                        <outlet property="dataSource" destination="-1" id="xdE-G7-beZ"/>
+                        <outlet property="delegate" destination="-1" id="bSO-3A-B9S"/>
+                    </connections>
+                </tableView>
+            </subviews>
+            <color key="backgroundColor" red="0.88235294117647056" green="0.88235294117647056" blue="0.88235294117647056" alpha="1" colorSpace="calibratedRGB"/>
+            <constraints>
+                <constraint firstAttribute="trailing" secondItem="8Za-v0-MfX" secondAttribute="trailing" id="4Pa-O2-4Ta"/>
+                <constraint firstItem="8Za-v0-MfX" firstAttribute="top" secondItem="i5M-Pr-FkT" secondAttribute="top" id="Abs-tA-1QT"/>
+                <constraint firstAttribute="bottom" secondItem="8Za-v0-MfX" secondAttribute="bottom" id="Egz-HQ-aJw"/>
+                <constraint firstItem="8Za-v0-MfX" firstAttribute="leading" secondItem="i5M-Pr-FkT" secondAttribute="leading" id="m9X-V7-HSu"/>
+            </constraints>
+            <simulatedScreenMetrics key="simulatedDestinationMetrics" type="retina47"/>
+        </view>
+    </objects>
+</document>
diff --git a/YiLinkerOnlineBuyer/resources/ViewController/ProfileViewController.swift b/YiLinkerOnlineBuyer/resources/ViewController/ProfileViewController.swift
index e9611ec..bfb17b1 100644
--- a/YiLinkerOnlineBuyer/resources/ViewController/ProfileViewController.swift
+++ b/YiLinkerOnlineBuyer/resources/ViewController/ProfileViewController.swift
@@ -12,13 +12,19 @@ class ProfileViewController: UIViewController, UITableViewDataSource, UITableVie
     let cellHeaderIdentifier: String = "ProfileHeaderTableViewCell"
     let cellContentIdentifier: String = "ProfileTableViewCell"
     
+    let manager = APIManager.sharedInstance
+    
     @IBOutlet weak var tableView: UITableView!
 
+    var profileDetails: ProfileUserDetailsModel?
+    
     override func viewDidLoad() {
         super.viewDidLoad()
 
-        initializViews()
+        initializeViews()
         registerNibs()
+        
+        requestProfileDetails(APIAtlas.profileUrl, params: NSDictionary(dictionary: ["access_token": SessionManager.accessToken()]), showLoader: true)
     }
 
     override func didReceiveMemoryWarning() {
@@ -26,8 +32,14 @@ class ProfileViewController: UIViewController, UITableViewDataSource, UITableVie
         // Dispose of any resources that can be recreated.
     }
     
-    func initializViews() {
+    override func viewDidAppear(animated: Bool) {
+        super.viewDidAppear(animated)
+        requestProfileDetails(APIAtlas.profileUrl, params: NSDictionary(dictionary: ["access_token": SessionManager.accessToken()]), showLoader: false)
+    }
+    
+    func initializeViews() {
         tableView.tableFooterView = UIView(frame: CGRectZero)
+        self.title = "Profile Page"
     }
 
     func registerNibs() {
@@ -38,6 +50,29 @@ class ProfileViewController: UIViewController, UITableViewDataSource, UITableVie
         tableView.registerNib(nibContent, forCellReuseIdentifier: cellContentIdentifier)
     }
     
+    func requestProfileDetails(url: String, params: NSDictionary!, showLoader: Bool) {
+        if showLoader {
+            self.showLoader()
+        }
+        
+        manager.GET(url, parameters: params, success: {
+            (task: NSURLSessionDataTask!, responseObject: AnyObject!) in print(responseObject as! NSDictionary)
+            if responseObject.objectForKey("error") != nil {
+                self.requestRefreshToken("getWishlist", url: url, params: params, showLoader: showLoader)
+            } else {
+                if let value: AnyObject = responseObject["data"] {
+                    self.profileDetails = ProfileUserDetailsModel.parseDataWithDictionary(value as! NSDictionary)
+                }
+                self.tableView.reloadData()
+                self.dismissLoader()
+            }
+            }, failure: {
+                (task: NSURLSessionDataTask!, error: NSError!) in
+                self.showAlert("Error", message: "Something went wrong. . .")
+                self.dismissLoader()
+        })
+    }
+    
     /*
     // MARK: - Navigation
 
@@ -66,7 +101,11 @@ class ProfileViewController: UIViewController, UITableViewDataSource, UITableVie
         
         if indexPath.row == 0 {
             let cell = tableView.dequeueReusableCellWithIdentifier(cellHeaderIdentifier, forIndexPath: indexPath) as! ProfileHeaderTableViewCell
-            
+            if profileDetails != nil {
+                cell.profileImageView.sd_setImageWithURL(NSURL(string: profileDetails!.profileImageUrl), placeholderImage: UIImage(named: "dummy-placeholder"))
+                cell.profileNameLabel.text = profileDetails?.fullName
+                cell.profileAddressLabel.text = profileDetails!.address?.streetName
+            }
             return cell
         } else {
             let cell = tableView.dequeueReusableCellWithIdentifier(cellContentIdentifier, forIndexPath: indexPath) as! ProfileTableViewCell
@@ -126,11 +165,17 @@ class ProfileViewController: UIViewController, UITableViewDataSource, UITableVie
 
     // MARK: - Profile Table View cell Delegate
     func editProfileTapAction() {
-        
+        var editViewController = EditProfileTableViewController(nibName: "EditProfileTableViewController", bundle: nil)
+        editViewController.passModel(profileDetails!)
+        self.navigationController?.pushViewController(editViewController, animated:true)
     }
     
     func transactionsTapAction() {
-        
+        var transactionViewController = TransactionViewController(nibName: "TransactionViewController", bundle: nil)
+        if transactionViewController.respondsToSelector("edgesForExtendedLayout") {
+            transactionViewController.edgesForExtendedLayout = UIRectEdge.None
+        }
+        self.navigationController?.pushViewController(transactionViewController, animated:true)
     }
     
     func activityLogTapAction() {
@@ -145,8 +190,64 @@ class ProfileViewController: UIViewController, UITableViewDataSource, UITableVie
     }
     
     func settingsTapAction(){
-//        var settingsViewController = ProfileSettingsViewController(nibName: "ProfileSettingsViewController", bundle: nil)
-//        self.navigationController?.pushViewController(settingsViewController, animated:true)
+        var settingsViewController = ProfileSettingsViewController(nibName: "ProfileSettingsViewController", bundle: nil)
+        self.navigationController?.pushViewController(settingsViewController, animated:true)
+    }
+    
+    //Loader function
+    func showLoader() {
+        SVProgressHUD.show()
+        SVProgressHUD.setBackgroundColor(UIColor.whiteColor())
+    }
+    
+    func dismissLoader() {
+        SVProgressHUD.dismiss()
     }
 
+    func requestRefreshToken(type: String, url: String, params: NSDictionary!, showLoader: Bool) {
+        let url: String = "http://online.api.easydeal.ph/api/v1/login"
+        let params: NSDictionary = ["client_id": Constants.Credentials.clientID,
+            "client_secret": Constants.Credentials.clientSecret,
+            "grant_type": Constants.Credentials.grantRefreshToken,
+            "refresh_token": SessionManager.refreshToken()]
+        
+        let manager = APIManager.sharedInstance
+        manager.POST(url, parameters: params, success: {
+            (task: NSURLSessionDataTask!, responseObject: AnyObject!) in
+            
+            SVProgressHUD.dismiss()
+            
+            if (responseObject["isSuccessful"] as! Bool) {
+                SessionManager.parseTokensFromResponseObject(responseObject as! NSDictionary)
+                self.requestProfileDetails(url, params: params, showLoader: showLoader)
+            } else {
+                self.showAlert("Error", message: responseObject["message"] as! String)
+            }
+            
+            }, failure: {
+                (task: NSURLSessionDataTask!, error: NSError!) in
+                SVProgressHUD.dismiss()
+                let task: NSHTTPURLResponse = task.response as! NSHTTPURLResponse
+                
+                self.showAlert("Something went wrong", message: "")
+                
+        })
+    }
+    
+    func showAlert(title: String, message: String) {
+        let alertController = UIAlertController(title: title, message: message, preferredStyle: .Alert)
+        
+        let OKAction = UIAlertAction(title: "OK", style: .Default) { (action) in
+            alertController.dismissViewControllerAnimated(true, completion: nil)
+            
+            let appDelegate: AppDelegate = UIApplication.sharedApplication().delegate as! AppDelegate
+            appDelegate.changeRootToHomeView()
+        }
+        
+        alertController.addAction(OKAction)
+        
+        self.presentViewController(alertController, animated: true) {
+            
+        }
+    }
 }
diff --git a/YiLinkerOnlineBuyer/resources/ViewController/ResultViewController.swift b/YiLinkerOnlineBuyer/resources/ViewController/ResultViewController.swift
index cbf064e..dcdb4bf 100644
--- a/YiLinkerOnlineBuyer/resources/ViewController/ResultViewController.swift
+++ b/YiLinkerOnlineBuyer/resources/ViewController/ResultViewController.swift
@@ -10,6 +10,8 @@ import UIKit
 
 class ResultViewController: UIViewController, UICollectionViewDataSource, UICollectionViewDelegate, UITableViewDelegate, UITableViewDataSource {
     
+    let manager = APIManager.sharedInstance
+    
     let grid:String = "GRID"
     let list:String = "LIST"
     let seller:String = "SELLER"
@@ -19,6 +21,7 @@ class ResultViewController: UIViewController, UICollectionViewDataSource, UIColl
     let reuseIdentifierSeller: String = "SellerResultCollectionViewCell"
     var type: String = "GRID"
     
+    @IBOutlet weak var noResultLabel: UILabel!
     @IBOutlet weak var sortPickerTableView: UITableView!
     @IBOutlet weak var dimView: UIView!
     @IBOutlet weak var resultCollectionView: UICollectionView!
@@ -27,8 +30,11 @@ class ResultViewController: UIViewController, UICollectionViewDataSource, UIColl
     @IBOutlet weak var filterView: UIView!
     @IBOutlet weak var viewTypeView: UIView!
     
-    var collectionViewData: [String] = ["Item 1", "Item 3", "Item 3", "Item 1", "Item 3", "Item 3"]
+    var collectionViewData: [SearchResultModel] = []
     var sortData: [String] = ["Old to new", "New to old", "A to Z", "Z to A"]
+
+    var searchSuggestion: SearchSuggestionModel!
+    
     override func viewDidLoad() {
         super.viewDidLoad()
 
@@ -66,6 +72,8 @@ class ResultViewController: UIViewController, UICollectionViewDataSource, UIColl
         //hide dimview
         dimView.alpha = 0
         dimView.hidden = true
+        
+        noResultLabel.hidden = true
     }
     
     func registerNibs() {
@@ -79,6 +87,64 @@ class ResultViewController: UIViewController, UICollectionViewDataSource, UIColl
         self.resultCollectionView?.registerNib(cellNib, forCellWithReuseIdentifier: reuseIdentifierSeller)
     }
     
+    func passModel(searchSuggestion: SearchSuggestionModel) {
+        self.searchSuggestion = searchSuggestion
+        
+        if Reachability.isConnectedToNetwork() {
+           requestSearchDetails(searchSuggestion.searchUrl, params: nil)
+        } else {
+            showAlert("Connection Unreachable", message: "Cannot retrieve data. Please check your internet connection.")
+        }
+    }
+    
+    func requestSearchDetails(url: String, params: NSDictionary!) {
+        showLoader()
+        
+        manager.GET(url, parameters: params, success: {
+            (task: NSURLSessionDataTask!, responseObject: AnyObject!) in print(responseObject as! NSDictionary)
+            if responseObject.objectForKey("error") != nil {
+                self.requestRefreshToken(url, params: params)
+            } else {
+                self.populateTableView(responseObject)
+            }
+            }, failure: {
+                (task: NSURLSessionDataTask!, error: NSError!) in
+                self.showAlert("Error", message: "Something went wrong. . .")
+                self.dismissLoader()
+        })
+    }
+    
+    // MARK: Methods Updating Values
+    
+    func populateTableView(responseObject: AnyObject) {
+        collectionViewData.removeAll(keepCapacity: false)
+        if let value: AnyObject = responseObject["data"] {
+            for subValue in value["products"] as! NSArray {
+                println(subValue)
+                let model: SearchResultModel = SearchResultModel.parseDataWithDictionary(subValue as! NSDictionary)
+                
+                self.collectionViewData.append(model)
+            }
+            self.resultCollectionView.reloadData()
+        }
+        self.dismissLoader()
+        
+        if self.collectionViewData.count == 0 {
+            noResultLabel.hidden = false
+        }
+    }
+
+    
+    
+    //Loader function
+    func showLoader() {
+        SVProgressHUD.show()
+        SVProgressHUD.setBackgroundColor(UIColor.whiteColor())
+    }
+    
+    func dismissLoader() {
+        SVProgressHUD.dismiss()
+    }
 
     func changeViewType() {
         if type == grid {
@@ -141,9 +207,19 @@ class ResultViewController: UIViewController, UICollectionViewDataSource, UIColl
     func collectionView(collectionView: UICollectionView, cellForItemAtIndexPath indexPath: NSIndexPath) -> UICollectionViewCell {
         if type == grid {
             let cell: ProductResultGridCollectionViewCell = collectionView.dequeueReusableCellWithReuseIdentifier(reuseIdentifierGrid, forIndexPath: indexPath) as! ProductResultGridCollectionViewCell
+            var tempModel: SearchResultModel = collectionViewData[indexPath.row]
+            cell.setProductImage(tempModel.imageUrl)
+            cell.setProductName(tempModel.productName)
+            cell.setOriginalPrice(tempModel.originalPrice)
+            cell.setNewPrice(tempModel.newPrice)
             return cell
         } else if type == list {
             let cell: ProductResultListCollectionViewCell = collectionView.dequeueReusableCellWithReuseIdentifier(reuseIdentifierList, forIndexPath: indexPath) as! ProductResultListCollectionViewCell
+            var tempModel: SearchResultModel = collectionViewData[indexPath.row]
+            cell.setProductImage(tempModel.imageUrl)
+            cell.setProductName(tempModel.productName)
+            cell.setOriginalPrice(tempModel.originalPrice)
+            cell.setNewPrice(tempModel.newPrice)
             return cell
         } else{
             let cell: SellerResultCollectionViewCell = collectionView.dequeueReusableCellWithReuseIdentifier(reuseIdentifierSeller, forIndexPath: indexPath) as! SellerResultCollectionViewCell
@@ -245,5 +321,50 @@ class ResultViewController: UIViewController, UICollectionViewDataSource, UIColl
         // Pass the selected object to the new view controller.
     }
     */
+    
+    func showAlert(title: String, message: String) {
+        let alertController = UIAlertController(title: title, message: message, preferredStyle: .Alert)
+        
+        let OKAction = UIAlertAction(title: "OK", style: .Default) { (action) in
+            alertController.dismissViewControllerAnimated(true, completion: nil)
+        }
+        
+        alertController.addAction(OKAction)
+        
+        self.presentViewController(alertController, animated: true) {
+            
+        }
+    }
+    
+    func requestRefreshToken(url: String, params: NSDictionary!) {
+        let url: String = "http://online.api.easydeal.ph/api/v1/login"
+        let params: NSDictionary = ["client_id": Constants.Credentials.clientID,
+            "client_secret": Constants.Credentials.clientSecret,
+            "grant_type": Constants.Credentials.grantRefreshToken,
+            "refresh_token": SessionManager.refreshToken()]
+        
+        let manager = APIManager.sharedInstance
+        manager.POST(url, parameters: params, success: {
+            (task: NSURLSessionDataTask!, responseObject: AnyObject!) in
+            
+            SVProgressHUD.dismiss()
+            
+            if (responseObject["isSuccessful"] as! Bool) {
+                SessionManager.parseTokensFromResponseObject(responseObject as! NSDictionary)
+                self.requestSearchDetails(url, params: params)
+            } else {
+                self.showAlert("Error", message: responseObject["message"] as! String)
+            }
+            
+            }, failure: {
+                (task: NSURLSessionDataTask!, error: NSError!) in
+                SVProgressHUD.dismiss()
+                let task: NSHTTPURLResponse = task.response as! NSHTTPURLResponse
+                
+                self.showAlert("Something went wrong", message: "")
+                
+        })
+    }
+
 
 }
diff --git a/YiLinkerOnlineBuyer/resources/ViewController/SearchViewController.swift b/YiLinkerOnlineBuyer/resources/ViewController/SearchViewController.swift
index 1482096..4d002c9 100644
--- a/YiLinkerOnlineBuyer/resources/ViewController/SearchViewController.swift
+++ b/YiLinkerOnlineBuyer/resources/ViewController/SearchViewController.swift
@@ -9,6 +9,8 @@
 import UIKit
 
 class SearchViewController: UIViewController, UITableViewDelegate, UITableViewDataSource, UISearchBarDelegate {
+    
+    let manager = APIManager.sharedInstance
 
     let viewControllerIndex = 1
     
@@ -21,10 +23,6 @@ class SearchViewController: UIViewController, UITableViewDelegate, UITableViewDa
         super.viewDidLoad()
 
         self.initializeViews()
-        
-        let vc = FollowedSellerViewController(nibName: "FollowedSellerViewController", bundle: nil)
-        vc.edgesForExtendedLayout = UIRectEdge.None
-        self.navigationController?.pushViewController(vc, animated: true)
     }
 
     override func didReceiveMemoryWarning() {
@@ -53,13 +51,48 @@ class SearchViewController: UIViewController, UITableViewDelegate, UITableViewDa
         var nib = UINib(nibName: "SearchSuggestionTableViewCell", bundle: nil)
         searchResultTableView.registerNib(nib, forCellReuseIdentifier: "SearchSuggestionTableViewCell")
         
+        addBrowseCategory()
+    }
+    
+    func requestSearch(url: String, params: NSDictionary!) {
+        UIApplication.sharedApplication().networkActivityIndicatorVisible = true
+        manager.operationQueue.cancelAllOperations()
+        manager.GET(url, parameters: params, success: {
+            (task: NSURLSessionDataTask!, responseObject: AnyObject!) in print(responseObject as! NSDictionary)
+            if responseObject.objectForKey("error") != nil {
+            } else {
+                self.populateTableView(responseObject)
+            }
+            UIApplication.sharedApplication().networkActivityIndicatorVisible = false
+            }, failure: {
+                (task: NSURLSessionDataTask!, error: NSError!) in
+                println(error)
+                self.showAlert("Error", message: "Something went wrong. . .")
+                UIApplication.sharedApplication().networkActivityIndicatorVisible = false
+        })
+    }
+    
+    func populateTableView(responseObject: AnyObject) {
+        tableData.removeAll(keepCapacity: false)
+        if let value: AnyObject = responseObject["data"] {
+            for subValue in value as! NSArray {
+                let model: SearchSuggestionModel = SearchSuggestionModel.parseDataFromDictionary(subValue as! NSDictionary)
+                
+                self.tableData.append(model)
+            }
+            self.searchResultTableView.reloadData()
+        }
+        
+        addBrowseCategory()
+    }
+    
+    func addBrowseCategory() {
         if(self.tableData.isEmpty) {
-            var temp: SearchSuggestionModel = SearchSuggestionModel(suggestion: "Browse by Category", imageURL: "SearchBrowseCategory") as SearchSuggestionModel
+            var temp: SearchSuggestionModel = SearchSuggestionModel(suggestion: "Browse by Category", imageURL: "SearchBrowseCategory", searchUrl: "") as SearchSuggestionModel
             
             tableData.append(temp)
             self.searchResultTableView.reloadData()
         }
-
     }
     
     // Mark: - UISearchBarDelegate
@@ -72,6 +105,20 @@ class SearchViewController: UIViewController, UITableViewDelegate, UITableViewDa
         return true
     }
     
+    func searchBar(searchBar: UISearchBar, textDidChange searchText: String) {
+        if count(searchText) > 2 {
+            if Reachability.isConnectedToNetwork(){
+                requestSearch(APIAtlas.searchUrl, params: NSDictionary(dictionary: ["queryString" : searchText]))
+            }  else {
+                showAlert("Connection Unreachable", message: "Cannot retrieve data. Please check your internet connection.")
+            }
+        } else {
+            tableData.removeAll(keepCapacity: false)
+            addBrowseCategory()
+            searchResultTableView.reloadData()
+        }
+    }
+    
     func searchBarShouldEndEditing(searchBar: UISearchBar) -> Bool {
         self.searchBar.showsScopeBar = false
         self.searchBar.sizeToFit()
@@ -79,12 +126,13 @@ class SearchViewController: UIViewController, UITableViewDelegate, UITableViewDa
         return true
     }
     
-    func searchBarCancelButtonClicked(searchBar: UISearchBar) {
-        self.searchBar.resignFirstResponder()
+    func searchBarSearchButtonClicked(searchBar: UISearchBar) {
+        var resultController = ResultViewController(nibName: "ResultViewController", bundle: nil)
+        self.navigationController?.pushViewController(resultController, animated:true);
     }
     
-    func searchBar(searchBar: UISearchBar, textDidChange searchText: String) {
-        self.searchResultTableView.reloadData()
+    func searchBarCancelButtonClicked(searchBar: UISearchBar) {
+        self.searchBar.resignFirstResponder()
     }
     
     // Mark: - UITableViewDataSource methods
@@ -114,7 +162,22 @@ class SearchViewController: UIViewController, UITableViewDelegate, UITableViewDa
     // Mark: - UITableViewDelegate methods
     func tableView(tableView: UITableView, didSelectRowAtIndexPath indexPath: NSIndexPath) {
         var resultController = ResultViewController(nibName: "ResultViewController", bundle: nil)
+        resultController.passModel(tableData[indexPath.row])
         self.navigationController?.pushViewController(resultController, animated:true);
     }
+    
+    func showAlert(title: String, message: String) {
+        let alertController = UIAlertController(title: title, message: message, preferredStyle: .Alert)
+        
+        let OKAction = UIAlertAction(title: "OK", style: .Default) { (action) in
+            alertController.dismissViewControllerAnimated(true, completion: nil)
+        }
+        
+        alertController.addAction(OKAction)
+        
+        self.presentViewController(alertController, animated: true) {
+            
+        }
+    }
 
 }
diff --git a/YiLinkerOnlineBuyer/resources/ViewController/SummaryViewController.swift b/YiLinkerOnlineBuyer/resources/ViewController/SummaryViewController.swift
index 9a8aa0a..71c997c 100644
--- a/YiLinkerOnlineBuyer/resources/ViewController/SummaryViewController.swift
+++ b/YiLinkerOnlineBuyer/resources/ViewController/SummaryViewController.swift
@@ -8,9 +8,10 @@
 
 import UIKit
 
-class SummaryViewController: UIViewController, UITableViewDelegate, UITableViewDataSource, ShipToTableViewCellDelegate {
+class SummaryViewController: UIViewController, UITableViewDelegate, UITableViewDataSource, ShipToTableViewCellDelegate, ChangeAddressViewControllerDelegate {
 
     @IBOutlet weak var tableView: UITableView!
+    var shipToTableViewCell: ShipToTableViewCell = ShipToTableViewCell()
     
     override func viewDidLoad() {
         super.viewDidLoad()
@@ -20,7 +21,7 @@ class SummaryViewController: UIViewController, UITableViewDelegate, UITableViewD
         self.tableView.scrollIndicatorInsets = UIEdgeInsetsMake(0, 0, 0, -5)
         self.tableView.rowHeight = UITableViewAutomaticDimension
         self.tableView.layoutIfNeeded()
-        self.tableView.tableFooterView = self.tableFooterView()
+        self.tableView.tableFooterView = self.tableFooterView("Lorem psum")
         self.tableView.tableFooterView!.frame = CGRectMake(0, 0, 0, self.tableView.tableFooterView!.frame.size.height)
     }
     
@@ -50,14 +51,18 @@ class SummaryViewController: UIViewController, UITableViewDelegate, UITableViewD
         return 41
     }
     
-    func tableFooterView() -> UIView {
-        let shipToTableViewCell: ShipToTableViewCell = self.tableView.dequeueReusableCellWithIdentifier(Constants.Checkout.shipToTableViewCellNibNameAndIdentifier) as! ShipToTableViewCell
+    func tableFooterView(address: String) -> UIView {
+        self.shipToTableViewCell = self.tableView.dequeueReusableCellWithIdentifier(Constants.Checkout.shipToTableViewCellNibNameAndIdentifier) as! ShipToTableViewCell
         shipToTableViewCell.frame = CGRectMake(0, 0, self.tableView.frame.size.width, shipToTableViewCell.frame.size.height)
         shipToTableViewCell.delegate = self
-        
+        shipToTableViewCell.addressLabel.text = address
         return shipToTableViewCell
     }
     
+    func changeAddressViewController(didSelectAddress address: String) {
+        self.tableView.tableFooterView = self.tableFooterView(address)
+    }
+    
     func tableView(tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {
         var headerView: CheckoutViews
         if section == 0 {
@@ -118,6 +123,7 @@ class SummaryViewController: UIViewController, UITableViewDelegate, UITableViewD
         })
         
         let changeAddressViewController: ChangeAddressViewController = ChangeAddressViewController(nibName: "ChangeAddressViewController", bundle: nil)
+        changeAddressViewController.delegate = self
         self.navigationController!.pushViewController(changeAddressViewController, animated: true)
     }
 }
diff --git a/YiLinkerOnlineBuyer/resources/ViewController/TransactionViews.xib b/YiLinkerOnlineBuyer/resources/ViewController/TransactionViews.xib
index daf1d02..1471d7f 100644
--- a/YiLinkerOnlineBuyer/resources/ViewController/TransactionViews.xib
+++ b/YiLinkerOnlineBuyer/resources/ViewController/TransactionViews.xib
@@ -16,7 +16,7 @@
                         <constraint firstAttribute="height" constant="21" id="6UR-xb-8rv"/>
                     </constraints>
                     <fontDescription key="fontDescription" type="system" weight="thin" pointSize="20"/>
-                    <color key="textColor" cocoaTouchSystemColor="darkTextColor"/>
+                    <color key="textColor" red="0.0" green="0.0" blue="0.0" alpha="1" colorSpace="calibratedRGB"/>
                     <nil key="highlightedColor"/>
                 </label>
                 <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="TID-203-553-918" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="xn2-ck-axI">
diff --git a/YiLinkerOnlineBuyer/resources/ViewController/WishlistViewController.swift b/YiLinkerOnlineBuyer/resources/ViewController/WishlistViewController.swift
index b8c3218..e481462 100644
--- a/YiLinkerOnlineBuyer/resources/ViewController/WishlistViewController.swift
+++ b/YiLinkerOnlineBuyer/resources/ViewController/WishlistViewController.swift
@@ -149,6 +149,13 @@ class WishlistViewController: UIViewController, UITableViewDelegate, UITableView
         }
         self.updateCounterLabel()
         self.dismissLoader()
+        
+        if tableData.count != 0 {
+            let badgeValue = (self.tabBarController!.tabBar.items![3] as! UITabBarItem).badgeValue?.toInt()
+            (self.tabBarController!.tabBar.items![3] as! UITabBarItem).badgeValue = String(tableData.count)
+        } else {
+            (self.tabBarController!.tabBar.items![3] as! UITabBarItem).badgeValue = nil
+        }
     }
     
     func updateCounterLabel() {
@@ -224,7 +231,6 @@ class WishlistViewController: UIViewController, UITableViewDelegate, UITableView
             let tempModel: WishlistProductDetailsModel = tableData[rowOfTheCell]
             
             var params: NSDictionary = ["access_token": SessionManager.accessToken(),
-                "wishlist": "true",
                 "productId": tempModel.id,
                 "unitId": tempModel.unitId,
                 "quantity": 0,
@@ -244,7 +250,6 @@ class WishlistViewController: UIViewController, UITableViewDelegate, UITableView
             let tempModel: WishlistProductDetailsModel = tableData[rowOfTheCell]
             
             var params: NSDictionary = ["access_token": SessionManager.accessToken(),
-                "wishlist": "true",
                 "productId": tempModel.id,
                 "unitId": tempModel.unitId,
                 "quantity": tempModel.quantity
diff --git a/YiLinkerOnlineBuyer/resources/Xib/CartProductAttributeTableViewCell.xib b/YiLinkerOnlineBuyer/resources/Xib/CartProductAttributeTableViewCell.xib
new file mode 100644
index 0000000..715c8ee
--- /dev/null
+++ b/YiLinkerOnlineBuyer/resources/Xib/CartProductAttributeTableViewCell.xib
@@ -0,0 +1,59 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="7706" systemVersion="14E46" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" useTraitCollections="YES">
+    <dependencies>
+        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="7703"/>
+        <capability name="Constraints to layout margins" minToolsVersion="6.0"/>
+    </dependencies>
+    <objects>
+        <placeholder placeholderIdentifier="IBFilesOwner" id="-1" userLabel="File's Owner"/>
+        <placeholder placeholderIdentifier="IBFirstResponder" id="-2" customClass="UIResponder"/>
+        <tableViewCell contentMode="scaleToFill" selectionStyle="default" indentationWidth="10" reuseIdentifier="CartProductAttributeTableViewCell" rowHeight="104" id="HAD-JW-Pbd" customClass="CartProductAttributeTableViewCell" customModule="YiLinkerOnlineBuyer" customModuleProvider="target">
+            <rect key="frame" x="0.0" y="0.0" width="375" height="104"/>
+            <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
+            <tableViewCellContentView key="contentView" opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="center" tableViewCell="HAD-JW-Pbd" id="Fbv-wJ-UBe">
+                <rect key="frame" x="0.0" y="0.0" width="320" height="43"/>
+                <autoresizingMask key="autoresizingMask"/>
+                <subviews>
+                    <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="wgc-ni-1Sz" userLabel="Separator">
+                        <rect key="frame" x="0.0" y="103" width="375" height="1"/>
+                        <color key="backgroundColor" red="0.7019608021" green="0.7019608021" blue="0.7019608021" alpha="1" colorSpace="calibratedRGB"/>
+                        <constraints>
+                            <constraint firstAttribute="height" constant="1" id="gpP-5l-J8h"/>
+                        </constraints>
+                    </view>
+                    <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Select Texture" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="77J-A0-UmY">
+                        <rect key="frame" x="8" y="10" width="359" height="21"/>
+                        <constraints>
+                            <constraint firstAttribute="height" constant="21" id="eIG-i0-yJ1"/>
+                        </constraints>
+                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
+                        <color key="textColor" red="0.29803922770000002" green="0.29803922770000002" blue="0.29803922770000002" alpha="1" colorSpace="calibratedRGB"/>
+                        <nil key="highlightedColor"/>
+                    </label>
+                    <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="30z-pk-wUf">
+                        <rect key="frame" x="8" y="39" width="359" height="50"/>
+                        <constraints>
+                            <constraint firstAttribute="height" constant="50" id="hZn-Ph-Mof"/>
+                        </constraints>
+                    </scrollView>
+                </subviews>
+                <constraints>
+                    <constraint firstItem="77J-A0-UmY" firstAttribute="leading" secondItem="Fbv-wJ-UBe" secondAttribute="leadingMargin" id="Oer-RU-Y0P"/>
+                    <constraint firstItem="30z-pk-wUf" firstAttribute="leading" secondItem="Fbv-wJ-UBe" secondAttribute="leadingMargin" id="UeK-Rt-5BY"/>
+                    <constraint firstItem="30z-pk-wUf" firstAttribute="trailing" secondItem="Fbv-wJ-UBe" secondAttribute="trailingMargin" id="ZWg-3t-8IV"/>
+                    <constraint firstAttribute="bottom" secondItem="wgc-ni-1Sz" secondAttribute="bottom" constant="-1" id="dXD-1o-qOA"/>
+                    <constraint firstItem="77J-A0-UmY" firstAttribute="top" secondItem="Fbv-wJ-UBe" secondAttribute="topMargin" constant="2" id="oD0-IC-ncp"/>
+                    <constraint firstAttribute="trailingMargin" secondItem="77J-A0-UmY" secondAttribute="trailing" id="obJ-QP-PDR"/>
+                    <constraint firstItem="30z-pk-wUf" firstAttribute="top" secondItem="77J-A0-UmY" secondAttribute="bottom" constant="8" id="tfm-iz-496"/>
+                    <constraint firstAttribute="trailing" secondItem="wgc-ni-1Sz" secondAttribute="trailing" id="twh-uF-gLj"/>
+                    <constraint firstItem="wgc-ni-1Sz" firstAttribute="leading" secondItem="Fbv-wJ-UBe" secondAttribute="leading" id="urt-EG-iuW"/>
+                </constraints>
+            </tableViewCellContentView>
+            <connections>
+                <outlet property="attributeLabel" destination="77J-A0-UmY" id="IcZ-Fd-6dg"/>
+                <outlet property="scrollView" destination="30z-pk-wUf" id="lbZ-um-Oe3"/>
+            </connections>
+            <point key="canvasLocation" x="383.5" y="234"/>
+        </tableViewCell>
+    </objects>
+</document>
diff --git a/YiLinkerOnlineBuyer/resources/Xib/CartProductAttributeViewController.xib b/YiLinkerOnlineBuyer/resources/Xib/CartProductAttributeViewController.xib
index e86d638..d153995 100644
--- a/YiLinkerOnlineBuyer/resources/Xib/CartProductAttributeViewController.xib
+++ b/YiLinkerOnlineBuyer/resources/Xib/CartProductAttributeViewController.xib
@@ -87,7 +87,7 @@
                 <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="ZJd-92-WTH" userLabel="Name">
                     <rect key="frame" x="0.0" y="176" width="375" height="110"/>
                     <subviews>
-                        <imageView userInteractionEnabled="NO" contentMode="scaleToFill" horizontalHuggingPriority="251" verticalHuggingPriority="251" image="dummy-placeholder" translatesAutoresizingMaskIntoConstraints="NO" id="6zb-Vh-jzf">
+                        <imageView clipsSubviews="YES" userInteractionEnabled="NO" contentMode="scaleAspectFill" horizontalHuggingPriority="251" verticalHuggingPriority="251" image="dummy-placeholder" translatesAutoresizingMaskIntoConstraints="NO" id="6zb-Vh-jzf">
                             <rect key="frame" x="10" y="6" width="100" height="97"/>
                             <constraints>
                                 <constraint firstAttribute="height" constant="97" id="n7e-6V-ks6"/>
diff --git a/YiLinkerOnlineBuyer/resources/Xib/ChangeAddressCollectionViewCell.xib b/YiLinkerOnlineBuyer/resources/Xib/ChangeAddressCollectionViewCell.xib
index 12b67f7..bd0cb75 100644
--- a/YiLinkerOnlineBuyer/resources/Xib/ChangeAddressCollectionViewCell.xib
+++ b/YiLinkerOnlineBuyer/resources/Xib/ChangeAddressCollectionViewCell.xib
@@ -82,8 +82,10 @@
             </constraints>
             <size key="customSize" width="381" height="79"/>
             <connections>
+                <outlet property="addressLabel" destination="Sx5-GY-uj9" id="xty-1D-EG7"/>
                 <outlet property="checkBoxButton" destination="q5N-SS-ZY2" id="yaM-Vz-NDo"/>
                 <outlet property="deleteButton" destination="q7d-g0-zfw" id="GAb-UF-GPw"/>
+                <outlet property="titleLabel" destination="BKG-VE-yR0" id="30R-Dz-v3L"/>
             </connections>
             <point key="canvasLocation" x="314.5" y="286.5"/>
         </collectionViewCell>
diff --git a/YiLinkerOnlineBuyer/resources/Xib/EditProfileAccountInformationTableViewCell.xib b/YiLinkerOnlineBuyer/resources/Xib/EditProfileAccountInformationTableViewCell.xib
new file mode 100644
index 0000000..10d43e1
--- /dev/null
+++ b/YiLinkerOnlineBuyer/resources/Xib/EditProfileAccountInformationTableViewCell.xib
@@ -0,0 +1,178 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="7706" systemVersion="14E46" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" useTraitCollections="YES">
+    <dependencies>
+        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="7703"/>
+        <capability name="Constraints to layout margins" minToolsVersion="6.0"/>
+    </dependencies>
+    <objects>
+        <placeholder placeholderIdentifier="IBFilesOwner" id="-1" userLabel="File's Owner"/>
+        <placeholder placeholderIdentifier="IBFirstResponder" id="-2" customClass="UIResponder"/>
+        <tableViewCell contentMode="scaleToFill" selectionStyle="default" indentationWidth="10" reuseIdentifier="EditProfileAccountInformationTableViewCell" rowHeight="155" id="TL5-8r-TIu" customClass="EditProfileAccountInformationTableViewCell" customModule="YiLinkerOnlineBuyer" customModuleProvider="target">
+            <rect key="frame" x="0.0" y="0.0" width="375" height="270"/>
+            <autoresizingMask key="autoresizingMask"/>
+            <tableViewCellContentView key="contentView" opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="center" tableViewCell="TL5-8r-TIu" id="84s-od-zh4">
+                <autoresizingMask key="autoresizingMask"/>
+                <subviews>
+                    <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="cPj-dB-fdw" userLabel="Title">
+                        <rect key="frame" x="0.0" y="0.0" width="375" height="35"/>
+                        <subviews>
+                            <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Account Information" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="sTB-Ra-wPE">
+                                <rect key="frame" x="8" y="7" width="359" height="21"/>
+                                <fontDescription key="fontDescription" type="boldSystem" pointSize="12"/>
+                                <color key="textColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
+                                <nil key="highlightedColor"/>
+                            </label>
+                        </subviews>
+                        <color key="backgroundColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
+                        <constraints>
+                            <constraint firstAttribute="trailing" secondItem="sTB-Ra-wPE" secondAttribute="trailing" constant="8" id="9rU-mn-HSc"/>
+                            <constraint firstAttribute="height" constant="35" id="KX3-CV-Ldu"/>
+                            <constraint firstAttribute="height" relation="greaterThanOrEqual" constant="35" id="Smo-lP-1gR"/>
+                            <constraint firstItem="sTB-Ra-wPE" firstAttribute="leading" secondItem="cPj-dB-fdw" secondAttribute="leading" constant="8" id="iFI-cP-hR0"/>
+                            <constraint firstItem="sTB-Ra-wPE" firstAttribute="top" secondItem="cPj-dB-fdw" secondAttribute="top" constant="7" id="mIu-Ba-xew"/>
+                            <constraint firstAttribute="bottom" secondItem="sTB-Ra-wPE" secondAttribute="bottom" constant="7" id="skx-pb-Ocm"/>
+                        </constraints>
+                    </view>
+                    <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Email Address" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="GIu-xB-hJx">
+                        <rect key="frame" x="8" y="43" width="359" height="21"/>
+                        <constraints>
+                            <constraint firstAttribute="height" constant="21" id="9A7-Zo-OPV"/>
+                        </constraints>
+                        <fontDescription key="fontDescription" name="HelveticaNeue" family="Helvetica Neue" pointSize="12"/>
+                        <color key="textColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
+                        <nil key="highlightedColor"/>
+                    </label>
+                    <textField opaque="NO" clipsSubviews="YES" contentMode="scaleToFill" enabled="NO" contentHorizontalAlignment="left" contentVerticalAlignment="center" text="email@email.com" borderStyle="roundedRect" minimumFontSize="17" translatesAutoresizingMaskIntoConstraints="NO" id="fmb-Z0-W7z">
+                        <rect key="frame" x="8" y="64" width="359" height="30"/>
+                        <constraints>
+                            <constraint firstAttribute="height" constant="30" id="JcP-al-12W"/>
+                        </constraints>
+                        <color key="textColor" white="0.66666666666666663" alpha="1" colorSpace="calibratedWhite"/>
+                        <fontDescription key="fontDescription" type="system" pointSize="12"/>
+                        <textInputTraits key="textInputTraits" keyboardType="emailAddress"/>
+                    </textField>
+                    <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" usesAttributedText="YES" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="o56-Wr-f7u">
+                        <rect key="frame" x="8" y="102" width="359" height="21"/>
+                        <constraints>
+                            <constraint firstAttribute="height" constant="21" id="r1A-xU-ysf"/>
+                        </constraints>
+                        <attributedString key="attributedText">
+                            <fragment content="Password">
+                                <attributes>
+                                    <color key="NSColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
+                                    <font key="NSFont" size="12" name="HelveticaNeue"/>
+                                    <paragraphStyle key="NSParagraphStyle" alignment="left" lineBreakMode="wordWrapping" baseWritingDirection="natural"/>
+                                </attributes>
+                            </fragment>
+                        </attributedString>
+                        <nil key="highlightedColor"/>
+                    </label>
+                    <textField opaque="NO" clipsSubviews="YES" contentMode="scaleToFill" enabled="NO" contentHorizontalAlignment="left" contentVerticalAlignment="center" text="password" borderStyle="roundedRect" minimumFontSize="17" translatesAutoresizingMaskIntoConstraints="NO" id="Yey-oc-Fe4">
+                        <rect key="frame" x="8" y="123" width="359" height="30"/>
+                        <color key="textColor" white="0.66666666666666663" alpha="1" colorSpace="calibratedWhite"/>
+                        <fontDescription key="fontDescription" type="system" pointSize="12"/>
+                        <textInputTraits key="textInputTraits" secureTextEntry="YES"/>
+                    </textField>
+                    <button hidden="YES" opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="roundedRect" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="ZTk-YW-n6h">
+                        <rect key="frame" x="292" y="65" width="75" height="28"/>
+                        <color key="backgroundColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
+                        <constraints>
+                            <constraint firstAttribute="height" constant="28" id="JjC-Z4-V9I"/>
+                            <constraint firstAttribute="width" constant="75" id="nke-MZ-5Pc"/>
+                        </constraints>
+                        <fontDescription key="fontDescription" type="system" pointSize="10"/>
+                        <state key="normal" title="CHANGE">
+                            <color key="titleColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
+                            <color key="titleShadowColor" white="0.5" alpha="1" colorSpace="calibratedWhite"/>
+                        </state>
+                        <userDefinedRuntimeAttributes>
+                            <userDefinedRuntimeAttribute type="number" keyPath="cornerRadius">
+                                <real key="value" value="5"/>
+                            </userDefinedRuntimeAttribute>
+                        </userDefinedRuntimeAttributes>
+                        <connections>
+                            <action selector="changeAction:" destination="TL5-8r-TIu" eventType="touchUpInside" id="aWE-FW-DWo"/>
+                        </connections>
+                    </button>
+                    <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="roundedRect" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="lS9-Fq-0QH">
+                        <rect key="frame" x="8" y="201" width="359" height="60"/>
+                        <color key="backgroundColor" red="0.2666666667" green="0.64313725489999995" blue="0.56862745100000001" alpha="1" colorSpace="calibratedRGB"/>
+                        <constraints>
+                            <constraint firstAttribute="height" constant="60" id="BCs-Bi-AiP"/>
+                        </constraints>
+                        <fontDescription key="fontDescription" type="system" pointSize="13"/>
+                        <state key="normal" title="SAVE">
+                            <color key="titleColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
+                            <color key="titleShadowColor" white="0.5" alpha="1" colorSpace="calibratedWhite"/>
+                        </state>
+                        <userDefinedRuntimeAttributes>
+                            <userDefinedRuntimeAttribute type="number" keyPath="cornerRadius">
+                                <real key="value" value="5"/>
+                            </userDefinedRuntimeAttribute>
+                        </userDefinedRuntimeAttributes>
+                        <connections>
+                            <action selector="saveAction:" destination="TL5-8r-TIu" eventType="touchUpInside" id="Tcl-Yy-oUx"/>
+                        </connections>
+                    </button>
+                    <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="roundedRect" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="FHa-In-V1Z">
+                        <rect key="frame" x="292" y="124" width="75" height="28"/>
+                        <color key="backgroundColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
+                        <constraints>
+                            <constraint firstAttribute="height" constant="28" id="GPz-09-5gU"/>
+                            <constraint firstAttribute="width" constant="75" id="bTe-Sj-IOV"/>
+                        </constraints>
+                        <fontDescription key="fontDescription" type="system" pointSize="10"/>
+                        <state key="normal" title="CHANGE">
+                            <color key="titleColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
+                            <color key="titleShadowColor" white="0.5" alpha="1" colorSpace="calibratedWhite"/>
+                        </state>
+                        <userDefinedRuntimeAttributes>
+                            <userDefinedRuntimeAttribute type="number" keyPath="cornerRadius">
+                                <real key="value" value="5"/>
+                            </userDefinedRuntimeAttribute>
+                        </userDefinedRuntimeAttributes>
+                        <connections>
+                            <action selector="changeAction:" destination="TL5-8r-TIu" eventType="touchUpInside" id="TjL-VC-1I7"/>
+                        </connections>
+                    </button>
+                </subviews>
+                <color key="backgroundColor" red="0.88235294119999996" green="0.88235294119999996" blue="0.88235294119999996" alpha="1" colorSpace="calibratedRGB"/>
+                <constraints>
+                    <constraint firstItem="cPj-dB-fdw" firstAttribute="top" secondItem="84s-od-zh4" secondAttribute="top" id="0Sg-Ub-aJw"/>
+                    <constraint firstAttribute="trailing" secondItem="fmb-Z0-W7z" secondAttribute="trailing" constant="8" id="3Ii-nB-g10"/>
+                    <constraint firstItem="Yey-oc-Fe4" firstAttribute="trailing" secondItem="84s-od-zh4" secondAttribute="trailingMargin" id="7uD-en-X1U"/>
+                    <constraint firstItem="lS9-Fq-0QH" firstAttribute="leading" secondItem="84s-od-zh4" secondAttribute="leading" constant="8" id="8Cc-XB-dZu"/>
+                    <constraint firstAttribute="trailing" secondItem="o56-Wr-f7u" secondAttribute="trailing" constant="8" id="8gI-x0-KHX"/>
+                    <constraint firstItem="fmb-Z0-W7z" firstAttribute="top" secondItem="GIu-xB-hJx" secondAttribute="bottom" id="97g-fv-CR3"/>
+                    <constraint firstAttribute="bottom" secondItem="lS9-Fq-0QH" secondAttribute="bottom" constant="8" id="JPy-eu-Kmk"/>
+                    <constraint firstAttribute="trailing" secondItem="lS9-Fq-0QH" secondAttribute="trailing" constant="8" id="JRK-fn-7sC"/>
+                    <constraint firstItem="fmb-Z0-W7z" firstAttribute="leading" secondItem="84s-od-zh4" secondAttribute="leading" constant="8" id="L7b-rZ-tg5"/>
+                    <constraint firstItem="cPj-dB-fdw" firstAttribute="leading" secondItem="84s-od-zh4" secondAttribute="leading" id="Rgp-Vp-94m"/>
+                    <constraint firstItem="Yey-oc-Fe4" firstAttribute="top" secondItem="o56-Wr-f7u" secondAttribute="bottom" id="TND-PH-Z0v"/>
+                    <constraint firstItem="GIu-xB-hJx" firstAttribute="top" secondItem="cPj-dB-fdw" secondAttribute="bottom" constant="8" id="Y9G-uY-keu"/>
+                    <constraint firstItem="cPj-dB-fdw" firstAttribute="top" secondItem="84s-od-zh4" secondAttribute="top" id="Yvm-Ye-AJQ"/>
+                    <constraint firstAttribute="trailing" secondItem="GIu-xB-hJx" secondAttribute="trailing" constant="8" id="ZMr-1g-kcg"/>
+                    <constraint firstItem="FHa-In-V1Z" firstAttribute="trailing" secondItem="84s-od-zh4" secondAttribute="trailingMargin" id="aBM-w8-7ll"/>
+                    <constraint firstItem="GIu-xB-hJx" firstAttribute="leading" secondItem="84s-od-zh4" secondAttribute="leading" constant="8" id="bP8-l3-kpL"/>
+                    <constraint firstAttribute="trailing" secondItem="ZTk-YW-n6h" secondAttribute="trailing" constant="8" id="bZE-lG-kst"/>
+                    <constraint firstItem="o56-Wr-f7u" firstAttribute="top" secondItem="fmb-Z0-W7z" secondAttribute="bottom" constant="8" id="fWp-0m-2wz"/>
+                    <constraint firstItem="ZTk-YW-n6h" firstAttribute="top" secondItem="GIu-xB-hJx" secondAttribute="bottom" constant="1" id="gL7-hn-f09"/>
+                    <constraint firstItem="FHa-In-V1Z" firstAttribute="top" secondItem="o56-Wr-f7u" secondAttribute="bottom" constant="1" id="i2t-aa-Myk"/>
+                    <constraint firstItem="o56-Wr-f7u" firstAttribute="leading" secondItem="84s-od-zh4" secondAttribute="leading" constant="8" id="oNB-rj-vNH"/>
+                    <constraint firstItem="Yey-oc-Fe4" firstAttribute="leading" secondItem="84s-od-zh4" secondAttribute="leadingMargin" id="pia-p0-rmG"/>
+                    <constraint firstItem="cPj-dB-fdw" firstAttribute="leading" secondItem="84s-od-zh4" secondAttribute="leading" id="teR-XO-x1T"/>
+                    <constraint firstAttribute="trailing" secondItem="cPj-dB-fdw" secondAttribute="trailing" id="vnJ-IN-bvo"/>
+                    <constraint firstAttribute="trailing" secondItem="cPj-dB-fdw" secondAttribute="trailing" id="xdE-4r-t2m"/>
+                </constraints>
+            </tableViewCellContentView>
+            <connections>
+                <outlet property="changeEmailButton" destination="ZTk-YW-n6h" id="Jyt-71-07f"/>
+                <outlet property="changePasswordButton" destination="FHa-In-V1Z" id="4bX-H0-3cj"/>
+                <outlet property="emailAddressTextField" destination="fmb-Z0-W7z" id="Jtp-Rh-q5Y"/>
+                <outlet property="passwordTextField" destination="Yey-oc-Fe4" id="OFb-Gq-TLA"/>
+                <outlet property="saveButton" destination="lS9-Fq-0QH" id="BqF-EK-k7K"/>
+            </connections>
+            <point key="canvasLocation" x="253.5" y="164"/>
+        </tableViewCell>
+    </objects>
+</document>
diff --git a/YiLinkerOnlineBuyer/resources/Xib/EditProfileAddPhotoTableViewCell.xib b/YiLinkerOnlineBuyer/resources/Xib/EditProfileAddPhotoTableViewCell.xib
new file mode 100644
index 0000000..d9560e2
--- /dev/null
+++ b/YiLinkerOnlineBuyer/resources/Xib/EditProfileAddPhotoTableViewCell.xib
@@ -0,0 +1,56 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="7706" systemVersion="14E46" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" useTraitCollections="YES">
+    <dependencies>
+        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="7703"/>
+    </dependencies>
+    <objects>
+        <placeholder placeholderIdentifier="IBFilesOwner" id="-1" userLabel="File's Owner"/>
+        <placeholder placeholderIdentifier="IBFirstResponder" id="-2" customClass="UIResponder"/>
+        <tableViewCell contentMode="scaleToFill" selectionStyle="default" indentationWidth="10" reuseIdentifier="EditProfileAddPhotoTableViewCell" id="jJF-Kk-2tV" customClass="EditProfileAddPhotoTableViewCell" customModule="YiLinkerOnlineBuyer" customModuleProvider="target">
+            <rect key="frame" x="0.0" y="0.0" width="375" height="150"/>
+            <autoresizingMask key="autoresizingMask"/>
+            <tableViewCellContentView key="contentView" opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="center" tableViewCell="jJF-Kk-2tV" id="fEC-13-sWg">
+                <autoresizingMask key="autoresizingMask"/>
+                <subviews>
+                    <view clipsSubviews="YES" contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="ZVx-XC-4ie" userLabel="Add photo view">
+                        <rect key="frame" x="137" y="25" width="100" height="100"/>
+                        <subviews>
+                            <imageView hidden="YES" clipsSubviews="YES" userInteractionEnabled="NO" contentMode="scaleAspectFill" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" image="dummy-placeholder" translatesAutoresizingMaskIntoConstraints="NO" id="KoJ-ly-leF">
+                                <rect key="frame" x="0.0" y="0.0" width="100" height="100"/>
+                            </imageView>
+                            <imageView userInteractionEnabled="NO" contentMode="scaleAspectFit" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" image="photo" translatesAutoresizingMaskIntoConstraints="NO" id="eXL-vX-ouj">
+                                <rect key="frame" x="35" y="22" width="30" height="30"/>
+                            </imageView>
+                            <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" text="Add photo" textAlignment="center" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="oTb-oz-g78">
+                                <rect key="frame" x="0.0" y="57" width="100" height="21"/>
+                                <fontDescription key="fontDescription" type="system" pointSize="14"/>
+                                <color key="textColor" red="1" green="1" blue="1" alpha="1" colorSpace="calibratedRGB"/>
+                                <nil key="highlightedColor"/>
+                            </label>
+                        </subviews>
+                        <color key="backgroundColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
+                        <constraints>
+                            <constraint firstAttribute="width" constant="100" id="Gtr-Ed-Z8g"/>
+                            <constraint firstAttribute="height" constant="100" id="JnN-Os-zCi"/>
+                        </constraints>
+                    </view>
+                </subviews>
+                <constraints>
+                    <constraint firstAttribute="centerY" secondItem="ZVx-XC-4ie" secondAttribute="centerY" id="VG8-Iz-JWR"/>
+                    <constraint firstAttribute="centerX" secondItem="ZVx-XC-4ie" secondAttribute="centerX" id="wVd-CH-pOu"/>
+                </constraints>
+            </tableViewCellContentView>
+            <color key="backgroundColor" red="0.88235294119999996" green="0.88235294119999996" blue="0.88235294119999996" alpha="1" colorSpace="calibratedRGB"/>
+            <connections>
+                <outlet property="addPhotoLabel" destination="oTb-oz-g78" id="Vex-eh-Z4s"/>
+                <outlet property="addPhotoView" destination="ZVx-XC-4ie" id="pw8-iC-O8Z"/>
+                <outlet property="profileImageView" destination="KoJ-ly-leF" id="VtI-Uo-kub"/>
+            </connections>
+            <point key="canvasLocation" x="280.5" y="161"/>
+        </tableViewCell>
+    </objects>
+    <resources>
+        <image name="dummy-placeholder" width="1280" height="800"/>
+        <image name="photo" width="200" height="159"/>
+    </resources>
+</document>
diff --git a/YiLinkerOnlineBuyer/resources/Xib/EditProfileAddressTableViewCell.xib b/YiLinkerOnlineBuyer/resources/Xib/EditProfileAddressTableViewCell.xib
new file mode 100644
index 0000000..26e0959
--- /dev/null
+++ b/YiLinkerOnlineBuyer/resources/Xib/EditProfileAddressTableViewCell.xib
@@ -0,0 +1,121 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="7706" systemVersion="14E46" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" useTraitCollections="YES">
+    <dependencies>
+        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="7703"/>
+    </dependencies>
+    <objects>
+        <placeholder placeholderIdentifier="IBFilesOwner" id="-1" userLabel="File's Owner"/>
+        <placeholder placeholderIdentifier="IBFirstResponder" id="-2" customClass="UIResponder"/>
+        <tableViewCell contentMode="scaleToFill" selectionStyle="default" indentationWidth="10" reuseIdentifier="EditProfileAddressTableViewCell" id="AUz-r7-6Am" customClass="EditProfileAddressTableViewCell" customModule="YiLinkerOnlineBuyer" customModuleProvider="target">
+            <rect key="frame" x="0.0" y="0.0" width="375" height="145"/>
+            <autoresizingMask key="autoresizingMask"/>
+            <tableViewCellContentView key="contentView" opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="center" tableViewCell="AUz-r7-6Am" id="S7f-LZ-6uQ">
+                <autoresizingMask key="autoresizingMask"/>
+                <subviews>
+                    <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="77O-fc-aBE" userLabel="Title">
+                        <rect key="frame" x="0.0" y="0.0" width="375" height="35"/>
+                        <subviews>
+                            <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" text="Address" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="vUx-6r-03k">
+                                <rect key="frame" x="8" y="7" width="359" height="21"/>
+                                <fontDescription key="fontDescription" type="boldSystem" pointSize="12"/>
+                                <color key="textColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
+                                <nil key="highlightedColor"/>
+                            </label>
+                        </subviews>
+                        <color key="backgroundColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
+                        <constraints>
+                            <constraint firstAttribute="height" constant="35" id="hGP-g6-H5k"/>
+                        </constraints>
+                    </view>
+                    <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="fV7-Ct-K8h" userLabel="Address View">
+                        <rect key="frame" x="0.0" y="36" width="375" height="78"/>
+                        <subviews>
+                            <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="roundedRect" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="ZuC-3O-rEz" userLabel="Change Address Icon Button">
+                                <rect key="frame" x="341" y="27" width="13" height="23"/>
+                                <constraints>
+                                    <constraint firstAttribute="height" constant="23" id="FyD-kn-QEg"/>
+                                    <constraint firstAttribute="width" constant="13" id="WWA-fu-cVa"/>
+                                </constraints>
+                                <color key="tintColor" white="0.66666666666666663" alpha="1" colorSpace="calibratedWhite"/>
+                                <state key="normal" backgroundImage="addressRight">
+                                    <color key="titleShadowColor" white="0.5" alpha="1" colorSpace="calibratedWhite"/>
+                                </state>
+                                <connections>
+                                    <action selector="changeAddressAction:" destination="AUz-r7-6Am" eventType="touchUpInside" id="866-z8-jR7"/>
+                                </connections>
+                            </button>
+                            <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Default Address" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="TeV-4G-Wd9">
+                                <rect key="frame" x="8" y="8" width="278" height="12"/>
+                                <constraints>
+                                    <constraint firstAttribute="height" constant="12" id="hTw-oH-hXD"/>
+                                </constraints>
+                                <fontDescription key="fontDescription" type="boldSystem" pointSize="12"/>
+                                <color key="textColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
+                                <nil key="highlightedColor"/>
+                            </label>
+                            <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Address" lineBreakMode="wordWrap" numberOfLines="0" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" preferredMaxLayoutWidth="278" translatesAutoresizingMaskIntoConstraints="NO" id="y8e-dk-W3d">
+                                <rect key="frame" x="8" y="20" width="278" height="50"/>
+                                <fontDescription key="fontDescription" type="system" pointSize="12"/>
+                                <color key="textColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
+                                <nil key="highlightedColor"/>
+                            </label>
+                            <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="roundedRect" lineBreakMode="wordWrap" translatesAutoresizingMaskIntoConstraints="NO" id="Wj7-3S-mMq">
+                                <rect key="frame" x="294" y="16" width="46" height="46"/>
+                                <constraints>
+                                    <constraint firstAttribute="height" constant="46" id="XgV-sz-P5i"/>
+                                    <constraint firstAttribute="width" constant="46" id="sHg-7x-dLe"/>
+                                </constraints>
+                                <fontDescription key="fontDescription" type="system" pointSize="10"/>
+                                <state key="normal" title="Change Address">
+                                    <color key="titleColor" red="0.12156862745098039" green="0.36470588235294116" blue="0.81568627450980391" alpha="1" colorSpace="calibratedRGB"/>
+                                    <color key="titleShadowColor" white="0.5" alpha="1" colorSpace="calibratedWhite"/>
+                                </state>
+                                <connections>
+                                    <action selector="changeAddressAction:" destination="AUz-r7-6Am" eventType="touchUpInside" id="K5a-3U-tlA"/>
+                                </connections>
+                            </button>
+                        </subviews>
+                        <color key="backgroundColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
+                        <constraints>
+                            <constraint firstItem="TeV-4G-Wd9" firstAttribute="top" secondItem="fV7-Ct-K8h" secondAttribute="top" constant="8" id="3f6-nH-p4Z"/>
+                            <constraint firstAttribute="height" constant="78" id="DAr-1Q-CmX"/>
+                            <constraint firstAttribute="bottom" secondItem="ZuC-3O-rEz" secondAttribute="bottom" constant="28" id="FFV-Dq-Ata"/>
+                            <constraint firstAttribute="bottom" secondItem="Wj7-3S-mMq" secondAttribute="bottom" constant="16" id="KpE-8f-faO"/>
+                            <constraint firstItem="y8e-dk-W3d" firstAttribute="top" secondItem="TeV-4G-Wd9" secondAttribute="bottom" id="LeI-vX-VB1"/>
+                            <constraint firstAttribute="centerY" secondItem="Wj7-3S-mMq" secondAttribute="centerY" id="T6c-Vg-Wvs"/>
+                            <constraint firstItem="Wj7-3S-mMq" firstAttribute="top" secondItem="fV7-Ct-K8h" secondAttribute="top" constant="16" id="TPd-mw-dvw"/>
+                            <constraint firstItem="ZuC-3O-rEz" firstAttribute="leading" secondItem="Wj7-3S-mMq" secondAttribute="trailing" constant="1" id="UsI-WF-swu"/>
+                            <constraint firstItem="y8e-dk-W3d" firstAttribute="leading" secondItem="fV7-Ct-K8h" secondAttribute="leading" constant="8" id="aT7-W7-tbd"/>
+                            <constraint firstItem="Wj7-3S-mMq" firstAttribute="leading" secondItem="y8e-dk-W3d" secondAttribute="trailing" constant="8" id="cjg-Za-usK"/>
+                            <constraint firstAttribute="centerY" secondItem="ZuC-3O-rEz" secondAttribute="centerY" id="fGv-DD-XPA"/>
+                            <constraint firstItem="Wj7-3S-mMq" firstAttribute="leading" secondItem="TeV-4G-Wd9" secondAttribute="trailing" constant="8" id="lQP-FU-kTc"/>
+                            <constraint firstItem="ZuC-3O-rEz" firstAttribute="top" secondItem="fV7-Ct-K8h" secondAttribute="top" constant="27" id="mQV-9b-g9d"/>
+                            <constraint firstAttribute="bottom" secondItem="y8e-dk-W3d" secondAttribute="bottom" constant="8" id="nbl-BD-mSt"/>
+                            <constraint firstItem="TeV-4G-Wd9" firstAttribute="leading" secondItem="fV7-Ct-K8h" secondAttribute="leading" constant="8" id="rQb-7G-XwN"/>
+                            <constraint firstAttribute="trailing" secondItem="ZuC-3O-rEz" secondAttribute="trailing" constant="21" id="sv0-mn-S8L"/>
+                        </constraints>
+                    </view>
+                </subviews>
+                <color key="backgroundColor" red="0.88235294119999996" green="0.88235294119999996" blue="0.88235294119999996" alpha="1" colorSpace="calibratedRGB"/>
+                <constraints>
+                    <constraint firstItem="77O-fc-aBE" firstAttribute="leading" secondItem="S7f-LZ-6uQ" secondAttribute="leading" id="2uX-rw-fgw"/>
+                    <constraint firstItem="77O-fc-aBE" firstAttribute="top" secondItem="S7f-LZ-6uQ" secondAttribute="top" id="2yU-bI-DmP"/>
+                    <constraint firstItem="fV7-Ct-K8h" firstAttribute="leading" secondItem="S7f-LZ-6uQ" secondAttribute="leading" id="9wS-Dc-uJw"/>
+                    <constraint firstAttribute="trailing" secondItem="fV7-Ct-K8h" secondAttribute="trailing" id="BIa-0R-60A"/>
+                    <constraint firstAttribute="trailing" secondItem="77O-fc-aBE" secondAttribute="trailing" id="gOf-HV-sQh"/>
+                    <constraint firstItem="fV7-Ct-K8h" firstAttribute="top" secondItem="77O-fc-aBE" secondAttribute="bottom" constant="1" id="iGJ-gD-tYj"/>
+                </constraints>
+            </tableViewCellContentView>
+            <connections>
+                <outlet property="addressLabel" destination="y8e-dk-W3d" id="1Xu-rg-iHe"/>
+                <outlet property="addressTitleLabel" destination="TeV-4G-Wd9" id="FxW-yB-KUh"/>
+                <outlet property="changeAddressButton" destination="Wj7-3S-mMq" id="yKY-Ox-RPp"/>
+                <outlet property="changeAdressIconButton" destination="ZuC-3O-rEz" id="Mt1-Gq-e6V"/>
+            </connections>
+            <point key="canvasLocation" x="253.5" y="174.5"/>
+        </tableViewCell>
+    </objects>
+    <resources>
+        <image name="addressRight" width="97" height="200"/>
+    </resources>
+</document>
diff --git a/YiLinkerOnlineBuyer/resources/Xib/EditProfilePersonalInformationTableViewCell.xib b/YiLinkerOnlineBuyer/resources/Xib/EditProfilePersonalInformationTableViewCell.xib
new file mode 100644
index 0000000..7ce6112
--- /dev/null
+++ b/YiLinkerOnlineBuyer/resources/Xib/EditProfilePersonalInformationTableViewCell.xib
@@ -0,0 +1,165 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="7706" systemVersion="14E46" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" useTraitCollections="YES">
+    <dependencies>
+        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="7703"/>
+        <capability name="Constraints to layout margins" minToolsVersion="6.0"/>
+    </dependencies>
+    <objects>
+        <placeholder placeholderIdentifier="IBFilesOwner" id="-1" userLabel="File's Owner"/>
+        <placeholder placeholderIdentifier="IBFirstResponder" id="-2" customClass="UIResponder"/>
+        <tableViewCell contentMode="scaleToFill" selectionStyle="default" indentationWidth="10" reuseIdentifier="EditProfilePersonalInformationTableViewCell" id="3XT-ns-6vO" customClass="EditProfilePersonalInformationTableViewCell" customModule="YiLinkerOnlineBuyer" customModuleProvider="target">
+            <rect key="frame" x="0.0" y="0.0" width="375" height="175"/>
+            <autoresizingMask key="autoresizingMask"/>
+            <tableViewCellContentView key="contentView" opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="center" tableViewCell="3XT-ns-6vO" id="z2Q-uL-6ig">
+                <autoresizingMask key="autoresizingMask"/>
+                <subviews>
+                    <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="2YO-3i-ECZ" userLabel="Title">
+                        <rect key="frame" x="0.0" y="0.0" width="375" height="35"/>
+                        <subviews>
+                            <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" text="Personal Information" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="gXL-JZ-yWD">
+                                <rect key="frame" x="8" y="7" width="359" height="21"/>
+                                <fontDescription key="fontDescription" type="boldSystem" pointSize="12"/>
+                                <color key="textColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
+                                <nil key="highlightedColor"/>
+                            </label>
+                        </subviews>
+                        <color key="backgroundColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
+                        <constraints>
+                            <constraint firstAttribute="height" constant="35" id="wjT-5q-Qi9"/>
+                        </constraints>
+                    </view>
+                    <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" usesAttributedText="YES" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="h6c-km-9mO">
+                        <rect key="frame" x="8" y="43" width="175" height="21"/>
+                        <constraints>
+                            <constraint firstAttribute="height" constant="21" id="g4t-bE-CtT"/>
+                        </constraints>
+                        <attributedString key="attributedText">
+                            <fragment content="First Name">
+                                <attributes>
+                                    <color key="NSColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
+                                    <font key="NSFont" size="12" name="HelveticaNeue"/>
+                                    <paragraphStyle key="NSParagraphStyle" alignment="left" lineBreakMode="wordWrapping" baseWritingDirection="natural"/>
+                                </attributes>
+                            </fragment>
+                            <fragment content="*">
+                                <attributes>
+                                    <color key="NSColor" red="1" green="0.0" blue="0.0" alpha="1" colorSpace="calibratedRGB"/>
+                                    <font key="NSFont" size="12" name="HelveticaNeue"/>
+                                    <paragraphStyle key="NSParagraphStyle" alignment="left" lineBreakMode="wordWrapping" baseWritingDirection="natural"/>
+                                </attributes>
+                            </fragment>
+                        </attributedString>
+                        <nil key="highlightedColor"/>
+                    </label>
+                    <textField opaque="NO" clipsSubviews="YES" contentMode="scaleToFill" contentHorizontalAlignment="left" contentVerticalAlignment="center" text="Van" borderStyle="roundedRect" minimumFontSize="17" translatesAutoresizingMaskIntoConstraints="NO" id="D8k-hJ-wVA">
+                        <rect key="frame" x="8" y="64" width="175" height="30"/>
+                        <color key="textColor" white="0.66666666666666663" alpha="1" colorSpace="calibratedWhite"/>
+                        <fontDescription key="fontDescription" type="system" pointSize="12"/>
+                        <textInputTraits key="textInputTraits"/>
+                        <connections>
+                            <action selector="editingAction:" destination="3XT-ns-6vO" eventType="editingChanged" id="ZjL-iA-Sl0"/>
+                        </connections>
+                    </textField>
+                    <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" usesAttributedText="YES" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="Tgb-o1-qLm">
+                        <rect key="frame" x="8" y="102" width="175" height="21"/>
+                        <constraints>
+                            <constraint firstAttribute="height" constant="21" id="76w-e7-cWb"/>
+                        </constraints>
+                        <attributedString key="attributedText">
+                            <fragment content="Mobile Phone">
+                                <attributes>
+                                    <color key="NSColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
+                                    <font key="NSFont" size="12" name="HelveticaNeue"/>
+                                    <paragraphStyle key="NSParagraphStyle" alignment="left" lineBreakMode="wordWrapping" baseWritingDirection="natural"/>
+                                </attributes>
+                            </fragment>
+                        </attributedString>
+                        <nil key="highlightedColor"/>
+                    </label>
+                    <textField opaque="NO" clipsSubviews="YES" contentMode="scaleToFill" contentHorizontalAlignment="left" contentVerticalAlignment="center" text="+63 9123456789" borderStyle="roundedRect" minimumFontSize="17" translatesAutoresizingMaskIntoConstraints="NO" id="E6M-FD-Jpv">
+                        <rect key="frame" x="8" y="123" width="175" height="30"/>
+                        <constraints>
+                            <constraint firstAttribute="height" constant="30" id="RDD-Lk-1F4"/>
+                        </constraints>
+                        <color key="textColor" white="0.66666666666666663" alpha="1" colorSpace="calibratedWhite"/>
+                        <fontDescription key="fontDescription" type="system" pointSize="12"/>
+                        <textInputTraits key="textInputTraits" keyboardType="numberPad"/>
+                        <connections>
+                            <action selector="editingAction:" destination="3XT-ns-6vO" eventType="editingDidEnd" id="zMN-XG-Kfw"/>
+                        </connections>
+                    </textField>
+                    <textField opaque="NO" clipsSubviews="YES" contentMode="scaleToFill" contentHorizontalAlignment="left" contentVerticalAlignment="center" text="Dalism" borderStyle="roundedRect" minimumFontSize="17" translatesAutoresizingMaskIntoConstraints="NO" id="pNa-IP-8ln">
+                        <rect key="frame" x="191" y="64" width="175" height="30"/>
+                        <constraints>
+                            <constraint firstAttribute="height" constant="30" id="MR4-6q-AJj"/>
+                        </constraints>
+                        <color key="textColor" white="0.66666666666666663" alpha="1" colorSpace="calibratedWhite"/>
+                        <fontDescription key="fontDescription" type="system" pointSize="12"/>
+                        <textInputTraits key="textInputTraits"/>
+                        <connections>
+                            <action selector="editingAction:" destination="3XT-ns-6vO" eventType="editingDidEnd" id="Icd-su-3Ot"/>
+                        </connections>
+                    </textField>
+                    <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" usesAttributedText="YES" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="QYK-jr-zIY">
+                        <rect key="frame" x="191" y="43" width="175" height="21"/>
+                        <constraints>
+                            <constraint firstAttribute="height" constant="21" id="hse-dB-5xO"/>
+                        </constraints>
+                        <attributedString key="attributedText">
+                            <fragment content="Last Name">
+                                <attributes>
+                                    <color key="NSColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
+                                    <font key="NSFont" size="12" name="HelveticaNeue"/>
+                                    <paragraphStyle key="NSParagraphStyle" alignment="left" lineBreakMode="wordWrapping" baseWritingDirection="natural"/>
+                                </attributes>
+                            </fragment>
+                            <fragment content="*">
+                                <attributes>
+                                    <color key="NSColor" red="1" green="0.0" blue="0.0" alpha="1" colorSpace="calibratedRGB"/>
+                                    <font key="NSFont" size="12" name="HelveticaNeue"/>
+                                    <paragraphStyle key="NSParagraphStyle" alignment="left" lineBreakMode="wordWrapping" baseWritingDirection="natural"/>
+                                </attributes>
+                            </fragment>
+                        </attributedString>
+                        <nil key="highlightedColor"/>
+                    </label>
+                </subviews>
+                <color key="backgroundColor" red="0.88235294119999996" green="0.88235294119999996" blue="0.88235294119999996" alpha="1" colorSpace="calibratedRGB"/>
+                <constraints>
+                    <constraint firstItem="pNa-IP-8ln" firstAttribute="leading" secondItem="D8k-hJ-wVA" secondAttribute="trailing" constant="8" id="0ru-8L-7tO"/>
+                    <constraint firstItem="Tgb-o1-qLm" firstAttribute="top" secondItem="D8k-hJ-wVA" secondAttribute="bottom" constant="8" id="1nc-rH-Gu6"/>
+                    <constraint firstItem="E6M-FD-Jpv" firstAttribute="width" secondItem="Tgb-o1-qLm" secondAttribute="width" id="3Po-Ah-fQy"/>
+                    <constraint firstItem="Tgb-o1-qLm" firstAttribute="leading" secondItem="z2Q-uL-6ig" secondAttribute="leadingMargin" id="3zQ-6y-aJk"/>
+                    <constraint firstItem="h6c-km-9mO" firstAttribute="top" secondItem="2YO-3i-ECZ" secondAttribute="bottom" constant="8" id="5JA-VR-Q0v"/>
+                    <constraint firstItem="Tgb-o1-qLm" firstAttribute="top" secondItem="D8k-hJ-wVA" secondAttribute="bottom" constant="8" id="6Ys-KC-z70"/>
+                    <constraint firstAttribute="trailing" secondItem="2YO-3i-ECZ" secondAttribute="trailing" id="7lC-hO-DME"/>
+                    <constraint firstAttribute="bottomMargin" secondItem="E6M-FD-Jpv" secondAttribute="bottom" constant="13" id="A4Z-kf-Qkt"/>
+                    <constraint firstItem="pNa-IP-8ln" firstAttribute="top" secondItem="QYK-jr-zIY" secondAttribute="bottom" id="FbZ-vT-uDf"/>
+                    <constraint firstItem="QYK-jr-zIY" firstAttribute="top" secondItem="2YO-3i-ECZ" secondAttribute="bottom" constant="8" id="IEz-eU-fvm"/>
+                    <constraint firstItem="E6M-FD-Jpv" firstAttribute="width" secondItem="QYK-jr-zIY" secondAttribute="width" id="JiQ-oD-lHH"/>
+                    <constraint firstItem="E6M-FD-Jpv" firstAttribute="top" secondItem="Tgb-o1-qLm" secondAttribute="bottom" id="Jq9-B0-ZBb"/>
+                    <constraint firstAttribute="trailingMargin" secondItem="QYK-jr-zIY" secondAttribute="trailing" constant="1" id="Lz5-cg-ZKe"/>
+                    <constraint firstItem="2YO-3i-ECZ" firstAttribute="leading" secondItem="z2Q-uL-6ig" secondAttribute="leading" id="OaJ-rs-xUO"/>
+                    <constraint firstItem="D8k-hJ-wVA" firstAttribute="leading" secondItem="z2Q-uL-6ig" secondAttribute="leadingMargin" id="Sry-gR-cXs"/>
+                    <constraint firstItem="E6M-FD-Jpv" firstAttribute="width" secondItem="h6c-km-9mO" secondAttribute="width" id="UaH-sH-zFt"/>
+                    <constraint firstAttribute="trailingMargin" secondItem="pNa-IP-8ln" secondAttribute="trailing" constant="1" id="a3j-fH-GyB"/>
+                    <constraint firstItem="D8k-hJ-wVA" firstAttribute="top" secondItem="h6c-km-9mO" secondAttribute="bottom" id="afv-FE-t7u"/>
+                    <constraint firstItem="E6M-FD-Jpv" firstAttribute="width" secondItem="D8k-hJ-wVA" secondAttribute="width" id="c7z-IP-ajv"/>
+                    <constraint firstItem="pNa-IP-8ln" firstAttribute="top" secondItem="QYK-jr-zIY" secondAttribute="bottom" id="dmv-mU-XH6"/>
+                    <constraint firstItem="E6M-FD-Jpv" firstAttribute="leading" secondItem="z2Q-uL-6ig" secondAttribute="leadingMargin" id="iPi-rF-h0O"/>
+                    <constraint firstItem="2YO-3i-ECZ" firstAttribute="top" secondItem="z2Q-uL-6ig" secondAttribute="top" id="jH1-l3-N5z"/>
+                    <constraint firstItem="h6c-km-9mO" firstAttribute="leading" secondItem="z2Q-uL-6ig" secondAttribute="leadingMargin" id="tLo-CT-70M"/>
+                    <constraint firstItem="D8k-hJ-wVA" firstAttribute="top" secondItem="h6c-km-9mO" secondAttribute="bottom" id="vol-WL-nLh"/>
+                    <constraint firstItem="E6M-FD-Jpv" firstAttribute="width" secondItem="pNa-IP-8ln" secondAttribute="width" id="wa6-D4-cl7"/>
+                    <constraint firstItem="E6M-FD-Jpv" firstAttribute="top" secondItem="Tgb-o1-qLm" secondAttribute="bottom" id="xtF-2W-KMR"/>
+                </constraints>
+            </tableViewCellContentView>
+            <connections>
+                <outlet property="firstNameTextField" destination="D8k-hJ-wVA" id="YyI-3N-JZN"/>
+                <outlet property="lastNameTextField" destination="pNa-IP-8ln" id="Nfe-3T-rLe"/>
+                <outlet property="mobilePhoneTextField" destination="E6M-FD-Jpv" id="AaI-0W-SIY"/>
+            </connections>
+            <point key="canvasLocation" x="253.5" y="174.5"/>
+        </tableViewCell>
+    </objects>
+</document>
diff --git a/YiLinkerOnlineBuyer/resources/Xib/PaymentTableViewCell.xib b/YiLinkerOnlineBuyer/resources/Xib/PaymentTableViewCell.xib
index 13c32fb..44da2d0 100644
--- a/YiLinkerOnlineBuyer/resources/Xib/PaymentTableViewCell.xib
+++ b/YiLinkerOnlineBuyer/resources/Xib/PaymentTableViewCell.xib
@@ -251,19 +251,19 @@
                     <view clipsSubviews="YES" tag="11" contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="4ib-d9-hJp">
                         <rect key="frame" x="156" y="48" width="136" height="124"/>
                         <subviews>
-                            <imageView userInteractionEnabled="NO" contentMode="scaleAspectFit" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" image="dragonpay" translatesAutoresizingMaskIntoConstraints="NO" id="bkH-u8-FVD">
+                            <imageView userInteractionEnabled="NO" contentMode="scaleAspectFit" horizontalHuggingPriority="251" verticalHuggingPriority="251" image="dragonpay" translatesAutoresizingMaskIntoConstraints="NO" id="bkH-u8-FVD">
                                 <rect key="frame" x="6" y="57" width="77" height="64"/>
                             </imageView>
-                            <imageView userInteractionEnabled="NO" contentMode="scaleAspectFit" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" image="pesopay" translatesAutoresizingMaskIntoConstraints="NO" id="eo2-mh-uxO">
+                            <imageView userInteractionEnabled="NO" contentMode="scaleAspectFit" horizontalHuggingPriority="251" verticalHuggingPriority="251" image="pesopay" translatesAutoresizingMaskIntoConstraints="NO" id="eo2-mh-uxO">
                                 <rect key="frame" x="61" y="71" width="71" height="31"/>
                             </imageView>
-                            <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" text="Creditcard" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="ET9-zM-Un0">
+                            <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Creditcard" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="ET9-zM-Un0">
                                 <rect key="frame" x="45" y="18" width="94" height="23"/>
                                 <fontDescription key="fontDescription" name="Panton-SemiBold" family="Panton" pointSize="16"/>
                                 <color key="textColor" white="0.27000000000000002" alpha="1" colorSpace="calibratedWhite"/>
                                 <nil key="highlightedColor"/>
                             </label>
-                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="Rq3-le-FDD" customClass="SemiRoundedButton" customModule="YiLinkerOnlineBuyer" customModuleProvider="target">
+                            <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="Rq3-le-FDD" customClass="SemiRoundedButton" customModule="YiLinkerOnlineBuyer" customModuleProvider="target">
                                 <rect key="frame" x="12" y="18" width="25" height="25"/>
                                 <color key="backgroundColor" red="0.2666666667" green="0.64313725489999995" blue="0.56862745100000001" alpha="1" colorSpace="calibratedRGB"/>
                                 <inset key="contentEdgeInsets" minX="6" minY="6" maxX="6" maxY="6"/>
@@ -283,7 +283,7 @@
                     <view clipsSubviews="YES" tag="10" contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="Pw7-s3-ViR">
                         <rect key="frame" x="11" y="48" width="136" height="124"/>
                         <subviews>
-                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="gBn-nf-yql" customClass="SemiRoundedButton" customModule="YiLinkerOnlineBuyer" customModuleProvider="target">
+                            <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="gBn-nf-yql" customClass="SemiRoundedButton" customModule="YiLinkerOnlineBuyer" customModuleProvider="target">
                                 <rect key="frame" x="22" y="17" width="25" height="25"/>
                                 <color key="backgroundColor" red="0.2666666667" green="0.64313725489999995" blue="0.56862745100000001" alpha="1" colorSpace="calibratedRGB"/>
                                 <inset key="contentEdgeInsets" minX="6" minY="6" maxX="6" maxY="6"/>
@@ -294,13 +294,13 @@
                                     </userDefinedRuntimeAttribute>
                                 </userDefinedRuntimeAttributes>
                             </button>
-                            <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" text="CoD" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="FfD-4C-J4R">
+                            <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="CoD" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="FfD-4C-J4R">
                                 <rect key="frame" x="63" y="17" width="38" height="23"/>
                                 <fontDescription key="fontDescription" name="Panton-SemiBold" family="Panton" pointSize="16"/>
                                 <color key="textColor" white="0.27000000000000002" alpha="1" colorSpace="calibratedWhite"/>
                                 <nil key="highlightedColor"/>
                             </label>
-                            <imageView userInteractionEnabled="NO" contentMode="scaleAspectFit" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" image="cod" translatesAutoresizingMaskIntoConstraints="NO" id="76o-g0-mM5">
+                            <imageView userInteractionEnabled="NO" contentMode="scaleAspectFit" horizontalHuggingPriority="251" verticalHuggingPriority="251" image="cod" translatesAutoresizingMaskIntoConstraints="NO" id="76o-g0-mM5">
                                 <rect key="frame" x="6" y="54" width="124" height="65"/>
                             </imageView>
                         </subviews>
diff --git a/YiLinkerOnlineBuyer/resources/Xib/ProductAttributeViewController.xib b/YiLinkerOnlineBuyer/resources/Xib/ProductAttributeViewController.xib
index 9328dd8..e6bf53a 100644
--- a/YiLinkerOnlineBuyer/resources/Xib/ProductAttributeViewController.xib
+++ b/YiLinkerOnlineBuyer/resources/Xib/ProductAttributeViewController.xib
@@ -90,7 +90,7 @@
                 <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="gsg-4n-EbB" userLabel="Name">
                     <rect key="frame" x="0.0" y="187" width="375" height="110"/>
                     <subviews>
-                        <imageView userInteractionEnabled="NO" contentMode="scaleToFill" horizontalHuggingPriority="251" verticalHuggingPriority="251" image="dummy-placeholder" translatesAutoresizingMaskIntoConstraints="NO" id="W5L-TY-IXI">
+                        <imageView clipsSubviews="YES" userInteractionEnabled="NO" contentMode="scaleAspectFill" horizontalHuggingPriority="251" verticalHuggingPriority="251" image="dummy-placeholder" translatesAutoresizingMaskIntoConstraints="NO" id="W5L-TY-IXI">
                             <rect key="frame" x="10" y="6" width="100" height="97"/>
                             <constraints>
                                 <constraint firstAttribute="height" constant="97" id="SWG-xw-Z4Q"/>
diff --git a/YiLinkerOnlineBuyer/resources/Xib/ProfileSettingsTableViewCell.xib b/YiLinkerOnlineBuyer/resources/Xib/ProfileSettingsTableViewCell.xib
new file mode 100644
index 0000000..95dea94
--- /dev/null
+++ b/YiLinkerOnlineBuyer/resources/Xib/ProfileSettingsTableViewCell.xib
@@ -0,0 +1,47 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="7706" systemVersion="14E46" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" useTraitCollections="YES">
+    <dependencies>
+        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="7703"/>
+    </dependencies>
+    <objects>
+        <placeholder placeholderIdentifier="IBFilesOwner" id="-1" userLabel="File's Owner"/>
+        <placeholder placeholderIdentifier="IBFirstResponder" id="-2" customClass="UIResponder"/>
+        <tableViewCell contentMode="scaleToFill" selectionStyle="default" indentationWidth="10" reuseIdentifier="ProfileSettingsTableViewCell" id="mem-P3-Fxh" customClass="ProfileSettingsTableViewCell" customModule="YiLinkerOnlineBuyer" customModuleProvider="target">
+            <rect key="frame" x="0.0" y="0.0" width="375" height="50"/>
+            <autoresizingMask key="autoresizingMask"/>
+            <tableViewCellContentView key="contentView" opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="center" tableViewCell="mem-P3-Fxh" id="W8x-10-zIh">
+                <autoresizingMask key="autoresizingMask"/>
+                <subviews>
+                    <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Label" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="Tsz-gT-R7d">
+                        <rect key="frame" x="8" y="14" width="302" height="21"/>
+                        <fontDescription key="fontDescription" type="system" pointSize="12"/>
+                        <color key="textColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
+                        <nil key="highlightedColor"/>
+                    </label>
+                    <switch opaque="NO" contentMode="scaleToFill" horizontalHuggingPriority="750" verticalHuggingPriority="750" contentHorizontalAlignment="center" contentVerticalAlignment="center" on="YES" translatesAutoresizingMaskIntoConstraints="NO" id="7hT-sp-cYW">
+                        <rect key="frame" x="318" y="9" width="51" height="31"/>
+                        <connections>
+                            <action selector="switchAction:" destination="mem-P3-Fxh" eventType="valueChanged" id="HPU-zG-E6m"/>
+                        </connections>
+                    </switch>
+                </subviews>
+                <constraints>
+                    <constraint firstAttribute="trailing" secondItem="7hT-sp-cYW" secondAttribute="trailing" constant="8" id="BiS-6Y-FJK"/>
+                    <constraint firstAttribute="bottom" secondItem="7hT-sp-cYW" secondAttribute="bottom" constant="9" id="Bzm-ds-S6L"/>
+                    <constraint firstItem="7hT-sp-cYW" firstAttribute="leading" secondItem="Tsz-gT-R7d" secondAttribute="trailing" constant="8" id="ERQ-u0-iXP"/>
+                    <constraint firstItem="7hT-sp-cYW" firstAttribute="top" secondItem="W8x-10-zIh" secondAttribute="top" constant="9" id="ETn-wr-CA7"/>
+                    <constraint firstItem="7hT-sp-cYW" firstAttribute="leading" secondItem="Tsz-gT-R7d" secondAttribute="trailing" constant="8" id="LRG-aS-G7H"/>
+                    <constraint firstItem="Tsz-gT-R7d" firstAttribute="top" secondItem="W8x-10-zIh" secondAttribute="top" constant="14" id="UEf-tI-3eb"/>
+                    <constraint firstAttribute="bottom" secondItem="Tsz-gT-R7d" secondAttribute="bottom" constant="14" id="iZE-VM-djF"/>
+                    <constraint firstItem="Tsz-gT-R7d" firstAttribute="leading" secondItem="W8x-10-zIh" secondAttribute="leading" constant="8" id="jvk-Ju-hUS"/>
+                </constraints>
+            </tableViewCellContentView>
+            <color key="backgroundColor" red="0.88235294119999996" green="0.88235294119999996" blue="0.88235294119999996" alpha="1" colorSpace="calibratedRGB"/>
+            <connections>
+                <outlet property="settingsLabel" destination="Tsz-gT-R7d" id="ZMe-a2-SXG"/>
+                <outlet property="settingsSwitch" destination="7hT-sp-cYW" id="gqs-G9-1Ee"/>
+            </connections>
+            <point key="canvasLocation" x="325.5" y="392"/>
+        </tableViewCell>
+    </objects>
+</document>
diff --git a/YiLinkerOnlineBuyer/resources/Xib/ResultViewController.xib b/YiLinkerOnlineBuyer/resources/Xib/ResultViewController.xib
index 0d0b77a..cd34b97 100644
--- a/YiLinkerOnlineBuyer/resources/Xib/ResultViewController.xib
+++ b/YiLinkerOnlineBuyer/resources/Xib/ResultViewController.xib
@@ -8,6 +8,7 @@
             <connections>
                 <outlet property="dimView" destination="rI2-hy-mMb" id="Js4-ik-wzp"/>
                 <outlet property="filterView" destination="hXh-Ex-xcS" id="xu4-Nc-i66"/>
+                <outlet property="noResultLabel" destination="VbX-l4-1Ju" id="F7o-kc-cGc"/>
                 <outlet property="resultCollectionView" destination="LgG-iv-oKa" id="RdW-iY-6SE"/>
                 <outlet property="sortPickerTableView" destination="Mkh-ce-Sbp" id="BV0-Gm-2OM"/>
                 <outlet property="sortView" destination="kDF-aw-IfE" id="5ql-O6-eg7"/>
@@ -178,6 +179,12 @@
                         <outlet property="delegate" destination="-1" id="3VA-t4-v2H"/>
                     </connections>
                 </collectionView>
+                <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="No results found." textAlignment="center" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="VbX-l4-1Ju">
+                    <rect key="frame" x="132" y="325" width="111" height="17"/>
+                    <fontDescription key="fontDescription" type="system" pointSize="14"/>
+                    <color key="textColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
+                    <nil key="highlightedColor"/>
+                </label>
                 <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="rI2-hy-mMb" userLabel="Dim">
                     <rect key="frame" x="0.0" y="36" width="375" height="631"/>
                     <subviews>
@@ -239,8 +246,10 @@
                 <constraint firstItem="LgG-iv-oKa" firstAttribute="top" secondItem="RTW-vQ-k8z" secondAttribute="bottom" id="Ve1-jb-cXt"/>
                 <constraint firstAttribute="trailing" secondItem="LgG-iv-oKa" secondAttribute="trailing" id="WgL-4Y-c2s"/>
                 <constraint firstItem="RTW-vQ-k8z" firstAttribute="leading" secondItem="i5M-Pr-FkT" secondAttribute="leading" id="Yf4-jv-cDM"/>
+                <constraint firstAttribute="centerX" secondItem="VbX-l4-1Ju" secondAttribute="centerX" id="blL-uz-3Zg"/>
                 <constraint firstItem="rI2-hy-mMb" firstAttribute="top" secondItem="RTW-vQ-k8z" secondAttribute="bottom" id="gdA-zU-AVk"/>
                 <constraint firstAttribute="trailing" secondItem="Uyb-VK-Thh" secondAttribute="trailing" id="grP-MA-heG"/>
+                <constraint firstAttribute="centerY" secondItem="VbX-l4-1Ju" secondAttribute="centerY" id="wLN-qk-k3r"/>
                 <constraint firstItem="RTW-vQ-k8z" firstAttribute="top" secondItem="Uyb-VK-Thh" secondAttribute="bottom" id="xGa-gh-NDK"/>
                 <constraint firstAttribute="bottom" secondItem="rI2-hy-mMb" secondAttribute="bottom" id="xGx-gi-ehU"/>
             </constraints>
diff --git a/YiLinkerOnlineBuyer/resources/Xib/SellerResultCollectionViewCell.xib b/YiLinkerOnlineBuyer/resources/Xib/SellerResultCollectionViewCell.xib
index d342c1e..3be8d9d 100644
--- a/YiLinkerOnlineBuyer/resources/Xib/SellerResultCollectionViewCell.xib
+++ b/YiLinkerOnlineBuyer/resources/Xib/SellerResultCollectionViewCell.xib
@@ -10,13 +10,13 @@
             <rect key="frame" x="0.0" y="0.0" width="375" height="225"/>
             <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
             <subviews>
-                <view contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="2r9-1e-KCK">
+                <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="2r9-1e-KCK">
                     <rect key="frame" x="0.0" y="15" width="375" height="210"/>
                     <subviews>
-                        <view contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="WDg-GY-CNz" userLabel="Seller Header">
+                        <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="WDg-GY-CNz" userLabel="Seller Header">
                             <rect key="frame" x="0.0" y="0.0" width="375" height="50"/>
                             <subviews>
-                                <imageView userInteractionEnabled="NO" contentMode="scaleAspectFill" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" image="dummy-placeholder" translatesAutoresizingMaskIntoConstraints="NO" id="lEu-qv-lTN" userLabel="Seller Image" customClass="RoundedImageView" customModule="YiLinkerOnlineBuyer" customModuleProvider="target">
+                                <imageView userInteractionEnabled="NO" contentMode="scaleAspectFill" horizontalHuggingPriority="251" verticalHuggingPriority="251" image="dummy-placeholder" translatesAutoresizingMaskIntoConstraints="NO" id="lEu-qv-lTN" userLabel="Seller Image" customClass="RoundedImageView" customModule="YiLinkerOnlineBuyer" customModuleProvider="target">
                                     <rect key="frame" x="8" y="6" width="38" height="38"/>
                                     <userDefinedRuntimeAttributes>
                                         <userDefinedRuntimeAttribute type="number" keyPath="cornerRadius">
@@ -24,7 +24,7 @@
                                         </userDefinedRuntimeAttribute>
                                     </userDefinedRuntimeAttributes>
                                 </imageView>
-                                <button opaque="NO" clipsSubviews="YES" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="Txz-g4-fRZ" userLabel="Follow " customClass="RoundedButton" customModule="YiLinkerOnlineBuyer" customModuleProvider="target">
+                                <button opaque="NO" clipsSubviews="YES" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="Txz-g4-fRZ" userLabel="Follow " customClass="RoundedButton" customModule="YiLinkerOnlineBuyer" customModuleProvider="target">
                                     <rect key="frame" x="329" y="6" width="38" height="38"/>
                                     <color key="backgroundColor" red="0.37647058820000001" green="0.12549019610000001" blue="0.46666666670000001" alpha="1" colorSpace="calibratedRGB"/>
                                     <inset key="imageEdgeInsets" minX="5" minY="5" maxX="5" maxY="5"/>
@@ -37,13 +37,13 @@
                                         </userDefinedRuntimeAttribute>
                                     </userDefinedRuntimeAttributes>
                                 </button>
-                                <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" text="Seller Name" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="cyt-pf-Dme">
+                                <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Seller Name" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="cyt-pf-Dme">
                                     <rect key="frame" x="54" y="10" width="267" height="15"/>
                                     <fontDescription key="fontDescription" type="boldSystem" pointSize="14"/>
                                     <color key="textColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
                                     <nil key="highlightedColor"/>
                                 </label>
-                                <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" text="Label" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="3k5-bE-FIs" userLabel="Speciality Label">
+                                <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Label" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="3k5-bE-FIs" userLabel="Speciality Label">
                                     <rect key="frame" x="54" y="25" width="267" height="15"/>
                                     <fontDescription key="fontDescription" type="system" pointSize="12"/>
                                     <color key="textColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
@@ -52,7 +52,7 @@
                             </subviews>
                             <color key="backgroundColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
                         </view>
-                        <collectionView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" dataMode="none" translatesAutoresizingMaskIntoConstraints="NO" id="DAc-Wn-l0p">
+                        <collectionView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" dataMode="none" translatesAutoresizingMaskIntoConstraints="NO" id="DAc-Wn-l0p">
                             <rect key="frame" x="8" y="50" width="359" height="85"/>
                             <color key="backgroundColor" red="0.88235294119999996" green="0.88235294119999996" blue="0.88235294119999996" alpha="1" colorSpace="calibratedRGB"/>
                             <collectionViewFlowLayout key="collectionViewLayout" scrollDirection="horizontal" minimumLineSpacing="1" minimumInteritemSpacing="1" id="2tO-C8-coY">
@@ -62,27 +62,27 @@
                                 <inset key="sectionInset" minX="0.0" minY="0.0" maxX="0.0" maxY="0.0"/>
                             </collectionViewFlowLayout>
                         </collectionView>
-                        <view contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="2vM-Gj-Q8C" userLabel="Seller Footer">
+                        <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="2vM-Gj-Q8C" userLabel="Seller Footer">
                             <rect key="frame" x="0.0" y="135" width="375" height="75"/>
                             <subviews>
-                                <view contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="UmQ-ap-z3r" userLabel="Separator View">
+                                <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="UmQ-ap-z3r" userLabel="Separator View">
                                     <rect key="frame" x="0.0" y="30" width="375" height="1"/>
                                     <color key="backgroundColor" white="0.66666666666666663" alpha="1" colorSpace="calibratedWhite"/>
                                 </view>
-                                <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" lineBreakMode="tailTruncation" numberOfLines="3" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="E2r-gw-Idx" userLabel="Seller Description Label">
+                                <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" lineBreakMode="tailTruncation" numberOfLines="3" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="E2r-gw-Idx" userLabel="Seller Description Label">
                                     <rect key="frame" x="8" y="33" width="359" height="34"/>
                                     <string key="text">Lorem ipsum dolor sit er elit lamet, consectetaur cillium adipisicing pecu, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Nam liber te conscient to factor tum poen legum odioque civiuda.</string>
                                     <fontDescription key="fontDescription" type="system" pointSize="9"/>
                                     <color key="textColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
                                     <nil key="highlightedColor"/>
                                 </label>
-                                <view contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="sXE-CF-gqe" userLabel="Verify Seller View">
+                                <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="sXE-CF-gqe" userLabel="Verify Seller View">
                                     <rect key="frame" x="8" y="0.0" width="95" height="30"/>
                                     <subviews>
-                                        <imageView userInteractionEnabled="NO" contentMode="scaleAspectFit" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" image="verify-green" translatesAutoresizingMaskIntoConstraints="NO" id="6XK-Xh-VFS">
+                                        <imageView userInteractionEnabled="NO" contentMode="scaleAspectFit" horizontalHuggingPriority="251" verticalHuggingPriority="251" image="verify-green" translatesAutoresizingMaskIntoConstraints="NO" id="6XK-Xh-VFS">
                                             <rect key="frame" x="0.0" y="5" width="20" height="20"/>
                                         </imageView>
-                                        <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" text="Verified Seller" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="dn8-SP-G9L">
+                                        <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Verified Seller" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="dn8-SP-G9L">
                                             <rect key="frame" x="20" y="4" width="75" height="21"/>
                                             <fontDescription key="fontDescription" type="system" pointSize="10"/>
                                             <color key="textColor" red="0.2666666667" green="0.64313725489999995" blue="0.56862745100000001" alpha="1" colorSpace="calibratedRGB"/>
@@ -91,19 +91,19 @@
                                     </subviews>
                                     <color key="backgroundColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
                                 </view>
-                                <view contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="QQz-k4-p1X" userLabel="Delivery View">
+                                <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="QQz-k4-p1X" userLabel="Delivery View">
                                     <rect key="frame" x="272" y="0.0" width="95" height="30"/>
                                     <subviews>
-                                        <imageView userInteractionEnabled="NO" contentMode="scaleAspectFit" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" image="delivery" translatesAutoresizingMaskIntoConstraints="NO" id="c07-Ur-xyj">
+                                        <imageView userInteractionEnabled="NO" contentMode="scaleAspectFit" horizontalHuggingPriority="251" verticalHuggingPriority="251" image="delivery" translatesAutoresizingMaskIntoConstraints="NO" id="c07-Ur-xyj">
                                             <rect key="frame" x="8" y="5" width="20" height="20"/>
                                         </imageView>
-                                        <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" text="Free Delivery" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="CwL-dX-b01">
+                                        <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Free Delivery" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="CwL-dX-b01">
                                             <rect key="frame" x="31" y="2" width="64" height="15"/>
                                             <fontDescription key="fontDescription" type="system" pointSize="10"/>
                                             <color key="textColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
                                             <nil key="highlightedColor"/>
                                         </label>
-                                        <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" text="(metro manila only)" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="6jg-sv-22l">
+                                        <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="(metro manila only)" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="6jg-sv-22l">
                                             <rect key="frame" x="31" y="14" width="64" height="5"/>
                                             <fontDescription key="fontDescription" type="system" pointSize="6"/>
                                             <color key="textColor" white="0.33333333333333331" alpha="1" colorSpace="calibratedWhite"/>
diff --git a/YiLinkerOnlineBuyer/resources/Xib/ShipToTableViewCell.xib b/YiLinkerOnlineBuyer/resources/Xib/ShipToTableViewCell.xib
index ae7ed40..8cfcb17 100644
--- a/YiLinkerOnlineBuyer/resources/Xib/ShipToTableViewCell.xib
+++ b/YiLinkerOnlineBuyer/resources/Xib/ShipToTableViewCell.xib
@@ -109,6 +109,7 @@
                 </constraints>
             </tableViewCellContentView>
             <connections>
+                <outlet property="addressLabel" destination="tC8-Yd-occ" id="s39-3x-oyK"/>
                 <outlet property="arrowImageView" destination="G2W-GT-co0" id="vt7-tA-cYY"/>
                 <outlet property="changeAddressLabel" destination="SrV-Sm-muB" id="JPC-wT-o17"/>
                 <outlet property="defaultAddressLabel" destination="jzk-DI-tsJ" id="uf2-iG-JUD"/>
-- 
2.3.2 (Apple Git-55)

